{"pages":[{"title":"about","text":"","link":"/categories/index.html"},{"title":"前端","text":"在这里放置学习前端的内容 初来乍到，请多多包涵","link":"/JS/index.html"},{"title":"about","text":"","link":"/tags/index.html"},{"title":"","text":"","link":"/about/index.html"},{"title":"","text":"申请友链须知 原则上只和技术类博客交换，但不包括含有和色情、暴力、政治敏感的网站。 不和剽窃、侵权、无诚信的网站交换，优先和具有原创作品的网站交换。 申请请提供：站点名称、站点链接、站点描述、logo或头像（不要设置防盗链）。 排名不分先后，刷新后重排，更新信息后请留言告知。 会定期清理很久很久不更新的、不符合要求的友链，不再另行通知。 本站不存储友链图片，如果友链图片换了无法更新。图片裂了的会替换成默认图，需要更换的请留言告知。 本站友链信息如下，申请友链前请先添加本站信息： 网站图标：https://removeif.github.io/images/avatar.jpg 网站名称：辣椒の酱 网站地址：https://removeif.github.io 网站简介：后端开发，技术分享 加载中，稍等几秒...","link":"/friend/index.html"},{"title":"","text":"🎈🎈女神墙🎈🎈 彭小苒 李一桐 张羽习 图片搜集于互联网，侵权请留言，马上处理😊。","link":"/album/index.html"},{"title":"","text":"来而不往非礼也畅所欲言，有留必应","link":"/message/index.html"},{"title":"","text":"碎碎念 tips：github登录后按时间正序查看、可点赞加❤️、本插件地址..「+99次查看」 碎碎念加载中，请稍等... $.getScript(\"/js/gitalk_self.min.js\", function () { var title = location.pathname.substr(0, 50); var gitalk = new Gitalk({ clientID: '0458cfc88b10a3354fbd', clientSecret: 'a32d7d664626d75fb35e6ec3e812ec5726b5dab6', id: title, repo: 'blogtalk', owner: 'leewei0923', admin: 'leewei0923', createIssueManually: true, distractionFreeMode: false }); gitalk.render('comment-container1'); });","link":"/self-talking/index.html"}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/06/19/hello-world/"},{"title":"css之翻转变幻","text":"直接看源码吧 css 12345678910111213141516171819202122232425262728293031323334353637383940414243444546body{ min-height: 500px; padding: 0; margin: 0; display: flex; justify-content: center; align-items: center; background-color: #1db7c2; } .card{ position: relative; width: 100px; height: 100px; perspective: 1000px; } .cover,.back{ background-color: rgba(255,255,255,0.5); position: absolute; width: 100px; height: 100px; display: flex; justify-content: center; align-items: center; backface-visibility: hidden; transition: all 1s ease-in-out; } .cover{ transform: rotateY(0deg); } .back{ transform: rotateY(-180deg); } .card:hover .cover{ transform: rotateY(180deg); } .card:hover .back{ transform: rotateY(0deg); } body部分 12345 &lt;div class=&quot;card&quot;&gt; &lt;div class=&quot;cover&quot;&gt;cover&lt;/div&gt; &lt;div class=&quot;back&quot;&gt;back&lt;/div&gt;&lt;/div&gt;","link":"/2020/07/05/css%E4%B9%8B%E7%BF%BB%E8%BD%AC%E5%8F%98%E5%B9%BB%E2%80%94%E2%80%94%E5%AE%9E%E8%B7%B5%EF%BC%88%E4%B8%80%EF%BC%89/"},{"title":"小程序|瀑布布局","text":"直接看源码吧 wxml: 12345678 &lt;view class='case-page'&gt; &lt;view class='list-masonry'&gt; &lt;view class='item-masonry' wx:for=&quot;{{note}}&quot;&gt; &lt;image src='{{item.url}}' mode='widthFix'&gt;&lt;/image&gt; &lt;text&gt;{{item.title}}&lt;/text&gt; &lt;/view&gt; &lt;/view&gt;&lt;/view&gt; wxss: 1234567891011121314151617181920page{ background-color: #eee;}.case-page{ padding:20rpx;}.list-masonry{ column-count: 2; column-gap: 20rpx;}.item-masonry{ background-color: #fff; break-inside: avoid;/*避免在元素内部插入分页符*/ box-sizing: border-box; padding: 20rpx; margin-bottom:20rpx;}.item-masonry image { width: 100%;} JS: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647Page({ /** * 页面的初始数据 */ data: { imgWidth: 0, imgHeight: 0, note: [ { title: '案例名称', url: 'http://zq.jhcms.cn/attachs/photo/201711/20171130_176CFE51B6710715B1BBBEF2F86ACB0C.jpg', }, { title: '你所不知道的红酒知识', url: 'http://img3.imgtn.bdimg.com/it/u=1417732605,3777474040&amp;fm=26&amp;gp=0.jpg', }, { title: '红酒知识', url: 'http://f10.baidu.com/it/u=121654667,1482133440&amp;fm=72', }, { title: '案例名称', url: 'http://zq.jhcms.cn/attachs/photo/201711/20171130_9E39DA252E3946BE36218D85876C4AB4.jpg', }, { title: '案例名称', url: 'http://img3.imgtn.bdimg.com/it/u=1417732605,3777474040&amp;fm=26&amp;gp=0.jpg' }, { title: '案例名称', url: 'http://f10.baidu.com/it/u=121654667,1482133440&amp;fm=72' }, { title: '案例名称', url: 'http://img4.imgtn.bdimg.com/it/u=2748975304,2710656664&amp;fm=26&amp;gp=0.jpg' }, { title: '案例名称', url: 'http://img2.imgtn.bdimg.com/it/u=1561660534,130168102&amp;fm=26&amp;gp=0.jpg' }, { title: '案例名称', url: 'http://img3.imgtn.bdimg.com/it/u=1417732605,3777474040&amp;fm=26&amp;gp=0.jpg' } ] }})","link":"/2020/07/07/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E2%80%94%E5%B8%83%E5%B1%80(%E4%B8%80)/"},{"title":"网页编写实操","text":"前记 这是第一次实际操作，灵感来源于天天提交的健康信息报告，每天都要在qq汇报弄这个健康信息填报网页，花了我很长的时间，更多的是去寻找合适的资料。其实，有点找现成的代码不用那么麻烦自己。但是实际过程中，适配自己的网页，花了我不少的时间，因为不是一个代码，拿来就可以编写用的还要结合自己的思考，现在开始总结我在编写中的经验，以备后用，和启发未来者。 此次用的语言是PHP ，mysql,html，css 前端的页面我在网站找现成的组件，没有自己编写，剩下不少的时间，主要就是和后端尤其是数据库的交互， 我找的代码也没有很多，ctrl+c/v ，希望未来可以想出自己的代码。一个功能的实现，代码并不是唯一的，也是有很多 的方法的，就看你有没有想法了。 index.html界面最新也是比较老套的提交表单方式，利用form来提交123&lt;form action=&quot;&quot; method=&quot;&quot; target=&quot;&quot; &gt;&lt;button type=&quot;sumit&quot;&gt;按钮&lt;/button&gt;&lt;/form&gt; 页面的重置按钮其实页面重置的按钮，实现这个功能的难度不大，只要记得那个 type的属性是reset代码如下 1&lt;input type=&quot;reset&quot; name=&quot;&quot;&gt; 很简单的实现了这个功能 其他不重要的功能就是输入框，然后利用标签我一开始有一个bate版本，那个很简陋，就是实现简单的功能，毫无美感，用了输入框，没用标签，用了文字作为前面的引言 12&lt;label&gt;&lt;/label&gt; 这是个标签 &lt;input type=&quot;text&quot; name=&quot;&quot;&gt; 这是个输入框 在index.html中运用的技术不是特别多，就是简单的提交输入的功能等，不过与数据库交互，用了一点的技术connect.php 这个文件，是与index.html进行交互的后端处理程序在这个后端的处理程序，主要技术就是php+mysql，对数据进行处理。mysql中运用的知识就是对数据的增删改查功能。在这个中，主要用的是对数据的插入功能，获取到前面的表单提交的数据，然后插入到数据中要定义好input中的name利用post来获取数据，post相对于get安全性更高一点 12$name=$_POST[''];利用这个来获取前端表单发来的数据 $ip = $_SERVER[&quot;REMOTE_ADDR&quot;]; 这个语句是用来获取用户提交的ip地址，然后在后面的语句插入数据库 get_magic_quotes_gpc()中的这个函数用来防止sql注入，将一些注释字符，化为转义字符 但是对这个用法，我还是不是很了解 在connect.php中,加入if的判断这个功能的实现还是依赖数据库查询，在插入数据前，查询一下今天的表有没有这个ip的存在如果有，就返回错误，给予今日ip提交已达上限的提示；如果不存在，就插入数据，也是比较简单的 1234567891011@$db=mysqli_connect('localhost','root','666666',shiyan); 链接数据的代码$lianjie=&quot;select ip from jiankang where ip ='$ip'; &quot;; 这个是插入前的查询if(mysqli_query($db,$lianjie)){ //if的判断 echo &quot;该ip地址今日提交已达上限,不可提交&quot;; }else { if(mysqli_connect_errno()){ echo &quot;错误:你没有连接上数据库&quot;; exit; } $q=&quot;insert into jiankang(姓名,是否健康,有无外出,附近有无确诊病例,ip) values('$name','$healthy','$waichu','$healthy2','$ip')&quot;;","link":"/2020/07/13/%E9%A1%B9%E7%9B%AE%E6%84%9F%E6%82%9F/"},{"title":"javascript语言学习","text":"2020.07.27 123456789var web = &quot;&quot;; //js公共域function show(){ } //属于私有领域,在其中要用var申明变量show(); //运行程序console.log(web); //打印内容 (二)避免全局污染需要使用var , let , const 2020.07.27(三)基本的JavaScript：使用变量构造字符串有时您需要构建一个字符串，Mad Libs风格。通过使用串联运算符（+），您可以将一个或多个变量插入正在构建的字符串中。 例： 123var ourName = &quot;freeCodeCamp&quot;;var ourStr = &quot;Hello, our name is &quot; + ourName + &quot;, how are you?&quot;;// ourStr is now &quot;Hello, our name is freeCodeCamp, how are you?&quot; 基本的JavaScript：查找字符串的长度1234567// Setupvar lastNameLength = 0;var lastName = &quot;Lovelace&quot;;// Only change code below this linelastNameLength = lastName.length; 基本的JavaScript：使用括号表示法查找字符串中的第一个字符括号表示法是一种index在字符串中的特定位置获取字符的方法。 大多数现代编程语言（例如JavaScript）都不会像人类一样从1开始计数。它们从0开始。这称为基于零的索引。 例如，单词“ Charles”中索引0处的字符为“ C”。因此，如果使用var firstName = “Charles”，您可以获取字符串的第一个字母的值firstName[0]。 例： 12var firstName = &quot;Charles&quot;;var firstLetter = firstName[0]; // firstLetter is &quot;C&quot; 123456// Setupvar firstLetterOfLastName = &quot;&quot;;var lastName = &quot;Lovelace&quot;;// Only change code below this linefirstLetterOfLastName = lastName[0]; // Change this line 基本的JavaScript：使用括号表示法在字符串中查找第N个字符您也可以使用方括号表示法来获取字符在字符串中其他位置的位置。 请记住，计算机从开始计数0，因此第一个字符实际上是第零个字符。 例： 12var firstName = &quot;Ada&quot;;var secondLetterOfFirstName = firstName[1]; 12345// Setupvar lastName = &quot;Lovelace&quot;;// Only change code below this linevar thirdLetterOfLastName = lastName[2]; // Change this line 基本的JavaScript：使用括号表示法查找字符串中的最后一个字符为了获得字符串的最后一个字母，您可以从字符串的长度中减去一个。 例如，如果使用var firstName = “Charles”，则可以获取字符串的最后一个字母的值firstName[firstName.length - 1]。 例： 12var firstName = &quot;Charles&quot;;var lastLetter = firstName[firstName.length - 1]; 123456// Setupvar lastName = &quot;Lovelace&quot;;// Only change code below this linevar lastLetterOfLastName = lastName[lastName.length-1]; // Change this lineconsole.log(lastLetterOfLastName); 基本JavaScript：带索引的访问数组数据我们可以使用索引访问数组内部的数据。 数组索引使用与字符串相同的括号表示法，除了在数组中指定一个条目外，它们不指定字符。像字符串一样，数组使用从零开始的索引，因此数组中的第一个元素的索引为0。 例 123var array = [50,60,70];array[0]; // equals 50var data = array[1]; // equals 60 ** 数组名称和方括号之间不应有空格，例如array [0]。尽管JavaScript能够正确处理此问题，但这可能会使其他程序员混淆您的代码。 ** 12345// Setupvar myArray = [50,60,70];var myData=myArray[0];// Only change code below this lineconsole.log(myData); 基本的JavaScript：使用索引修改数组数据与字符串不同，数组的条目是可变的，可以自由更改。 例 12var ourArray = [50,40,30];ourArray[0] = 15; // equals [15,40,30] 注意数组名称和方括号之间不应有空格，例如array [0]。尽管JavaScript能够正确处理此问题，但这可能会使其他程序员混淆您的代码。 将索引0为处存储的数据修改myArray为的值45。 基本的JavaScript：使用索引访问多维数组多维数组的一种思考方式是将数组作为数组。当您使用方括号来访问数组时，第一组方括号指的是最外层（第一层）数组中的条目，每对额外的方括号对指的是内部下一级别的条目。 例 123456789var arr = [ [1,2,3], [4,5,6], [7,8,9], [[10,11,12], 13, 14]];arr[3]; // equals [[10,11,12], 13, 14]arr[3][0]; // equals [10,11,12]arr[3][0][1]; // equals 11 注意数组名称和方括号之间不应有空格，例如array [0][0]，甚至array [0] [0]不允许这样做。尽管JavaScript能够正确处理此问题，但这可能会使其他程序员混淆您的代码。 2020.07.29基本的JavaScript：使用push（）处理数组** 其实就是在数组后面添加一个数** 将数据附加到数组末尾的简单方法是通过push()函数。 .push()接受一个或多个参数并将它们“推”到数组的末尾。 例子： 1234567var arr1 = [1,2,3];arr1.push(4);// arr1 is now [1,2,3,4]var arr2 = [&quot;Stimpson&quot;, &quot;J&quot;, &quot;cat&quot;];arr2.push([&quot;happy&quot;, &quot;joy&quot;]);// arr2 now equals [&quot;Stimpson&quot;, &quot;J&quot;, &quot;cat&quot;, [&quot;happy&quot;, &quot;joy&quot;]] 基本的JavaScript：使用pop（）处理数组更改数组中数据的另一种方法是使用.pop()函数。 .pop()用于从数组末尾“弹出”一个值。我们可以通过将“弹出”值分配给变量来存储它。换句话说，.pop()从数组中删除最后一个元素并返回该元素。 任何类型的条目都可以从数组中“弹出”-数字，字符串，甚至是嵌套数组。 1234var threeArr = [1, 4, 6];var oneDown = threeArr.pop();console.log(oneDown); // Returns 6console.log(threeArr); // Returns [1, 4] 基本的JavaScript：使用shift（）处理数组pop()总是删除数组的最后一个元素。如果要删除第一个怎么办？ 就是这样.shift()了。它的工作原理与一样.pop()，只是它删除了第一个元素而不是最后一个元素。 例： 123var ourArray = [&quot;Stimpson&quot;, &quot;J&quot;, [&quot;cat&quot;]];var removedFromOurArray = ourArray.shift();// removedFromOurArray now equals &quot;Stimpson&quot; and ourArray now equals [&quot;J&quot;, [&quot;cat&quot;]]. 基本的JavaScript：使用unshift（）处理数组您不仅可以将shift元素移出数组的开头，还可以将unshift元素移到数组的开头，即在数组的前面添加元素。 .unshift()的工作方式与完全相同.push()，但不是在数组的末尾添加元素，而是在数组unshift()的开头添加了元素。 例： 1234var ourArray = [&quot;Stimpson&quot;, &quot;J&quot;, &quot;cat&quot;];ourArray.shift(); // ourArray now equals [&quot;J&quot;, &quot;cat&quot;]ourArray.unshift(&quot;Happy&quot;);// ourArray now equals [&quot;Happy&quot;, &quot;J&quot;, &quot;cat&quot;] 基本的JavaScript：使用函数编写可重用的JavaScript在JavaScript中，我们可以将代码分成称为函数的可重用部分。 这是一个函数示例： 1234function functionName() { console.log(&quot;Hello World&quot;);}functionName(); 您可以通过在函数名称后加上括号来调用或调用该函数，如下所示：functionName(); 每次调用该函数 时，它将”Hello World”在开发人员控制台上打印出消息。每次调用函数时，花括号之间的所有代码都将执行。 基本的JavaScript：使用参数将值传递给函数参数是变量，用作变量被调用时将输入到该函数的值的占位符。定义功能时，通常将其与一个或多个参数一起定义。调用函数时输入（或“传递”）到函数中的实际值称为参数。 这是一个带有两个参数的函数，param1并且param2： 123function testFun(param1, param2) { console.log(param1, param2);} 然后我们可以调用testFun： testFun(“Hello”, “World”); 我们传递了两个参数，”Hello”和”World”。在函数内部，param1将等于“ Hello”，param2并将等于“ World”。请注意，您可以testFun使用不同的参数再次调用，并且这些参数将采用新参数的值。 基本的JavaScript：全局范围和功能在JavaScript中，范围是指变量的可见性。在功能块之外定义的变量具有全局作用域。这意味着它们可以在您的JavaScript代码中随处可见。 没有var关键字使用的变量将在global范围内自动创建。这可能会在代码的其他地方或再次运行函数时产生意外的后果。您应该始终使用声明变量var。 基本的JavaScript：使用Return从函数返回值我们可以将值传递给带有参数的函数。您可以使用return语句将值发送回函数之外。 例 12345function plusThree(num) { return num + 3;}var answer = plusThree(5); // 8plusThree需要一个参数为num并返回一个值等于num + 3。 创建一个timesFive接受一个参数的函数，将其乘以5，然后返回新值。有关如何测试timesFive功能的示例，请参见编辑器的最后一行。 12345function timesFive(num){ return num*5;}timesFive(5);console.log(timesFive(5)); 基本的JavaScript：了解从函数返回的未定义值函数可以包含该return语句，但不是必须的。如果该函数没有return语句，则在调用它时，该函数将处理内部代码，但返回值是undefined。 例 1234var sum = 0;function addSum(num) { sum = sum + num;} addSum(3); // sum will be modified but returned value is undefinedaddSum是一个没有return声明的函数。函数将更改全局sum变量，但函数的返回值为undefined。 创建一个addFive不带任何参数的函数。此函数将5加到sum变量中，但返回值是undefined。 123456789101112131415161718// Setupvar sum = 0;function addThree() { sum = sum + 3;}// Only change code below this linefunction addFive(){ sum=sum+5; }// Only change code above this lineaddThree();addFive();console.log(sum); 2020年8月27日15:18:31 基本JavaScript：与Equality运算符的比较JavaScript中有许多比较运算符。所有这些运算符均返回布尔值true或false值。 最基本的运算符是相等运算符==。相等运算符比较两个值，true如果相等或false不相等，则返回。请注意，相等与赋值（=）不同，赋值（）将运算符右侧的值赋给左侧的变量。 123456function equalityTest(myVal) { if (myVal == 10) { return &quot;Equal&quot;; } return &quot;Not Equal&quot;;} 如果myVal等于10，则返回equals运算符true，因此花括号中的代码将执行，该函数将返回”Equal”。否则，函数将返回”Not Equal”。为了让JavaScript比较两种不同的数据类型（例如numbers和strings），它必须将一种类型转换为另一种类型。这称为“类型强制”。但是，一旦完成，它可以比较以下各项： 12341 == 1 // true1 == 2 // false1 == '1' // true&quot;3&quot; == 3 // true 基本JavaScript：与严格相等运算符的比较严格等于（===）与等于运算符（==）相对应。但是，与尝试将两个值都转换为通用类型的相等运算符不同，严格相等运算符不执行类型转换。 如果要比较的值具有不同的类型，则将它们视为不相等，并且严格相等运算符将返回false。 例子 12343 === 3 // true3 === '3' // false在第二个示例中，3是Number类型，'3'是String类型。 基本JavaScript：与不等式运算符的比较不等式运算符（!=）与等式运算符相反。它的意思是“不等于”，并false在等于返回的地方返回true，反之亦然。与相等运算符一样，不相等运算符将在比较时转换值的数据类型。 例子 123451 != 2 // true1 != &quot;1&quot; // false1 != '1' // false1 != true // false0 != false // false 基本的JavaScript：与逻辑和运算符的比较有时，您一次需要测试多个功能。该逻辑与操作符（&amp;&amp;）返回时true，当且仅当操作数的左，右它是真实的。 将if语句嵌套在另一个if中可以达到相同的效果： 123456if (num &gt; 5) { if (num &lt; 10) { return &quot;Yes&quot;; }}return &quot;No&quot;; 如果num大于5和小于，则只会返回“是” 10。相同的逻辑可以写成： 1234if (num &gt; 5 &amp;&amp; num &lt; 10) { return &quot;Yes&quot;;}return &quot;No&quot;; 基本JavaScript：与逻辑或运算符的比较的逻辑或运算符（||）返回true如果任一的操作数是true。否则，返回false。 的逻辑或操作是由两个管符号：（ ||）。通常可以在Backspace键和Enter键之间找到它。 从以前的观点来看，以下模式应该看起来很熟悉： 1234567if (num &gt; 10) { return &quot;No&quot;;}if (num &lt; 5) { return &quot;No&quot;;}return &quot;Yes&quot;; 仅当num介于5和之间10（包括5和10）时，才会返回“是” 。相同的逻辑可以写成： 1234if (num &gt; 10 || num &lt; 5) { return &quot;No&quot;;}return &quot;Yes&quot;; 基本的JavaScript：构建JavaScript对象您可能以前听过这个词object。 对象与对象相似arrays，除了对象不使用索引来访问和修改其数据，而是通过所谓的访问对象中的数据properties。 对象对于以结构化方式存储数据很有用，并且可以表示现实世界中的对象，例如猫。 这是一个示例猫对象： 123456var cat = { &quot;name&quot;: &quot;Whiskers&quot;, &quot;legs&quot;: 4, &quot;tails&quot;: 1, &quot;enemies&quot;: [&quot;Water&quot;, &quot;Dogs&quot;]}; 在此实例中，所有的属性存储为字符串，如- ，”name”，”legs”和”tails”。但是，您也可以将数字用作属性。您甚至可以省略单字字符串属性的引号，如下所示： 12345var anotherObject = { make: &quot;Ford&quot;, 5: &quot;five&quot;, &quot;model&quot;: &quot;focus&quot;}; 但是，如果您的对象具有任何非字符串属性，则JavaScript会自动将其类型转换为字符串。 基本的JavaScript：使用点符号访问对象属性有两种方法可以访问对象的属性：点表示法（.）和括号表示法（[]），类似于数组。 当您提前知道要访问的属性的名称时，便使用点符号。 以下是使用点符号（.）读取对象属性的示例： 123456var myObj = { prop1: &quot;val1&quot;, prop2: &quot;val2&quot;};var prop1val = myObj.prop1; // val1var prop2val = myObj.prop2; // val2 基本的JavaScript：使用方括号表示法访问对象属性访问对象属性的第二种方法是括号表示法（[]）。如果您尝试访问的对象的属性名称中带有空格，则需要使用方括号表示法。 但是，您仍然可以在不带空格的对象属性上使用方括号表示法。 这是使用括号表示法读取对象属性的示例： 12345678var myObj = { &quot;Space Name&quot;: &quot;Kirk&quot;, &quot;More Space&quot;: &quot;Spock&quot;, &quot;NoSpace&quot;: &quot;USS Enterprise&quot;};myObj[&quot;Space Name&quot;]; // KirkmyObj['More Space']; // SpockmyObj[&quot;NoSpace&quot;]; // USS Enterprise ** 请注意，其中带有空格的属性名称必须用引号引起来（单或双）。** 基本的JavaScript：使用变量访问对象属性在对象上使用括号表示法的另一种用法是访问存储为变量值的属性。这对于遍历对象的属性或访问查找表时非常有用。 这是使用变量访问属性的示例： 123456var dogs = { Fido: &quot;Mutt&quot;, Hunter: &quot;Doberman&quot;, Snoopie: &quot;Beagle&quot;};var myDog = &quot;Hunter&quot;;var myBreed = dogs[myDog];console.log(myBreed); // &quot;Doberman&quot; 使用此概念的另一种方法是在程序执行期间动态收集属性名称，如下所示： 123456789var someObj = { propName: &quot;John&quot;};function propPrefix(str) { var s = &quot;prop&quot;; return s + str;}var someProp = propPrefix(&quot;Name&quot;); // someProp now holds the value 'propName'console.log(someObj[someProp]); // &quot;John&quot; ** 请注意，在使用变量名访问属性时，我们不会在变量名前后使用引号，因为我们使用的是变量的值，而不是name。** 这种我感觉有种脱裤子放屁的感觉 基本的JavaScript：向JavaScript对象添加新属性您可以通过修改现有属性的方式向现有JavaScript对象添加新属性。 这是我们将”bark”属性添加到的方法ourDog： 1ourDog.bark = &quot;bow-wow&quot;; 要么 1ourDog[&quot;bark&quot;] = &quot;bow-wow&quot;; 现在，当我们进行评估时ourDog.bark，我们将得到他的树皮，“哇”。 例： 12345678var ourDog = { &quot;name&quot;: &quot;Camper&quot;, &quot;legs&quot;: 4, &quot;tails&quot;: 1, &quot;friends&quot;: [&quot;everything!&quot;]};ourDog.bark = &quot;bow-wow&quot;; 基本的JavaScript：从JavaScript对象删除属性我们还可以从这样的对象中删除属性： 1delete ourDog.bark; 例： 1234567var ourDog = { &quot;name&quot;: &quot;Camper&quot;, &quot;legs&quot;: 4, &quot;tails&quot;: 1, &quot;friends&quot;: [&quot;everything!&quot;], &quot;bark&quot;: &quot;bow-wow&quot;}; 1delete ourDog.bark; 在上面显示的最后一行之后，如下所示ourDog： 123456{ &quot;name&quot;: &quot;Camper&quot;, &quot;legs&quot;: 4, &quot;tails&quot;: 1, &quot;friends&quot;: [&quot;everything!&quot;]} 基本的JavaScript：使用对象进行查找可以将对象视为字典的键/值存储。如果您具有表格数据，则可以使用对象来“查找”值，而不是switch语句或if/else链。当您知道输入数据被限制在一定范围内时，此功能最为有用。 这是一个简单的反向字母查找示例： 123456789101112131415var alpha = { 1:&quot;Z&quot;, 2:&quot;Y&quot;, 3:&quot;X&quot;, 4:&quot;W&quot;, ... 24:&quot;C&quot;, 25:&quot;B&quot;, 26:&quot;A&quot;};alpha[2]; // &quot;Y&quot;alpha[24]; // &quot;C&quot;var value = 2;alpha[value]; // &quot;Y&quot; 基本的JavaScript：测试对象的属性有时检查给定对象的属性是否存在很有用。我们可以使用.hasOwnProperty(propname)对象的方法来确定该对象是否具有给定的属性名称。.hasOwnProperty()返回true或者false是否找到该属性。 例 123456var myObj = { top: &quot;hat&quot;, bottom: &quot;pants&quot;};myObj.hasOwnProperty(&quot;top&quot;); // truemyObj.hasOwnProperty(&quot;middle&quot;); // false 基本的JavaScript：访问嵌套数组正如我们在前面的示例中看到的那样，对象可以同时包含嵌套对象和嵌套数组。与访问嵌套对象类似，可以将数组括号符号链接起来以访问嵌套数组。 这是有关如何访问嵌套数组的示例： 1234567891011121314151617181920var ourPets = [ { animalType: &quot;cat&quot;, names: [ &quot;Meowzer&quot;, &quot;Fluffy&quot;, &quot;Kit-Cat&quot; ] }, { animalType: &quot;dog&quot;, names: [ &quot;Spot&quot;, &quot;Bowser&quot;, &quot;Frankie&quot; ] }];ourPets[0].names[1]; // &quot;Fluffy&quot;ourPets[1].names[0]; // &quot;Spot&quot; 基本的JavaScript：记录收集您将获得一个JSON对象，该对象代表您的音乐专辑收藏中的一部分。每张专辑都有一个唯一的ID号作为其密钥以及其他几个属性。并非所有专辑都有完整的信息。 你开始的updateRecords，它接受一个对象类的函数collection，一个id，一个prop（如artist或tracks），和value。使用以下规则来完成该功能，以修改传递给该功能的对象。 您的函数必须始终返回整个对象。如果prop不是tracks并且value不是空字符串，请将该专辑的更新或设置prop为value。如果prop是，tracks但是相册没有tracks属性，请创建一个空数组并添加value到其中。如果prop是tracks且value不是空字符串，则将其添加value到相册现有tracks数组的末尾。如果value为空字符串，prop则从相册中删除给定的属性。 基本JavaScript：使用JavaScript For循环进行迭代您可以使用循环多次运行相同的代码。 JavaScript循环的最常见类型称为for循环，因为它可以“运行”特定次数。 用三个用分号分隔的可选表达式声明for循环： 1for ([initialization]; [condition]; [final-expression]) 该initialization语句仅在循环开始之前执行一次。它通常用于定义和设置循环变量。 该condition语句在每次循环迭代开始时进行评估，并且只要评估为就会继续true。如果condition是false在迭代开始时，循环将停止执行。这意味着，如果condition启动为false，则循环将永远不会执行。 将final-expression在每个循环迭代结束时执行，下前condition检查，通常用于递增或递减的循环计数器。 在下面的示例中i = 0，当条件i &lt; 5为真时，我们使用进行初始化和迭代。我们将增加i通过1在每个循环迭代i++作为我们的final-expression。 1234var ourArray = [];for (var i = 0; i &lt; 5; i++) { ourArray.push(i);} 基本的JavaScript：用for循环迭代奇数对于循环，不必一次迭代一次。通过更改final-expression，我们可以按偶数计数。 我们将从开始i = 0并循环一会儿i &lt; 10。i每个循环我们将用增加2 i += 2。 1234var ourArray = [];for (var i = 0; i &lt; 10; i += 2) { ourArray.push(i);} ourArray现在将包含[0,2,4,6,8]。让我们更改一下，initialization以便我们可以按奇数计数。 基本的JavaScript：使用For循环向后计数只要我们可以定义正确的条件，for循环也可以倒数。 为了通过三三两两来算倒退，我们需要改变我们的initialization，condition和final-expression。 我们将从开始i = 10并循环一会儿i &gt; 0。我们将i每个循环递减2 i -= 2。 12345var ourArray = [];for (var i = 10; i &gt; 0; i -= 2) { ourArray.push(i);}ourArray现在将包含[10,8,6,4,2]。让我们进行更改initialization，final-expression这样我们就可以用奇数倒数两位。 基本的JavaScript：使用For循环遍历数组JavaScript的一项常见任务是遍历数组的内容。一种方法是for循环。此代码会将数组的每个元素输出arr到控制台： 1234var arr = [10, 9, 8, 7, 6];for (var i = 0; i &lt; arr.length; i++) { console.log(arr[i]);} 请记住，数组具有从零开始的索引，这意味着数组的最后一个索引是length - 1。此循环的条件是i &lt; arr.length，当i等于时将停止循环length。在这种情况下，最后一次迭代是，i === 4即i等于arr.length并输出6到控制台。","link":"/2020/07/24/javascript/"},{"title":"微信小程序基础学习","text":"2020.07.24浅浅认知 属性 类型 默认值 说明 navigationBarBackgroundColor HexColor #000000 导航栏背景颜色，如＂ ＃00000。” navigationBarTextStyle String white 导航栏标题颜色，仅支持black/white navigationBarTitleText String 导航栏标题文字内容 background Color HexColor ＃fffff backgroundTextStyle String dark 下拉背景字体、loading 图的样式，仅支持dark/light enablePul!DownRefresh Boolean false 设置是否开启下拉刷新","link":"/2020/07/24/miniprograme_a/"},{"title":"小程序|像素小知识","text":"换算是以375个物理像素为基准，也就是在一个宽度为375物理像素的屏幕下，1rpx = 1px。 例子：iPhone6屏幕宽度为375px，共750个物理像素，那么1rpx = 375 / 750 px = 0.5px。 这里微信主要帮我们自行转换了换算单位，用不着dpx和rem布局","link":"/2020/07/08/px/"},{"title":"数据库|知识积累","text":"设置自增加id 建数据库是定义id，例如 1id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT 这样就设置id为自增行，并为主键 设置提交数据库，自动保存当前时间mysql 数据库设置自动添加时间1、将字段类型设为 TIMESTAMP 2、将默认值设为 CURRENT_TIMESTAMP","link":"/2020/07/09/mysql_know/"},{"title":"人生感悟","text":"2020.07.23 哪有什么岁月静好，不过是有人为你负重前行。","link":"/2020/07/23/miss/"},{"title":"小程序零基础学习","text":"零基础学习(一) 简单的点击事件 1234567891011121314wxml:&lt;view&gt;{{msg}}&lt;/view&gt;&lt;button bindtap=&quot;clickme&quot;&gt;点一下&lt;/button&gt;jspage({ clickme:function{ this.setdata({msg:&quot;msg&quot;}) }})以上就是微信小程序中,点击事件的初步 零基础学习（二）获取头像 12345678910111213141516171819202122js: getUserInfo: function(e) { console.log(e) app.globalData.userInfo = e.detail.userInfo this.setData({ userInfo: e.detail.userInfo, hasUserInfo: true }) } wxml: &lt;view class=&quot;userinfo&quot;&gt; &lt;button wx:if=&quot;{{!hasUserInfo &amp;&amp; canIUse}}&quot; open-type=&quot;getUserInfo&quot; bindgetuserinfo=&quot;getUserInfo&quot;&gt; 获取头像昵称 &lt;/button&gt; &lt;block wx:else&gt; &lt;image bindtap=&quot;bindViewTap&quot; class=&quot;userinfo-avatar&quot; src=&quot;{{userInfo.avatarUrl}}&quot; mode=&quot;cover&quot;&gt;&lt;/image&gt; &lt;text class=&quot;userinfo-nickname&quot;&gt;{{userInfo.nickName}}&lt;/text&gt; &lt;/block&gt; &lt;view&gt;{{msg}}&lt;/view&gt; &lt;button bindtap=&quot;dianji&quot;&gt;点一下&lt;/button&gt; &lt;/view&gt; 添加tabbar123456789101112131415app.json中配置 (最少2个，最多5个)&quot;tabBar&quot;: { &quot;list&quot;: [{ &quot;pagePath&quot;: &quot;pages/index/index&quot;, &quot;text&quot;: &quot;首页&quot;, &quot;iconPath&quot;:&quot;图片地址&quot;, &quot;selectIconPath&quot;:&quot;同上&quot; }, { &quot;pagePath&quot;: &quot;pages/logs/index&quot;, &quot;text&quot;: &quot;日志&quot; &quot;iconPath&quot;:&quot;图片地址&quot;, &quot;selectIconPath&quot;:&quot;同上&quot; }] }, 轮播图12345678910111213141516171819wxml:&lt;swiper indicator-dots='true' indicator-color='gray' indicator-active-color='green' autoplay='true' interval='5000' duration='500'&gt; &lt;block wx:for=&quot;{{imgUrl}}&quot;&gt; &lt;swiper-item class=&quot;item_image&quot;&gt; &lt;image src='{{item}}' class='swiper_image' mode=&quot;aspectFill&quot;&gt;&lt;/image&gt; &lt;/swiper-item&gt; &lt;/block&gt;js:imgUrl: [ 'https://a.vimage1.com/upload/brand/upcb/2017/08/11/97/01006302_604x290_80.jpg', 'https://a.vimage1.com/upload/brand/upcb/2017/08/17/153/ias_150293567439328_604x290_80.jpg', 'https://a.vimage1.com/upload/brand/upcb/2017/08/15/53/ias_150276254071689_604x290_80.jpg', 'https://a.vimage1.com/upload/brand/upcb/2017/08/11/154/ias_150244675261299_604x290_80.jpg' ],&lt;/swiper&gt;","link":"/2020/07/15/mini_study/"},{"title":"网页设计|初步(一)","text":"引用本地字库 css 代码：自定义字体 1@font-face { font-family: 'MyFont';/*字体名称*/ src: url('font.ttf'); /*字体源文件*/} 然后在定义就可以了： 1.text{ font-family: MyFont; /*刚刚定义的字体名称*/} postition理解 值 描述 absolute 生成绝对定位的元素，相对于 static 定位以外的第一个父元素进行定位。元素的位置通过 “left”, “top”, “right” 以及 “bottom” 属性进行规定。 margin与paddingmargin定义margin 简写属性在一个声明中设置所有外边距属性。该属性可以有 1 到 4 个值。 说明这个简写属性设置一个元素所有外边距的宽度，或者设置各边上外边距的宽度。 块级元素的垂直相邻外边距会合并，而行内元素实际上不占上下外边距。行内元素的的左右外边距不会合并。同样地，浮动元素的外边距也不会合并。允许指定负的外边距值，不过使用时要小心。 例1： 1margin:10px 5px 15px 20px; 上外边距是 10px 右外边距是 5px 下外边距是 15px 左外边距是 20px 例2： 1margin:10px 5px 15px; 上外边距是 10px 右外边距和左外边距是 5px 下外边距是 15px 例3： 1margin:10px 5px; 上外边距和下外边距是 10px 右外边距和左外边距是 5px 值 描述 auto 浏览器计算外边距。 length 规定以具体单位计的外边距值，比如像素、厘米等。默认值是 0px。 % 规定基于父元素的宽度的百分比的外边距。 inherit 规定应该从父元素继承外边距。","link":"/2020/07/23/web_a/"},{"title":"html&#x2F;css","text":"应用的可访问性：使用HTML5 datetime属性标准化时间 继date主题之后，HTML5还引入了time元素以及datetime用于标准化时间的属性。这是一个内联元素，可以在页面上包装日期或时间。该datetime属性保留该日期的有效格式。这是辅助设备访问的值。通过声明时间的标准化版本，即使在文本中以非正式或口语的方式编写，它也有助于避免混淆。 应用的辅助功能：使用tabindex将键盘焦点添加到元素HTML tabindex属性具有与元素的键盘焦点有关的三个不同的功能。当它在标签上时，表示该元素可以被关注。值（正，负或零的整数）确定行为。 当用户浏览页面时，某些元素（例如链接和表单控件）会自动获得键盘焦点。它与HTML源标记中的元素顺序相同。这个相同的功能可以提供给其他元件，诸如div，span，和p，通过将tabindex=”0”属性上它们。这是一个例子： 1&lt;div tabindex=&quot;0&quot;&gt;I need keyboard focus!&lt;/div&gt; ** 注意：负值tabindex（通常为-1）表示该元素是可聚焦的，但无法通过键盘到达。这种方法通常用于以编程方式将焦点移到内容上（例如当div用于弹出窗口的激活时），并且超出了这些挑战的范围。 ** 响应式布局响应式网页设计原则：创建媒体查询媒体查询是CSS3中引入的一项新技术，可根据不同的视口大小更改内容的表示形式。视口是用户在网页上的可见区域，视用于访问站点的设备而异。 媒体查询由一种媒体类型组成，如果该媒体类型与显示文档的设备类型匹配，则将应用样式。您可以在媒体查询中根据需要选择任意多个选择器和样式。 以下是媒体查询的示例，该查询在设备的宽度小于或等于100px时返回内容： 123456@media (max-width: 100px) { /* CSS Rules */ }```css当设备的高度大于或等于350px时，以下媒体查询将返回内容：```css@media (min-height: 350px) { /* CSS Rules */ } 请记住，仅当媒体类型与所使用设备的媒体类型匹配时，才会应用媒体查询中的CSS。","link":"/2020/07/29/css/"},{"title":"网页设计&#x2F;css","text":"响应式网页设计原则：创建媒体查询媒体查询是CSS3中引入的一项新技术，可根据不同的视口大小更改内容的表示形式。视口是用户在网页上的可见区域，视用于访问站点的设备而异。 媒体查询由一种媒体类型组成，如果该媒体类型与显示文档的设备类型匹配，则将应用样式。您可以在媒体查询中根据需要选择任意多个选择器和样式。 以下是媒体查询的示例，该查询在设备的宽度小于或等于100px时返回内容： 1@media (max-width: 100px) { /* CSS Rules */ } 当设备的高度大于或等于350px时，以下媒体查询将返回内容： 1@media (min-height: 350px) { /* CSS Rules */ } ** 请记住，仅当媒体类型与所使用设备的媒体类型匹配时，才会应用媒体查询中的CSS。** 例子： 123456789101112131415&lt;style&gt; p { font-size: 20px; } /* Only change code below this line */@media (max-height: 800px) { p { font-size: 10px; } } /* CSS Rules */ /* Only change code above this line */&lt;/style&gt; 自适应网页设计原则：使图像具有响应性使用CSS使图像具有响应性实际上非常简单。您只需要向图像添加以下属性： 1234img { max-width: 100%; height: auto;} max-width的100%将确保图像不会比它在容器更宽，而height中auto将会使图像保持其原始宽高比。 例子： 1234567891011&lt;style&gt;.responsive-img {}img { max-width: 100%; height:auto;}&lt;/style&gt; 响应式Web设计原则：使用视网膜图像进行高分辨率显示随着互联网连接设备的增加，它们的尺寸和规格也有所不同，并且它们使用的显示器在内部和外部可能会有所不同。像素密度是一个设备上可能与其他设备不同的方面，这种密度称为“像素每英寸（PPI）”或“每英寸点数（DPI）”。最著名的显示器就是最新的Apple MacBook Pro笔记本电脑和最近的iMac电脑上的“视网膜显示器”。由于“视网膜”和“非视网膜”显示器之间的像素密度不同，因此某些未考虑高分辨率显示器的图像在高分辨率显示器上渲染时可能看起来“像素化”。 使图像正确显示在高分辨率显示器（例如MacBook Pro“视网膜显示器”）上的最简单方法是将其width和height值定义为原始文件的一半。这是仅使用原始高度和宽度一半的图像的示例： 1234&lt;style&gt; img { height: 250px; width: 250px; }&lt;/style&gt;&lt;img src=&quot;coolPic500x500&quot; alt=&quot;A most excellent picture&quot;&gt; 响应式网页设计原则：使版式具有响应性您可以使用视口单位进行响应式排版，而不必使用文本em或不px调整文本大小。视口单位（如百分比）是相对单位，但它们基于不同的项目。视口单位是相对于设备的视口尺寸（宽度或高度），而百分比是相对于父容器元素的大小。 四个不同的视口单位是： vw（视口宽度）：10vw将为视口宽度的10％。vh（视口高度）：3vh将为视口高度的3％。vmin（最小视口）：70vmin将是视口较小尺寸（高度或宽度）的70％。vmax（最大视口）：100vmax将是视口较大尺寸（高度或宽度）的100％。这是一个将body标签设置为视口宽度的30％的示例。 12body { width: 30vw; } CSS Flexbox：使用显示：flex定位两个框本节使用交替的质询样式来说明如何使用CSS灵活地放置元素。首先，挑战将解释理论，然后使用简单的tweet组件进行实际挑战将应用flexbox概念。 将CSS属性display: flex;放在元素上可让您使用其他flex属性来构建响应页面。 #box-container { display: flex; height: 500px; } #box-1 { background-color: dodgerblue; width: 50%; height: 50%; } #box-2 { background-color: orangered; width: 50%; height: 50%; } CSS Flexbox：在Tweet嵌入中添加Flex超级功能右侧是将用作实际示例的推特嵌入。在不同布局下，某些元素看起来会更好。最后的挑战证明了display: flex。在这里，您将把它添加到嵌入的推文中的几个组件中，以开始调整其位置。 body { font-family: Arial, sans-serif; } header { } header .profile-thumbnail { width: 50px; height: 50px; border-radius: 4px; } header .profile-name { margin-left: 10px; } header .follow-btn { margin: 0 0 0 auto; } header .follow-btn button { border: 0; border-radius: 3px; padding: 5px; } header h3, header h4 { margin: 0; } #inner p { margin-bottom: 10px; font-size: 20px; } #inner hr { margin: 20px 0; border-style: solid; opacity: 0.1; } footer { } footer .stats { font-size: 15px; } footer .stats strong { font-size: 18px; } footer .stats .likes { margin-left: 10px; } footer .cta { margin-left: auto; } footer .cta button { border: 0; background: transparent; } Quincy Larson @ossia Follow I meet so many people who are in search of that one trick that will help them work smart. Even if you work smart, you still have to work hard. 1:32 PM - 12 Jan 2018 107 Retweets 431 Likes Share Retweet Like CSS Flexbox：使用flex-direction属性创建一行添加display: flex到元素会将其变成flex容器。这样就可以将该元素的所有子元素对齐到行或列中。通过将flex-direction属性添加到父项并将其设置为行或列来执行此操作。创建一行将使子代水平对齐，创建一列将使子代垂直对齐。 其他选项为flex-direction行反向和列反向。 注意：该flex-direction属性的默认值为row。","link":"/2020/08/02/web2/"},{"title":"网页设计&#x2F;gird布局","text":"CSS网格：使用grid-template-columns添加列 仅仅创建一个网格元素并不会使您走得太远。您还需要定义网格的结构。要将某些列添加到网格，请使用grid-template-columns网格容器上的属性，如下所示： 12345.container { display: grid; grid-template-columns: 50px 50px;} 这将为您的网格提供两列，每列分别为50px宽。赋予grid-template-columns属性的参数数量表示网格中的列数，每个参数的值表示每列的宽度。 CSS网格：使用grid-template-rows添加行您在上一个挑战中创建的网格将自动设置行数。要手动调整行，grid-template-rows请以grid-template-columns与上一个挑战相同的方式使用该属性。 .d1{background:LightSkyBlue;} .d2{background:LightSalmon;} .d3{background:PaleTurquoise;} .d4{background:LightPink;} .d5{background:PaleGreen;} .container { font-size: 40px; width: 100%; background: LightGray; display: grid; grid-template-columns: 50px 50px 100px; /* Only change code below this line */ grid-template-rows: 50px 50px; /* Only change code above this line */ } 1 2 3 4 5 CSS网格：使用CSS网格单位更改列和行的大小您可以使用绝对和相对单位，比如px和em在CSS网格定义的行和列的大小。您也可以使用这些： fr：将列或行设置为可用空间的一小部分， auto：自动将列或行设置为其内容的宽度或高度， %：将列或行调整为容器宽度的百分比。 这是在预览中生成输出的代码： 1grid-template-columns: auto 50px 10% 2fr 1fr; 此代码段创建了五列。第一列与其内容一样宽，第二列为50px，第三列为容器的10％，最后两列为它的容器；剩余的空间分为三部分，第二列分配两个空间，第五列分配一个空间。","link":"/2020/08/11/gird/"},{"title":"小程序学习","text":"数据绑定wxml中 12&lt;view&gt;{{ button }}&lt;/view&gt; js中 12345678page:{ data:{ button:[ ] }} 之后，在view中会加载这个button的值 列表渲染12wx:for=&quot;{{ }}&quot; 这个是寻找数据源，在js中的datawx:for-item=&quot;{{ }}&quot; 这个是相当于改了个别名，让使用item改成这个花括号里的文字 绑定事件12bindtap=&quot;&quot;catxhtap=&quot;&quot;阻止事件冒泡","link":"/2020/08/12/mini/"},{"title":"R语言学习","text":"第一节课 12getwd() 这个代码获取当前的工作目录setwd(&quot;d:/R_edu&quot;) 将当前的工作目录改为R_edu 1print('这是财务人的第一个程序') 1234567print(paste('固定资产的原值是','1000' ,'元'))show： [1] &quot;这是财务人的第一个程序&quot;paste连接的意思，将三个文字进行连接起来show: [1] &quot;固定资产的原值是 1000 元&quot; 第二节课例题： 123456已知固定资产的原值是10000元，按5年进行折旧，无残值，每年折旧是多少？amount &lt;- 10000year &lt;- 5deprectation &lt;- amount/yearprint(paste('固定资产的原值是','1000','元')) 1234引用一个包require()libary(&quot;mice&quot;)data() 内置数据集 列出已经载入的包head(数据集名称) 查看前六行数据 调用不是基础包中的数据如：data(cars93,package = “MASS”) MASS是R包名称，cars93是数据集的名称head(iris,10)这个是查看iris这个数据集的前10 行，head()默认是前6行 第三节课1、四种数据类型 character -字符型，被引号包围 complex -复数型 logical -逻辑型NA是数据的缺失值，空值NULL 1is.na 检查是不是缺失值 12f &lt;- TRUEf 查看对象的类型typeof&gt;class&gt;modemode 函数只能查看数据的大类class 函数查看数据的类typeof 函数则更加细化 is.chacter() 判断是不是字符型as.charater() 转换成字符型 查找向量1234x1 &lt;-c(1,2,NA,4,5) 设置向量1,2,NA,4,5x1[1:3] 查找从第一个到第三个x1[c(1,2,5)]x1[-1] 向量一维数组 数值型 字符型， 逻辑型 创建一个一个向量c()，要用逗号隔开 1234产生序列n:m, ---&gt; 产生n到m的整数序列seq(from=n , to=m ,by=步长) ---&gt;产生等差数列rep(n,times = m ) ---&gt;产生重复值数列 上课的练习题： 12345678a &lt;- c(1,2,3)b &lt;- c(&quot;one&quot;, &quot;two&quot;,&quot;three&quot;)c &lt;- c(TRUE,TRUE,FALSE,FALSE)class(a)class(b)class(c) 第四节课12345fruit &lt;- c(5,10,1,20)names(fruit) &lt;- c(&quot;orange&quot;,&quot;banana&quot;,&quot;apple&quot;,&quot;peach&quot;)fruit [&quot;orange&quot;]fruit[c(1,3)] 字符索引:一般需要通过names函数进行指定,指定后, 原先的数值索引仍然保留 向量索引给向量传入一个逻辑数值,它会返回一个向量切片,里面只有包含TRUE的元素 一般在进行一些条件判断查询时使用 例子:查询像x1中大于等于2的所有元素 123456x1 &lt;- 1:5 创建向量1,2,3,4,5x1 &gt;=2[1] FALSE TRUE TRUE TRUE TRUE x1[x1 &gt;= 2][1] 2 3 4 5 数据结构-矩阵二维数组,所有元素的数据类型一致 矩阵的创建: 123456789101112131415161718matrix(data,nrow,ncol,byrow) 以向量形式输入矩阵中的全部元素,使用nrow和ncol设置矩阵的行和列数matrix1 &lt;- matrix(c(1:6),nrow=2 ,ncol=3)matrix1 [,1] [,2] [,3][1,] 1 3 5[2,] 2 4 6matrix1 &lt;- matrix(c(1:6),nrow=2 ,ncol=3, byrow=TRUE) 如果要是以行来排列只要使用 byrow=TRUE就可以按照行来排列matrix1[,1] [,2] [,3][1,] 1 2 3[2,] 4 5 6 转置12345678910111213matrix1 &lt;- matrix(1:4,nrow=2)matrix1[,1] [,2][1,] 1 3[2,] 2 4t(matrix1)[,1] [,2][1,] 1 2[2,] 3 4&gt; 矩阵的索引1234matrix1 &lt;- matrix(1:6,nrow=2) x[i,j] 下标为(i,j)的元素 x(i,)第i行 x(,j)第j列matrix1 产生多个12345678910111213141516array1 &lt;- array(1:18 , c(3,3,2))&gt; array1, , 1 [,1] [,2] [,3][1,] 1 4 7[2,] 2 5 8[3,] 3 6 9, , 2 [,1] [,2] [,3][1,] 10 13 16[2,] 11 14 17[3,] 12 15 18 数据框数据框仅次于向量的最重要的数据对象类型数据框 VS 矩阵 12data.frame() 创建数据框 第五节课 2020/10/07查询数据框的索引1234567891011121314151617&gt; name &lt;- c(&quot;xu&quot;,&quot;zhang&quot;,&quot;cui&quot;,&quot;huang&quot;)&gt; English &lt;- c(80,90,80,60)&gt; Math &lt;- c(80,90,80,60)&gt; Art &lt;- c(80,90,80,60)&gt; Score &lt;- data.frame(name,English,Math,Art)&gt; Score name English Math Art1 xu 80 80 802 zhang 90 90 903 cui 80 80 804 huang 60 60 60&gt; &gt; Score[1:2,c(1,4)] name Art1 xu 802 zhang 90 使用sqldf包中的sqldf函数利用sql语句索引 123456789101112name &lt;- c(&quot;xu&quot;,&quot;zhang&quot;,&quot;cui&quot;,&quot;huang&quot;)English &lt;- c(80,90,80,60)Math &lt;- c(80,90,80,60)Art &lt;- c(80,90,80,60)Score &lt;- data.frame(name,English,Math,Art)ScoreScore[1:2,c(1,4)]name &lt;- sqldf(&quot;select * from Score where name == 'xu'&quot;)name 列表可以容纳各种不用的数据类型使用命令list() 1234v1 &lt;- 2:8v2 &lt;- c(&quot;aa&quot;,&quot;bb&quot;,&quot;cc&quot;)m1&lt;- matrix(c(1:9),nrow=3)list(v1,v2,m1) 列表的索引列表下标 [[下标]]列表[[“对象名称”]] 注意列表中的数据对象命名后适用列表$对象名称 读取文件123456789101112tab1 &lt;- read.table(&quot;C:/Users/29555/Desktop/wenjian/read_txt_data.txt&quot;,header=TRUE) 读取的是绝对路径tab1tab2 &lt;- read.table(&quot;/local/read_txt_data.txt&quot;,header = TRUE) 读取的是工作目录的文件tab2csv1 &lt;- read.csv(&quot;local/ADS.csv&quot;,header = TRUE) csv1csv2 &lt;-read.csv(&quot;local/accepts.csv&quot;,header = TRUE)csv2xlsx1 &lt;- read.xlsx(&quot;local/accepts.xlsx&quot;) 使用xlsx需要加载openxlsxxlsx1 123456&lt;p style=&quot;font-size: 30px&quot;&gt;注意&lt;/p&gt;1.查看工作目录:getwd()2.设置工作目录setwd(&quot;&quot;)3.把需要读取文件放入工作目录4.读取文件(不需要写路径,直接文件&quot;姓名&quot;)例如: 第六节课写入数据123write.table write.csvwrite.table(data,'test.txt',sep=',',na='缺失',quote=TRUE,row,names=TRUE,fileEncoding='UTF-8') 123letter &lt;- letters[1:5] r自带的向量[1] &quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot; &quot;g&quot; &quot;h&quot; &quot;i&quot; &quot;j&quot; &quot;k&quot; &quot;l&quot; &quot;m&quot;[14] &quot;n&quot; &quot;o&quot; &quot;p&quot; &quot;q&quot; &quot;r&quot; &quot;s&quot; &quot;t&quot; &quot;u&quot; &quot;v&quot; &quot;w&quot; &quot;x&quot; &quot;y&quot; &quot;z&quot; 详情看下一个","link":"/2020/09/16/R/"},{"title":"javascript-2语言学习","text":"数组练习 (一) sort() 方法以字母顺序对数组进行排序 1234567var box = [&quot;apple&quot;,&quot;huawei&quot;,&quot;xiaomi&quot;,&quot;realme&quot;,&quot;oppo&quot;] //创建一个数组 var phonebrand = box[0]; //显示的是apple console.log(phonebrand); for(i=0;i&lt;box.length;i++){ //遍历数组还有foreach这个函数 document.write(&quot;&lt;li&gt;&quot;+box[i]+&quot;&lt;/li&gt;&quot;); } 数字排序默认地，sort() 函数按照字符串顺序对值进行排序。 该函数很适合字符串（”Apple” 会排在 “Banana” 之前）。 不过，如果数字按照字符串来排序，则 “25” 大于 “100”，因为 “2” 大于 “1”。 正因如此，sort() 方法在对数值排序时会产生不正确的结果。 我们通过一个比值函数来修正此问题： 比值函数比较函数的目的是定义另一种排序顺序。 比较函数应该返回一个负，零或正值，这取决于参数： 1function(a, b){return a-b} 对数组使用 Math.max()您可以使用 Math.max.apply 来查找数组中的最高值： 实例 123function myArrayMax(arr) { return Math.max.apply(null, arr);} 1Math.max.apply([1, 2, 3]) 等于 Math.max(1, 2, 3)。 随机顺序排序数组实例 12var points = [40, 100, 1, 5, 25, 10];points.sort(function(a, b){return 0.5 - Math.random()}); (二) reverse() 方法反转数组中的元素 获取时间(n) new Date()new Date() 用当前日期和时间创建新的日期对象： 实例 1var d = new Date(); toUTCString() 方法将日期转换为 UTC 字符串（一种日期显示标准）。实例 12var d = new Date();document.getElementById(&quot;demo&quot;).innerHTML = d.toUTCString(); toDateString() 方法将日期转换为更易读的格式：实例 12var d = new Date();document.getElementById(&quot;demo&quot;).innerHTML = d.toDateString(); 添加数组1myArry.push() 这个语句可以添加数组","link":"/2020/09/24/js2/"},{"title":"R语言学习2","text":"第七节课创建新变量 1234567891011121314151617181920212223创建数据框 mydata &lt;- data.frame(x1 = c(2,2,6,4),x2 =c(3,4,2,8))&gt; #创建新边框&gt; mydata$sumx &lt;- mydata$x1+mydata$x2&gt; mydata x1 x2 sumx1 2 3 52 2 4 63 6 2 84 4 8 12&gt; mydata$meanx &lt;- (mydata$x1 + mydata$x2)/2&gt; &gt; #创建新变量方法二&gt; mydata &lt;- transform(mydata,sumx =x1+x2,meanx=(x1+x2)/2)&gt; mydata &lt;- data.frame(x1 = c(2,2,6,4),x2 =c(3,4,2,8))&gt; mydata &lt;- transform(mydata,x3=100,x4=&quot;会计&quot;)&gt; mydata x1 x2 x3 x41 2 3 100 会计2 2 4 100 会计3 6 2 100 会计4 4 8 100 会计&gt; 第八节课数据重复可以说那个unique函数去除数据中完全重复发行,也可以利用sql语句中的distinct 1234567accept_nodup1 &lt;- unique(accepts)accept_nodup1 &lt;- unique(accepts)accept_nodup1accept_nodup2 &lt;- sqldf(&quot;select distinct* from accepts &quot;)accept_nodup2 处理原则首选基于业务的填补方法,其次根据单变量分析进行填补 缺失值少于20%连续变量使用均值或中位数分类变量不需要填补,单算一类即可,或者用众数填补\\或直接删除存在缺失值的行,缺失值在20%-80%填补方法同上另外每个有缺失值的变量生成一个指示哑变量. 填补+指示变量不完整数据 1Median=30 取中位数 缺失值填补实例 汽车贷款违约数据集accepts,五年内信用不良事件数量,(tot_derog) 中的缺失值用用均值填补 首先生成tot_derog的均值,再使用is.na表示变量中的缺失值,最后使用均值替代缺失值 12vmean &lt;- mean(accepts$tot_derog,na.rm=TRUE)accepts $tot_derog_empflag &lt;- is.na(accepts$tot_derog) 第九节课删除存在缺失值的行1234567 删除存在缺失值的行汽车存贷款违约数据集,删除存在缺失值得行accepts1 &lt;- read.csv(&quot;local/accepts.csv&quot; ,header=T)nrow(accepts1)accepts1 &lt;- na.omit(accepts1)nrow(accepts1) 12345678910111213#噪声值#数据中有一个或几个数值与其他数值相比差异较大,又称为异常值,离群值#单变量噪声值得处理---盖帽法#对汽车贷款违约数据集accepts,五年内信用不良事件数量(to_derog)进行盖帽法处理accepts1 &lt;- read.csv(&quot;local/accepts.csv&quot; ,header=T)tot_mean &lt;- mean(accepts$tot_derog)tot_sd &lt;- sd(accepts$tot_derog)a1 &lt;- tot_mean-3*tot_sda2 &lt;- tot_mean+3*tot_sdaccepts[accepts$tot_derog &lt;= a1,]$tot_derog &lt;-a1accepts[accepts$tot_derog &gt; a2,]$tot_derog &lt;- a2 1234567891011#首先对age_oldest_tr 变量进行缺失值均值填补vmean &lt;- mean(accepts$age_oldest_tr,na.rm = T)accepts[is.na(accepts$age_oldest_tr),]$age_oldest_tr &lt;- vmeanewtd &lt;- cut(accepts$age_oldest_tr,4)#这里以age_oldest_tr字段等宽分为4段table(ewtd)levels(ewtd) &lt;- paste(&quot;L&quot;,0:3,sep=&quot;&quot;) #将连续变量转化成定序列accepts$age_oldest_tr_1 &lt;-ewtdtable(accepts$age_oldest_tr_1) 日期变量函数第十次课数据排序 12345678910score &lt;- data.frame(student = c (&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,'D'),gender=c(&quot;M&quot;,&quot;M&quot;,&quot;F&quot;,&quot;F&quot;), math=c(90,70,80,60),Eng=c(88,78,69,98),Chinese = c (66,59,NA,88) )score student gender math Eng Chinese1 A M 90 88 662 B M 70 78 593 C F 80 69 NA4 D F 60 98 88 默认升序 123456789 score &lt;- data.frame(student = c (&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,'D'),gender=c(&quot;M&quot;,&quot;M&quot;,&quot;F&quot;,&quot;F&quot;),+ math=c(90,70,80,60),Eng=c(88,78,69,98),Chinese = c (66,59,NA,88)+ )&gt; score[order(score$math),] student gender math Eng Chinese4 D F 60 98 882 B M 70 78 593 C F 80 69 NA1 A M 90 88 66 降序:在前面加”-“,或者在添加 decreasing =T 12345678910假如出现成绩相同的时候按照英语成绩进行排列 score &lt;- data.frame(student = c (&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,'D'),gender=c(&quot;M&quot;,&quot;M&quot;,&quot;F&quot;,&quot;F&quot;),+ math=c(90,80,80,60),Eng=c(88,78,69,98),Chinese = c (66,59,NA,88)+ )&gt; score[order(score$math,score$Eng),] student gender math Eng Chinese4 D F 60 98 883 C F 80 69 NA2 B M 80 78 591 A M 90 88 66 合并数据集函数 rbind 和cbind对于数据框而言,分别为增加新的样本数据和增加新属性变量.[注意]rbind的自变量的宽度(列数)应与原数据框的宽度相等.cbind的自变量的高度(行数)应与原数据框的高度相等 选取变量书本P69 删除变量 123向量[1]1234,删除第一个元素 a &lt;- c(1,2,3,4) a[-1] 使用subset函数选取数据1subset(x,subset,select) 1234567891011# 使用subset函数选取数据df1 &lt;- data.frame(name = c(&quot;aa&quot;,&quot;bb&quot;,&quot;cc&quot;), age = c(20,29,30), sex = c(&quot;f&quot;,&quot;m&quot;,&quot;f&quot;))df1selectresult1 &lt;- subset(df1, name == &quot;aa&quot;,select = c(age,sex))selectresult2 &lt;- subset(df1, name == &quot;aa&quot;&amp;sex ==&quot;f&quot;,select = c(age,sex))selectresult1 selectresult2 第十一节课整合数据12345678910111213141516171819202122232425262728293031323334353637383940414243444546#整合数据name&lt;-c(rep(&quot;张三&quot;,1,3),rep(&quot;李四&quot;,3))namesubject&lt;-c(&quot;数学&quot;,&quot;语文&quot;,&quot;英语&quot;,&quot;数学&quot;,&quot;语文&quot;,&quot;英语&quot;)score&lt;-c(89,80,70,90,70,80)stuid&lt;-c(1,1,1,2,2,2)stuscore&lt;-data.frame(name,subject,score,stuid)stuscorename subject score stuid1 张三 数学 89 12 张三 语文 80 13 张三 英语 70 14 李四 数学 90 25 李四 语文 70 26 李四 英语 80 2sqldf(&quot;select name ,sum(score) as allscore from stuscore group by name order by allscore&quot;) name allscore1 张三 2392 李四 240sqldf(&quot;select name ,stuid,sum(score) as allscore from stuscore group by name order by allscore&quot;)name stuid allscore1 张三 1 2392 李四 2 240#计算每个人单科的最高成绩sqldf(&quot;select stuid ,name,subject,max(score) as maxscore from stuscore group by stuid&quot;) stuid name subject maxscore1 1 张三 数学 892 2 李四 数学 90#计算每个人的平均成绩sqldf(&quot;select stuid ,name ,avg(score) as avgscore from stuscore group by stuid&quot;) stuid name avgscore1 1 张三 79.666672 2 李四 80.00000 内连接使用merge函数进行连接在by后连接的公共字段”id”, 12345678910111213table1 &lt;- read.csv(&quot;local/Table1.csv&quot;)table1table2 &lt;- read.csv(&quot;local/Table2.csv&quot;)table2inner1 &lt;- merge(table1,table2,by = &quot;id&quot;,all = FALSE)inner1id a b1 3 c einner3 &lt;- sqldf(&quot;select * from table1 as a inner join table2 as b on a.id = b.id&quot;)inner3 外连接12345678910111213141516 merge函数进行连接,多了参数all.x =TRUEleft1 &lt;- merge(table1,table2,by = &quot;id&quot;,all.x = TRUE)left1id a b1 1 a &lt;NA&gt;2 2 b &lt;NA&gt;3 3 c eleft2 &lt;- sqldf(&quot;select t1.id ,t1.a , t2.b from table1 as t1 left join table2 as t2 on t1.id=t2.id&quot;)left2id a b1 1 a &lt;NA&gt;2 2 b &lt;NA&gt;3 3 c e 分析数据间的关系的关系–散点图1234### 绘制cars数据集的速度与刹车距离的散点图plot(cars[,1],cars[,2])plot(cars$speed,cars$dist)plot(cars) 修改颜色查看colors自带的函数colors()[20:34] 绘制cars数据集speed与dist的散点图,散点为红色1234plot(cars,col=&quot;red&quot;)plot(cars,pch=18,cex=0.5,col=&quot;blue&quot;,bg=&quot;green&quot;) 绘制cars数据集speed与dist的折线图,线条为虚线,线条粗细为2,线条为蓝色plot(cars,type=”l”,lty=2,lwd=2,col=”blue”) 修改文本属性散点为倒三角,大小为0.5,点边框为蓝色,点内部填充红色123456plot(cars,xlab=&quot;汽车速度&quot;,ylab=&quot;刹车距离&quot;,pch=25,cex=0.5,col=&quot;blue&quot;,bg=&quot;red&quot;)title(main = list(&quot;汽车速度与刹车距离散点图&quot;,cex=1.1,font=2))text(8,100,labels = '20世纪20年代' ,cex=0.8,)#说明数据来源text(8.5,80,labels='Methods of Correlation Analysis',cex=0.6,font=3)#杂志名称plot(cars,xlab=list(&quot;汽车速度&quot;,col='red',font=3,cex=0.5), ylab='刹车距离',pch=25,cex=0.5,col=&quot;blue&quot;,bg=&quot;red&quot;) 添加图例实例,绘制VADeaths数据集的条形图,并添加图例legend函数123456barplot(VADeaths,beside=TRUE,col = c(&quot;red&quot;,&quot;yellow&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;gray&quot;), title=&quot;城市&quot;)legend(0.1,75,legend=rownames(VADeaths),cex=0.45, pch=c(15,15,15,15,15),horiz = T,bty=&quot;n&quot;, col = c(&quot;red&quot;,&quot;yellow&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;gray&quot;)) par函数将图形按照2行3列摆放12345mfrow1 &lt;- par(mfrow=c(2,3))for (i in 1:6) { plot(c(1:i),main=paste(&quot;I'am image:&quot;,i))}par(mfrow=c(1,1)) 第十四节课保存图形123456jpeg(filename = 'D:/R_edu/local/散点图练习.jpg')mfrow1 &lt;- par(mfrow=c(2,3))for (i in 1:6) { plot(c(1:i),main=paste(&quot;I'am image:&quot;,i))}dev.off() 利用鸢尾花12345678qplot(Species ,Sepal.Length,data =iris, geom =&quot;boxplot&quot;,fill =Species, main = &quot;依据种类分组的花萼长度箱线图&quot;)qplot(Sepal.Length,Sepal.Width,data=iris, colour = Species,shape =Species, main = &quot;绘制花萼长度和花萼宽度的散点图&quot;) 利用facets参数绘制分面板散点图,并增加光滑曲线1234qplot(Sepal.Length,Sepal.Width,data =iris, geom = c(&quot;point&quot;,&quot;smooth&quot;), facets = ~Species,colour = Species, main =&quot;绘制分面板的散点图&quot;) ggplot2包的语言逻辑1234plot(iris$Sepal.Length,iris$Sepal.Width)ggplot(data = iris , aes(x = Sepal.Length,y = Sepal.Width))+ geom_point(color = &quot;darkred&quot;) ggplot绘图123ggplot(data = iris , aes(x = Sepal.Length,y = Sepal.Width,colour = Species)) 使用ggplot2包绘图12ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width, shape))","link":"/2020/10/14/R2/"},{"title":"mysql学习","text":"可以查到城市123SELECT LEFT(idcard_code,6),student_name ,city_name,pro_class_name,class_code FROM student_info ,city_id_code WHERE LEFT(idcard_code,6) =CODE AND LEFT(idcard_code,6)=341622 查到身份证前两位为341SELECT LEFT(idcard_code,2),student_name,class_code,pro_class_name FROM student_info WHERE LEFT(idcard_code,2) = 34 查询的到不同的系部1SELECT DISTINCT xibu FROM b2019_student_class_info ORDER BY xibu","link":"/2020/11/06/mysqlto/"},{"title":"记一次微信小程序开发","text":"","link":"/2020/10/25/record/"},{"title":"CSS基础学习","text":"第一天time:2020年12月15日20:35:32","link":"/2020/12/15/css1/"},{"title":"用CSS让DIV上下左右居中的方法","text":"方法一（varticle-align） 理念 利用表格单元格的居中属性。 步骤 父div外层配置一个div，同时设置为表格元素 (display: table)，宽度为100% 父div配置为表格单元格元素 (display: table-cell) 父div配置居中属性（vertical-align: middle），使子div上下居中 子div通过margin配置左右居中（margin-left:auto; margin-right:auto） 例子 12345678910111213&lt;style&gt; * {margin: 0; padding: 0; box-sizing: border-box;} .table {display: table; width: 100%;} .father {display: table-cell; vertical-align: middle;} .son {margin: auto;}&lt;/style&gt;&lt;body&gt; &lt;div class=&quot;table&quot; &gt; &lt;div class=&quot;father&quot; style=&quot;width: 100%; height: 400px; border: 1px solid rebeccapurple;&quot;&gt; &lt;div class=&quot;son&quot; style=&quot;width: 100px; height: 100px;background: palegreen;&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt; 注：表格单元格比较特殊，如果只有一个单元格时，它的宽度默认会占父级（table|tr）宽度的100%; table默认宽度不会撑开，需要手动配置width:100%； 方法二（line-height）理念 当父div的行高等于自身高度时，内部的行内元素会上下居中显示。行内块没有固定高度时也会上下居中显示。通过文本居中属性text-align:center,可以使内部行内元素或行内块元素左右居中显示。 步骤 子div设定为行内块元素(display:inline-block)； 父div设置行高(line-height)使子div上下居中 父div设置文本居中(text-align:center)使子div左右居中。 例子 1234567891011121314&lt;style&gt; * {margin: 0; padding: 0; box-sizing: border-box;} .father {line-height: 500px; text-align: center; font-size: 0;} .son { display: inline-block; /* display: inline-flex; display: inline-grid; display: inline-table; */ }&lt;/style&gt;&lt;body&gt; &lt;div class=&quot;father&quot; style=&quot;width: 100%; height: 400px; border: 1px solid rebeccapurple;&quot;&gt; &lt;div class=&quot;son&quot; style=&quot;width: 100px; height: 100px;background: palegreen;&quot;&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt; 注： 行高如果设置为当前父div的高度(400px)的话，有固定高度的子div并不会居中显示的，问题出在浏览器默认将其当做文本居中的，即把它当做了一段文本（chrome默认font-size:16px;hight:21px）进行居中，没把它当做高度100px进行居中。所以需要对父div的line-height进行调整。以font-size:0（对应的字体高度为0）为例子，则需要line-height增加一个子div的高度（400px + 100px;）。 方法三（绝对定位）理念利用定位属性（top、left、right、bottom）百分比的模式。若为100%，则代表偏移的长度为父div的高度（宽度）的100%。 步骤 父div标记下定位（position:relative|absolute|fixed）;子div绝对定位（position:absolute） 子div上下居中：top:50%;margin-top:-h/2; 或是 bottom:50%;margin-bottom:-h/2;； 子div左右居中: left:50%;margin-left:-w/2 或是 right:50%;margin-right:-w/2； 例子 1234567891011&lt;style&gt; * {margin: 0; padding: 0; box-sizing: border-box;} .father {position: relative;} .son {position: absolute;bottom:50%;margin-bottom: -50px;left: 50%;margin-left: -50px; }&lt;/style&gt;&lt;body&gt; &lt;div class=&quot;father&quot; style=&quot;width: 100%; height: 400px; border: 1px solid rebeccapurple;&quot;&gt; &lt;div class=&quot;son&quot; style=&quot;width: 100px; height: 100px;background: palegreen;&quot;&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt; 方法四（绝对定位）理念： 定位属性top和bottom（或是left和right）值分别设置为0，但子div有固定高度（宽度），并不能达到上下（左右）间距为0，此时给子div设置margin:auto会使它居中显示。 步骤： 父div标记下定位（position:relative|absolute|fixed|sticky）;子div绝对定位（position:absolute） 子div上下居中：top:0;bottom:0;margin-top:auto;margin-bottom:auto 子div左右居中：left:0;right:0;margin-left:auto;margin-right:auto 例子 12345678910&lt;style&gt; * {margin: 0; padding: 0; box-sizing: border-box;} .father {position: relative;} .son {position: absolute; top: 0; bottom:0; left: 0; right: 0; margin: auto}&lt;/style&gt;&lt;body&gt; &lt;div class=&quot;father&quot; style=&quot;width: 100%; height: 400px; border: 1px solid rebeccapurple;&quot;&gt; &lt;div class=&quot;son&quot; style=&quot;width: 100px; height: 100px;background: palegreen;&quot;&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt; 方法五（flex）理念 弹性盒子中只要给弹性子元素设置 margin: auto; 可以使得弹性子元素上下左右居中。 例子 12345678910&lt;style&gt; * {margin: 0; padding: 0; box-sizing: border-box;} .father {display: flex;} .son {margin: auto}&lt;/style&gt;&lt;body&gt; &lt;div class=&quot;father&quot; style=&quot;width: 100%; height: 400px; border: 1px solid rebeccapurple;&quot;&gt; &lt;div class=&quot;son&quot; style=&quot;width: 100px; height: 100px;background: palegreen;&quot;&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt; 注：flex存在兼容性问题 方法六（相对定位） 理念 利用定位属性（top、left、right、bottom）百分比的模式。若为100%，则代表偏移的长度为父div的高度（宽度）的100%。 步骤 父div标记下定位（position:relative|absolute|fixed）;子div相对定位（position:relative） 子div上下居中：top:50%;margin-top:-h/2; 或是 bottom:-50%;margin-top:-h/2;； 子div左右居中: left:50%;margin-left:-w/2 或是 right:-50%;margin-left:-w/2； 例子 12345678910&lt;style&gt; * {margin: 0; padding: 0; box-sizing: border-box;} .father {position: relative;} .son {position: relative; top:50%;margin-top:-50px;left:50%;margin-left:-50px}&lt;/style&gt;&lt;body&gt; &lt;div class=&quot;father&quot; style=&quot;width: 100%; height: 400px; border: 1px solid rebeccapurple;&quot;&gt; &lt;div class=&quot;son&quot; style=&quot;width: 100px; height: 100px;background: palegreen;&quot;&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt; 注： 与绝对定位不同的是，定位属性相对的点是自身元素的左上角。（所以bottom是负值，和方法三绝对定位写法有不一样的地方） 如果有同级元素，可能会受到影响。 如果子div是浮动元素，也有居中效果。 结尾 方法二和方法三兼容性要比其它好些。最简单的是弹性盒子。","link":"/2021/01/18/css3/"},{"title":"正则表达式","text":"正则表达式学习 例子 1234567^[0-9]+abs$ - ^ 为匹配输入字符串的开始位置。 - [0-9]+匹配多个数字， [0-9] 匹配单个数字，+ 匹配一个或者多个。 - abc$匹配字母 abc 并以 abc 结尾，$ 为匹配输入字符串的结束位置。 123^[a-z0-9_-]{3,15}$- [a-z0-9_-]表示字母(a-z)数字(0-9)还有加上下划线连字符- {3,15}表示3-15个字符 字符 描述 [ABC] 匹配 […] 中的所有字符，例如 [aeiou] 匹配字符串 “google runoob taobao” 中所有的 e o u a 字母。 [^ABC] 匹配除了 […] 中字符的所有字符，例如 [^aeiou] 匹配字符串 “google runoob taobao” 中除了 e o u a 字母的所有字母。 [A-Z] 表示一个区间，匹配所有大写字母，[a-z] 表示所有小写字母。 . 匹配除换行符（\\n、\\r）之外的任何单个字符，相等于 [^\\n\\r]。 [\\s\\S] 匹配所有。\\s 是匹配所有空白符，包括换行，\\S 非空白符，包括换行。 \\w 匹配字母、数字、下划线。等价于 [A-Za-z0-9_] 特殊字符所谓特殊字符，就是一些有特殊含义的字符，如上面说的 runoob 中的 ，简单的说就是表示任何字符串的意思。如果要查找字符串中的 * 符号，则需要对 * 进行转义，即在其前加一个 : runo\\ob 匹配 runoob。 许多元字符要求在试图匹配它们时特别对待。若要匹配这些特殊字符，必须首先使字符”转义”，即，将反斜杠字符\\ 放在它们前面。下表列出了正则表达式中的特殊字符： 特殊字符 描述 $ 匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 ‘\\n’ 或 ‘\\r’。要匹配 $ 字符本身，请使用 $。 ( ) 标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 ( 和 )。 * 匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 *。 + 匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 +。 . 匹配除换行符 \\n 之外的任何单字符。要匹配 . ，请使用 . 。 [ 标记一个中括号表达式的开始。要匹配 [，请使用 [。 ? 匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 ?。 \\ 将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， ‘n’ 匹配字符 ‘n’。’\\n’ 匹配换行符。序列 ‘\\‘ 匹配 “&quot;，而 ‘(‘ 则匹配 “(“。 ^ 匹配输入字符串的开始位置，除非在方括号表达式中使用，当该符号在方括号表达式中使用时，表示不接受该方括号表达式中的字符集合。要匹配 ^ 字符本身，请使用 ^。 { 标记限定符表达式的开始。要匹配 {，请使用 {。 限定符限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有 * 或 + 或 ? 或 {n} 或 {n,} 或 {n,m} 共6种。 正则表达式的限定符有： 字符 描述 * 匹配前面的子表达式零次或多次。例如，zo* 能匹配 “z” 以及 “zoo”。* 等价于{0,}。 + 匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。 ? 匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 、 “does” 中的 “does” 、 “doxy” 中的 “do” 。? 等价于 {0,1}。 {n} n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。 {n,} n 是一个非负整数。至少匹配n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*’。 {n,m} m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。 以下正则表达式匹配一个正整数，[1-9]设置第一个数字不是 0，[0-9]* 表示任意多个数字： 1/[1-9][0-9]*/","link":"/2021/01/22/Rep/"},{"title":"Node.js 爬取 UPR 教务系统获得课表数据","text":"使用工具 Node.js superagent, fs 模块 12superagent是一个轻量级ajaxAPI，是一个关于HTTP方面的一个库，使用链式写法。fs是Node.js自带的模块，用于与文件系统进行交互。 安装 1npm install superagent --save 引用 12const superagent = require(&quot;superagent&quot;)const fs = require(&quot;fs&quot;) 使用到的代码 1234567superagent .[get/post/...](url) .set() .send() .end(function(err,res){ //do something }) 设置请求，参数中加入请求地址(例如向baidu发送get请求) 1.get(&quot;https://www.baidu.com&quot;) 设置请求头 单个设置1.set('Referer','https://www.google.com') 一起设置(传入json数据) 12345.set({ &quot;Cache-Control&quot;: &quot;max-age=0&quot;, &quot;Content-Length&quot;: &quot;57&quot;,}) 发送数据(传入json数据) 1234.send({ &quot;sss&quot;:&quot;xxx&quot;, &quot;kkk&quot;:&quot;yyy&quot;,}) 处理返回数据 123456.end(function(err, res){ if(err){ return console(&quot;xxx出错&quot; + err) } //对得到的res做处理}) res res.text包含为被解析的响应数据 res.body将解析返回的数据，但是目前只支持三种格式(application/x-www-form-urlencoded， application/json和multipart/form-data) res.header响应头,是一个Object res.type &amp; res.charset 类型和编码格式 res.status 状态码 fs 123456fs.writeFile(&quot;result.json&quot;, JSON.stringify(res.body.xkxx), function (err) { if (err) { return console.log(&quot;文件写入失败&quot; + err) } console.log(&quot;文件写入成功&quot;)}) fs.writeFile(file, data[, options], callback)是一个向本地写入文件的函数。 第一个参数是文件名 第二个参数是写入的数据 第三个参数是可选参数，指定编码格式。 第四个参数是回调函数,回调函数只有一个参数，就是error 分析页面打开登陆页面，清除cookie，F12打开控制台，切换到Network选项卡，刷新页面 发现4个文件，很明显login文件是我们要的，其他都是网站资源文件点击login 查看General头，发现请求发放是get 查看response Headers，找到set-Cookie 查看Request Headers，将请求头复制下来，以模拟登陆 接下来进行第一步，获得cookie 1234567891011121314//获取cookie, url 和 headers根据上文在上方定义出来var cookiesuperagent.get(url) .set(headers) .end(function (err, res) { if (err) { return console.log(&quot;获取cookie发生错误&quot;) } cookie = res.headers[&quot;set-cookie&quot;] console.log(&quot;获得到的cookie为：&quot; + cookie) //模拟登陆 login() }) 第二步，模拟登陆 勾选上Preserve log(在页面刷新或更改之间保留控制台历史记录。 消息将一直存储，直至清除控制台或者关闭标签。) 经过分析发现是名为j_spring_security_check的文件接收到Form Data数据，进行登陆验证点击文件，查看 发现请求方法是POST，地址为http://xsjwxt.sxau.edu.cn:7872/j_spring_security_check继续看请求头， 发现里面有cookie请求头，但是我们前面获取过了，所以将除了cookie的请求头复制下来然后set里面设置cookie就好啦 接着查看Form Data 多次试验发现j_captcha1是固定值error 然后将Form Data 需要的数据写成一个json变量，send出去 1234567891011121314function login() { superagent.post(&quot;http://xsjwxt.sxau.edu.cn:7872/j_spring_security_check&quot;) .set(headers1) .set(&quot;Cookie&quot;, cookie) .send(sxau) .end(function (err, res) { if (err) { return console.log(&quot;模拟登陆出错&quot;) } //爬取课表页面 course() })} 然后就进入课表页面爬取数据啦和上面一样的操作爬取下来，发现并没有得到数据，经过观察发现课表是用js代码在页面加载完毕后写入的， 于是在Network一一查看文件，最后发现是名为callback的文件返回的是课程数据的json格式 于是直接爬取callback文件 经过和上面一样的操作，将课表成功下载到本地 12345678910111213141516171819202122232425function getClass() { superagent.get(&quot;http://xsjwxt.sxau.edu.cn:7872/student/courseSelect/thisSemesterCurriculum/ajaxStudentSchedule/callback&quot;) .set(&quot;DNT&quot;,1) .set(&quot;Referer&quot;, &quot;xsjwxt.sxau.edu.cn:7872/student/courseSelect/thisSemesterCurriculum/index&quot;) .set(&quot;User-Agent&quot;, &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36&quot;) //.set(&quot;selectionBar&quot;,82022) .set(&quot;Host&quot;, &quot;xsjwxt.sxau.edu.cn:7872&quot;) .set(&quot;X-Requested-With&quot;, &quot;XMLHttpRequest&quot;) .set(&quot;Accept&quot;, &quot;*/*&quot;) .set(&quot;Accept-Encoding&quot;, &quot;gzip, deflate&quot;) .set(&quot;Proxy-Connection&quot;, &quot;keep-alive&quot;) .set(&quot;Cookie&quot;, cookie) .end(function (err, res) { if (err) { return console.log(&quot;获取课表文件失败&quot; + err) } fs.writeFile(&quot;result.json&quot;, res.text, function (err) { if (err) { return console.log(&quot;课表文件写入失败&quot; + err) } console.log(&quot;课表文件写入成功&quot;) }) })} 查找课程数据时，发现getSectionAndTime文件返回的是课程时间，于是把getSectionAndTime文件下载下来，然后配合课表文件，就可以很方便处理成Google日历可以导入的ics文件了。 所有代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106const superagent = require(&quot;superagent&quot;)const fs = require(&quot;fs&quot;)//需要的登陆信息var sxau = { &quot;j_username&quot;: name, &quot;j_password&quot;: password, &quot;j_captcha1&quot;: &quot;error&quot;,}var url = &quot;http://xsjwxt.sxau.edu.cn:7872&quot;//请求头var headers = { &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36&quot;, &quot;Accept&quot;: &quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&quot;, &quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;, &quot;Accept-Language&quot;: &quot;zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7&quot;, &quot;Cache-Control&quot;: &quot;max-age=0&quot;, &quot;Content-Length&quot;: &quot;57&quot;, &quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded&quot;, &quot;DNT&quot;: &quot;1&quot;, &quot;Host&quot;: &quot;xsjwxt.sxau.edu.cn:7872&quot;, &quot;Origin&quot;: &quot;http://xsjwxt.sxau.edu.cn:7872&quot;, &quot;Connection&quot;: &quot;keep-alive&quot;, &quot;Referer&quot;: &quot;http://xsjwxt.sxau.edu.cn:7872/login&quot;, &quot;Upgrade-Insecure-Requests&quot;: &quot;1&quot;,},headers1 = { &quot;DNT&quot;: 1, &quot;Referer&quot;: &quot;xsjwxt.sxau.edu.cn:7872/student/courseSelect/thisSemesterCurriculum/index&quot;, &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36&quot;, &quot;Host&quot;: &quot;xsjwxt.sxau.edu.cn:7872&quot;, &quot;X-Requested-With&quot;: &quot;XMLHttpRequest&quot;, &quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;, &quot;Proxy-Connection&quot;: &quot;keep-alive&quot;,}//获取cookievar cookiesuperagent.get(url) .set(headers) .end(function (err, res) { if (err) { return console.log(&quot;获取cookie发生错误&quot;) } cookie = res.headers[&quot;set-cookie&quot;] console.log(&quot;获取到的cookie是：&quot; + cookie) login() })//模拟登陆function login() { superagent.post(&quot;http://xsjwxt.sxau.edu.cn:7872/j_spring_security_check&quot;) .set(headers) .set(&quot;Cookie&quot;, cookie) .send(sxau) .end(function (err, res) { if (err) { return console.log(&quot;模拟登陆出错&quot;) } getClass() getTime() })}function getClass() { superagent.get(&quot;http://xsjwxt.sxau.edu.cn:7872/student/courseSelect/thisSemesterCurriculum/ajaxStudentSchedule/callback&quot;) .set(headers1) .set(&quot;Accept&quot;, &quot;*/*&quot;) .set(&quot;Cookie&quot;, cookie) .end(function (err, res) { if (err) { return console.log(&quot;获取课表文件失败&quot; + err) } fs.writeFile(&quot;result.json&quot;, res.text, function (err) { if (err) { return console.log(&quot;课表文件写入失败&quot; + err) } console.log(&quot;课表文件写入成功&quot;) }) })}function getTime() { superagent.post(&quot;http://xsjwxt.sxau.edu.cn:7872/ajax/getSectionAndTime&quot;) .set(headers1) .set(&quot;Accept&quot;, &quot;application/json, text/javascript, */*; q=0.01&quot;) .set(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded; charset=UTF-8&quot;) .set(&quot;Cookie&quot;, cookie) .end(function (err, res) { if (err) { return console.log(&quot;获取上课时间失败&quot; + err) } fs.writeFile(&quot;time.json&quot;, res.text, function (err) { if (err) { return console.log(&quot;上课时间文件写入失败&quot;) } console.log(&quot;上课时间文件写入成功&quot;) }) })}","link":"/2021/01/24/Node-01/"},{"title":"tab的实现","text":"tab实现的方法下面的代码的注释中已经描述的十分清楚。主要就是css+js的方法实现点击就切换的方法. setAttibute函数: 定义和用法 setAttribute() 方法添加指定的属性，并为其赋指定的值。 如果这个指定的属性已存在，则仅设置/更改值。 setAttribute(string name, string value)： 增加一个指定名称和值的新属性，或者把一个现有的属性设定为指定的值。 语法:1element.setAttribute(attributename,attributevalue) 参数 参数 类型 描述 attributename string 必需。您希望添加的属性的名称。 attributevalue String 必需。您希望添加的属性值。 例子:1234var input = document.createElement(&quot;input&quot;);input.setAttribute(&quot;type&quot;, &quot;text&quot;);input.setAttribute(&quot;name&quot;, &quot;q&quot;);input.setAttribute(&quot;class&quot;,bordercss); 1&lt;input type=&quot;text&quot; name=&quot;q&quot; class=&quot;bordercss&quot;&gt;,即，input控件具有bordercss样式属性 getAttribute()函数定义和用法getAttribute() 方法返回指定属性名的属性值。 提示：如果您希望以 Attr 对象返回属性，请使getAttributeNode。 -------------------------------------------------------- getAttribute()方法是一个函数。它只有一个参数——你打算查询的属性的名字,下面为大家介绍下其具体的使用 语法1element.getAttribute(attributename) 参数 参数 类型 描述 attributename 字符串值。 必需。需要获得属性值的属性名称。 返回值 类型 描述 String 指定属性的值。 注意 不过，getAttribute()方法不能通过document对象调用，这与我们此前介绍过的其他方法不同。我们只能通过一个元素节点对象调用它。 可以把它与getElementsByTagName()方法结合起来，去查询每个&lt;p&gt;元素的title属性 例子12345var text=document.getElementsByTagName(&quot;p&quot;);for (var i=0;i&lt;text.length;i++){alert(text[i].getAttribute(&quot;title&quot;));} 代码展示123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot;&gt; &lt;title&gt;手风琴&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;tabs&quot;&gt; &lt;div class=&quot;nav-tab&quot;&gt; &lt;span class=&quot;dis&quot;&gt;张羽习&lt;/span&gt; &lt;span&gt;李一桐&lt;/span&gt; &lt;span&gt;冷檬&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;ul&gt; &lt;li class=&quot;info&quot;&gt;张羽习&lt;/li&gt; &lt;li&gt;李一桐&lt;/li&gt; &lt;li&gt;冷檬&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;script&gt; var spanlist = document.querySelectorAll('span'); var lis = document.querySelectorAll('li'); for (var i =0 ; i &lt; spanlist.length; i++) { //添加自定义属性 spanlist[i].setAttribute('index', i); //获取span点击事件 spanlist[i].onclick= function() { console.log(spanlist) //获取自定义属性,然后遍历数组 var index = this.getAttribute('index'); //遍历lis这个数组,然后再用if进行判断是不是这个 for (var l = 0; l &lt; lis.length; l++) { //通过if来判定 两个伪数组的下标是否相同,如果相同就改变属性 ---(style.display 和 classroom的值) if (index == l) { //注意是== //如果index下标和j的下标一样的就执行代码 spanlist[l].className = 'dis'; lis[l].style.display = 'block'; } else {// if 和else需要写完整以后才能执行 spanlist[l].className = ''; lis[l].style.display = 'none'; } } } } &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 1234567891011121314151617181920212223242526272829303132*{ margin: 0; padding: 0;}.tabs .nav-tab{ width: 300px; height: 40px; background: #e5e6e5;}.tabs .nav-tab span{ width: 100px; padding: 10px; position: relative; top: 10px;}.tabs .nav-tab span:hover{ background: #bcbdbd;}.content { width: 300px; background: black;}.content ul li { margin: 5px; padding: 10px; color: #fff; display: none;}.content .info{ display: block;}","link":"/2021/01/27/tabs/"}],"tags":[{"name":"css","slug":"css","link":"/tags/css/"},{"name":"小程序","slug":"小程序","link":"/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"},{"name":"数据库","slug":"数据库","link":"/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"网页","slug":"网页","link":"/tags/%E7%BD%91%E9%A1%B5/"},{"name":"小程序基础","slug":"小程序基础","link":"/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9F%BA%E7%A1%80/"},{"name":"javascript","slug":"javascript","link":"/tags/javascript/"},{"name":"语记","slug":"语记","link":"/tags/%E8%AF%AD%E8%AE%B0/"},{"name":"网页设计","slug":"网页设计","link":"/tags/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/"},{"name":"响应式设计","slug":"响应式设计","link":"/tags/%E5%93%8D%E5%BA%94%E5%BC%8F%E8%AE%BE%E8%AE%A1/"},{"name":"gird","slug":"gird","link":"/tags/gird/"},{"name":"R","slug":"R","link":"/tags/R/"},{"name":"微信小程序","slug":"微信小程序","link":"/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"},{"name":"mysql","slug":"mysql","link":"/tags/mysql/"},{"name":"CSS","slug":"CSS","link":"/tags/CSS/"},{"name":"正则表达式","slug":"正则表达式","link":"/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"name":"node","slug":"node","link":"/tags/node/"},{"name":"css|js","slug":"css-js","link":"/tags/css-js/"}],"categories":[]}
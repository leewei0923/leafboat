<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>前端加油站(长期更新)</title>
    <link href="/2021/08/17/%E5%89%8D%E7%AB%AF%E5%8A%A0%E6%B2%B9%E7%AB%99/"/>
    <url>/2021/08/17/%E5%89%8D%E7%AB%AF%E5%8A%A0%E6%B2%B9%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<h1 id="前端加油站"><a href="#前端加油站" class="headerlink" title="前端加油站"></a>前端加油站</h1><h2 id="4-什么是同源策略，为什么会有这样的策略？本地开发时如何独立解决接口跨域的问题？"><a href="#4-什么是同源策略，为什么会有这样的策略？本地开发时如何独立解决接口跨域的问题？" class="headerlink" title="4. 什么是同源策略，为什么会有这样的策略？本地开发时如何独立解决接口跨域的问题？"></a>4. 什么是同源策略，为什么会有这样的策略？本地开发时如何独立解决接口跨域的问题？</h2><p><strong>同源策略?</strong></p><p>同源策略是一种安全机制，限制了从同一个源加载的文档或脚本如何与来自另一个源的资源进行交互，这是一个用于隔离潜在恶意文件的重要机制。（可扩展到域、cookie、iframe、postmessage等细节） </p><p>谁受约束? Cookie , Dom , 第三方插件以及 XMLHttpRequest 都受到同源策略的约束</p><p>Cookie:</p><p>只有同源的网页才能共享，但是若两个页面一级域名相同，只是二级域名不同，那么浏览器可以通过设置<code>document.domain</code>来共享 Cookie </p><p>XMLHttpRequest</p><p>它受到同源策略的约束，不能跨域访问资源，但是 W3C 委员会制定了 XMLHttpRequest 跨域访问标准。  通过目标返回的 HTTP 头来授权，是否允许跨域访问。实现这一点的安全基础是 JavaScript 无法控制 HTTP 头</p><p><strong>为什么会有这样的策略(目的)</strong></p><p>为了保证用户信息的安全，防止恶意的网站窃取数据。</p><p><strong>本地开发时如何独立解决接口跨域的问题(解决办法)</strong></p><p>反向代理如 “配置nginx 与 host”、“webpack-dev-server proxy”，有理、可行即可<br>还可以延伸考察候选人对跨域请求和cookie配置等相关概念的掌握： 1、xhr.withCredentials = true; // 携带跨域cookie   fetch: credentials: “include”  2、服务器端使用CROS协议解决跨域访问数据问题时，需要设置响应消息头Access-Control-Allow-Credentials值为“true”。 同时，还需要设置响应消息头Access-Control-Allow-Origin值为域名或者通配符“*”</p>]]></content>
    
    
    
    <tags>
      
      <tag>面试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>鼠标移上去图片放大</title>
    <link href="/2021/03/14/html-tupianfangda/"/>
    <url>/2021/03/14/html-tupianfangda/</url>
    
    <content type="html"><![CDATA[<h1 id="图片放大"><a href="#图片放大" class="headerlink" title="图片放大"></a>图片放大</h1><a id="more"></a><h3 id="html文件"><a href="#html文件" class="headerlink" title="html文件"></a>html文件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>鼠标移上去图片放大<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;css/style.css&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;image&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/01.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br>````<br><br>```css<br>/*<br>content: 鼠标移上去放大样式表<br>author: weiWei<br>time: 2021/03/14 13:54<br>class: imation<br>*/<br><br><br>body&#123;<br>    display: flex;<br>    justify-content: center;<br>    align-items: center;<br>    min-height: 100vh;<br>&#125;<br>#image&#123;<br>    width: 300px;<br>    height: 300px;<br>    background-color: #000;<br>    background-image: url(../img/dog.jpg);<br>    background-size: 300px;<br>    background-repeat: no-repeat;<br>&#125;<br><br>#image[index]&#123;<br>    background-size: 900px 900px;<br>    background-position: calc(var(--x)*100%) calc(var(--y)*100%);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">content: 鼠标移上去放大脚本</span><br><span class="hljs-comment">author: weiWei</span><br><span class="hljs-comment">time: 2021/03/14 13:54</span><br><span class="hljs-comment">class: imation</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">//电脑版鼠标移动事件</span><br><span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#image&#x27;</span>).addEventListener(<span class="hljs-string">&#x27;mouseenter&#x27;</span>, enterImage);<span class="hljs-comment">//进入图片触发mouseenter</span><br><br><span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#image&#x27;</span>).addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, moveImage);<span class="hljs-comment">//鼠标在图片游动上触发mousemove</span><br><br><span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#image&#x27;</span>).addEventListener(<span class="hljs-string">&#x27;mouseleave&#x27;</span>, leaveImage);<span class="hljs-comment">//离开图片触发mouseenter</span><br><br><span class="hljs-comment">//手机触摸事件</span><br><span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#image&#x27;</span>).addEventListener(<span class="hljs-string">&#x27;touchstart&#x27;</span>, enterImage);<span class="hljs-comment">//触摸进入图片触发</span><br><br><span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#image&#x27;</span>).addEventListener(<span class="hljs-string">&#x27;touchmove&#x27;</span>, moveImage);<span class="hljs-comment">//在图片上触摸滑动触发</span><br><br><span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#image&#x27;</span>).addEventListener(<span class="hljs-string">&#x27;touchend&#x27;</span>, leaveImage);<span class="hljs-comment">//离开图片触发</span><br><br><br><span class="hljs-comment">//进入图片的函数</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">enterImage</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    e.target.setAttribute(<span class="hljs-string">&#x27;index&#x27;</span>, <span class="hljs-number">1</span>);<br>    moveImage(e);<br>&#125;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">    touch事件的event没有offsetX和offsetY</span><br><span class="hljs-comment">*/</span><br><span class="hljs-comment">//鼠标在图片上面移动</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">moveImage</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> rect = e.target.getBoundingClientRect();<br><br>    <span class="hljs-comment">//自己定义offsetX和offsetY</span><br>    <span class="hljs-keyword">let</span> offsetX , offsetY ;<br>    <span class="hljs-keyword">if</span>([<span class="hljs-string">&#x27;touchstart&#x27;</span>, <span class="hljs-string">&#x27;touchmove&#x27;</span>, <span class="hljs-string">&#x27;touchend&#x27;</span>].includes(e.type))&#123;<br>        offsetX = e.touches[<span class="hljs-number">0</span>].pageX - rect.left;<br>        offsetY = e.touches[<span class="hljs-number">0</span>].pageY - rect.top; <br>        e.preventDefault()<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        offsetX = e.offsetX;<br>        offsetY = e.offsetY;<br>    &#125;<br><br>    <span class="hljs-keyword">let</span> x = offsetX / rect.width;  <span class="hljs-comment">//获取图片在X轴的位移</span><br>    <span class="hljs-keyword">let</span> y = offsetY / rect.height;  <span class="hljs-comment">//获取图片在Y轴的位移</span><br><br>    e.target.style.setProperty(<span class="hljs-string">&#x27;--x&#x27;</span>, x);<br>    e.target.style.setProperty(<span class="hljs-string">&#x27;--y&#x27;</span>, y);<br>&#125;<br><br><span class="hljs-comment">//鼠标在离开图片以后</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">leaveImage</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    e.target.removeAttribute(<span class="hljs-string">&#x27;index&#x27;</span>,<span class="hljs-number">1</span>);<br>    moveImage(e);<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><ul><li><p>css变量</p><pre><code># 解释 - CSS 变量是由CSS作者定义的实体，其中包含要在整个文档中重复使用的特定值。使用自定义属性来设置变量名，并使用特定的 var() 来访问。（比如  color: var(--main-color);）。# 解决问题 在构建大型站点的时候,面对很多的重复使用信息,可以设定变量,重复使用 CSS变量为我们带来一些预处理器的便利，并且不需要额外的编译。并使用特定的 var() 来访问。（比如  color: var(--main-color);）。</code></pre></li></ul><ul><li><p>鼠标事件</p><p>mouseenter: 鼠标进入</p><p>mousemove: 鼠标移动</p><p>mouseleave: 鼠标离开</p><h1 id="addEventListener-‘event’-’function’-useCapture"><a href="#addEventListener-‘event’-’function’-useCapture" class="headerlink" title="addEventListener(‘event’,’function’,useCapture)"></a>addEventListener(‘event’,’function’,useCapture)</h1><pre><code> 方法用于向指定元素添加事件句柄。</code></pre><p>  参数: </p><pre><code>  event: 必须。字符串，指定事件名。  function: 指定要触发的函数名称  useCapture: 可有可无,放置布尔值   可能值:        true - 事件句柄在捕获阶段执行        false- 默认。事件句柄在冒泡阶段执行</code></pre><p> <strong>注意</strong>: 不要使用 “on” 前缀。 例如，使用 “click” ,而不是使用 “onclick”。</p></li><li><p>形式参数e</p><p> 这里的e是参数的名字。参数分为：<br> 1.形参：形式参数，相当于函数声明的局部变量，实参把自己的值赋给形参，形参就保存了这个值<br> 2.形参只能在函数内部使用。</p></li><li><p>移动端 touch事件<br> Touch<br> Touch对象代表一个触点，可以通过 event.touches[0]获取，每个触点包含位置，大小，形状，压力大小，和目标 element属性。</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>html</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>生成自己小爱同学超级课程表</title>
    <link href="/2021/02/25/xiaoa/"/>
    <url>/2021/02/25/xiaoa/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><a id="more"></a><p><img src="https://t1.picb.cc/uploads/2021/02/25/Zr3cbG.jpg" alt="开发者"></p><p>我看过超级课程表的一键导入课表,还有我们学校的一个公众号的一键导入课表,我为此深深着迷.现在看到小爱同学的这一款,总体来说不难.<br>下面请看我慢慢道来。</p><h2 id="开发者文档"><a href="#开发者文档" class="headerlink" title="开发者文档"></a>开发者文档</h2><p>开发文档很重要,不要忘记了。<br><a href="https://ldtu0m3md0.feishu.cn/docs/doccnhZPl8KnswEthRXUz8ivnhb#26bux2">https://ldtu0m3md0.feishu.cn/docs/doccnhZPl8KnswEthRXUz8ivnhb#26bux2</a></p><h2 id="我的学校代码"><a href="#我的学校代码" class="headerlink" title="我的学校代码"></a>我的学校代码</h2><p>我们要写的代码主要为 scheduleHtmlProvider.js 和 scheduleHtmlParser.js 这两个文件.如果你的学校是正方教务系统的话,可以在默认的基础上修改,一般不需要大改.</p><p>Provider是用来获取html的函数，将获取到的html传给 Parser 进行数据处理，截取出对应的课程信息，再封装为规定的json格式数据返回。</p><h2 id="代码讲解"><a href="#代码讲解" class="headerlink" title="代码讲解"></a>代码讲解</h2><p>以下是默认的Provider函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">scheduleHtmlProvider</span>(<span class="hljs-params">iframeContent = <span class="hljs-string">&quot;&quot;</span>, frameContent = <span class="hljs-string">&quot;&quot;</span>, dom = <span class="hljs-built_in">document</span></span>) </span>&#123;<br>    <span class="hljs-comment">//除函数名外都可编辑</span><br>    <span class="hljs-comment">//以下为示例，您可以完全重写或在此基础上更改</span><br>                                <br><span class="hljs-keyword">const</span> ifrs = dom.getElementsByTagName(<span class="hljs-string">&quot;iframe&quot;</span>);<br><span class="hljs-keyword">const</span> frs = dom.getElementsByTagName(<span class="hljs-string">&quot;frame&quot;</span>);<br><br><span class="hljs-keyword">if</span> (ifrs.length) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; ifrs.length; i++) &#123;<br>        <span class="hljs-keyword">const</span> dom = ifrs[i].contentWindow.document;<br>        iframeContent += scheduleHtmlProvider(iframeContent, frameContent, dom);<br>        &#125;<br>&#125; <br><span class="hljs-keyword">if</span> (frs.length) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; frs.length; i++) &#123;<br>        <span class="hljs-keyword">const</span> dom = frs[i].contentDocument.body.parentElement;<br>        frameContent += scheduleHtmlProvider(iframeContent, frameContent, dom);<br>        &#125;<br>&#125; <br><span class="hljs-keyword">if</span>(!ifrs.length &amp;&amp; !frs.length)&#123;<br>    <span class="hljs-keyword">return</span> dom.querySelector(<span class="hljs-string">&#x27;body&#x27;</span>).outerHTML<br>&#125;<br><span class="hljs-keyword">return</span> dom.getElementsByTagName(<span class="hljs-string">&#x27;html&#x27;</span>)[<span class="hljs-number">0</span>].innerHTML + iframeContent+frameContent  <br>&#125;<br></code></pre></td></tr></table></figure><p>其实我们主要去看 scheduleHtmlParser.js 这个文件,我会详细的介绍这个文件的</p><p>（scheduleHtmlParser函数的输出须符合以下数据结构）</p><table><thead><tr><th>参数名</th><th>术语解释</th><th>是否必填</th><th align="left">说明</th></tr></thead><tbody><tr><td>courseInfo</td><td>Array[{},{}</td><td>是</td><td align="left">课程表详细信息: <br>name: String 课程 <br>position: Sting 教室<br> teacher:String 教师<br> weeks:Array(非空)第几周 <br> day:Sring 星期几 <br>section:[] 第几节</td></tr><tr><td>sectionTimes</td><td>Array[{},{}]</td><td>否</td><td align="left">课时信息:<br> section: Number 第几节<br> startTime: String 开始时间<br> endTime: String 结束时间</td></tr></tbody></table><p>我为缩短开发的时间,然后直接使用默认的,在默认的基础上修改.<br>其实,Parser 对象选择和Jquery相似,主要是使用正则表达式</p><p>我已经在里面写了注释,具体看它把,不懂可以留言</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">scheduleHtmlParser</span>(<span class="hljs-params">html</span>) </span>&#123;<br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">     Author: @Weiwei</span><br><span class="hljs-comment">     Version: v0.1.1</span><br><span class="hljs-comment">    */</span><br><br>    <span class="hljs-keyword">let</span> timeJsonArray = [];<br>    <span class="hljs-keyword">let</span> result = [];  <span class="hljs-comment">//放置结果的数组</span><br>    <span class="hljs-keyword">let</span> allDom = $(<span class="hljs-string">&#x27;#table1 .timetable_con&#x27;</span>); <span class="hljs-comment">//变量allDom作为选择器选择id为table1 class类为timetable_con</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> u = <span class="hljs-number">0</span>; u &lt; allDom.length; u++) &#123;   <span class="hljs-comment">//for循环遍历allDom</span><br>        <span class="hljs-keyword">let</span> re = &#123;<br>            sections: [],<br>            weeks: []<br>        &#125;<br>        <span class="hljs-keyword">let</span> aaa = $(allDom[u]).find(<span class="hljs-string">&#x27;span&#x27;</span>)<br>        <span class="hljs-keyword">let</span> week = $(allDom[u]).parent(<span class="hljs-string">&#x27;td&#x27;</span>)[<span class="hljs-number">0</span>].attribs.id  <span class="hljs-comment">//获取当前第几周</span><br>        <span class="hljs-keyword">if</span> (week) &#123;<br>            re.day = week.split(<span class="hljs-string">&#x27;-&#x27;</span>)[<span class="hljs-number">0</span>]    <span class="hljs-comment">//获取当前是周几,分词然后获取第一个内容</span><br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; aaa.length; i++) &#123;<br>            <span class="hljs-comment">// 获取上课地点</span><br>            <span class="hljs-keyword">if</span> (aaa[i].attribs.title == <span class="hljs-string">&#x27;上课地点&#x27;</span>) &#123;<br><br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; $(aaa[i]).next()[<span class="hljs-number">0</span>].children.length; j++) &#123;<br>                    re.position = $(aaa[i]).next()[<span class="hljs-number">0</span>].children[j].data<br>                &#125;<br>            &#125;<br>            <span class="hljs-comment">//获取有多少周课</span><br>            <span class="hljs-keyword">if</span> (aaa[i].attribs.title == <span class="hljs-string">&#x27;节/周&#x27;</span>) &#123;<br><br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; $(aaa[i]).next()[<span class="hljs-number">0</span>].children.length; j++) &#123;<br><br>                    <span class="hljs-keyword">let</span> lesson = $(aaa[i]).next()[<span class="hljs-number">0</span>].children[j].data<br>                    <span class="hljs-comment">//                              console.log(&quot;lesson为&quot;+lesson)</span><br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> a = <span class="hljs-built_in">Number</span>(lesson.split(<span class="hljs-string">&#x27;)&#x27;</span>)[<span class="hljs-number">0</span>].split(<span class="hljs-string">&#x27;(&#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;-&#x27;</span>)[<span class="hljs-number">0</span>]); a &lt; <span class="hljs-built_in">Number</span>(lesson.split(<span class="hljs-string">&#x27;)&#x27;</span>)[<span class="hljs-number">0</span>].split(<span class="hljs-string">&#x27;(&#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;-&#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;节&#x27;</span>)[<span class="hljs-number">0</span>]) + <span class="hljs-number">1</span>; a++) &#123;<br>                        <span class="hljs-comment">//                                     console.log(&quot;a1为&quot;+a)</span><br>                        re.sections.push(&#123;<br>                            section: a<br>                        &#125;)<br>                    &#125;<br><br><br>                    <span class="hljs-comment">//一个学期上上课的周数</span><br>                    <span class="hljs-keyword">if</span> (lesson.length == <span class="hljs-number">20</span>) &#123;<br><br>                        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> a = <span class="hljs-built_in">Number</span>(lesson.split(<span class="hljs-string">&#x27;)&#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;-&#x27;</span>)[<span class="hljs-number">0</span>]); a &lt; <span class="hljs-built_in">Number</span>(lesson.split(<span class="hljs-string">&#x27;)&#x27;</span>)[<span class="hljs-number">2</span>].split(<span class="hljs-string">&#x27;-&#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;周&#x27;</span>)[<span class="hljs-number">0</span>]) + <span class="hljs-number">1</span>; a++) &#123;<br><br>                            re.weeks.push(a)<br>                        &#125;<br><br>                    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (lesson.length == <span class="hljs-number">15</span>) &#123;<br><br>                        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> a = <span class="hljs-built_in">Number</span>(lesson.split(<span class="hljs-string">&#x27;)&#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;-&#x27;</span>)[<span class="hljs-number">0</span>]); a &lt; <span class="hljs-built_in">Number</span>(lesson.split(<span class="hljs-string">&#x27;)&#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;-&#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;周&#x27;</span>)[<span class="hljs-number">0</span>]) + <span class="hljs-number">1</span>; a++) &#123;<br><br>                            <span class="hljs-keyword">let</span> evenNum = a;<br>                            <span class="hljs-keyword">if</span> (evenNum % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) &#123;<br>                                re.weeks.push(evenNum)<br>                            &#125;<br><br>                        &#125;<br><br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br><br>                        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> a = <span class="hljs-built_in">Number</span>(lesson.split(<span class="hljs-string">&#x27;)&#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;-&#x27;</span>)[<span class="hljs-number">0</span>]); a &lt; <span class="hljs-built_in">Number</span>(lesson.split(<span class="hljs-string">&#x27;)&#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;-&#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;周&#x27;</span>)[<span class="hljs-number">0</span>]) + <span class="hljs-number">1</span>; a++) &#123;<br><br>                            re.weeks.push(a)<br>                        &#125;<br>                    &#125;<br><br><br>                &#125;<br>            &#125;<br>            <span class="hljs-comment">//获取授课教师姓名</span><br>            <span class="hljs-keyword">if</span> (aaa[i].attribs.title == <span class="hljs-string">&#x27;教师&#x27;</span>) &#123;<br><br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; $(aaa[i]).next()[<span class="hljs-number">0</span>].children.length; j++) &#123;<br>                    re.teacher = $(aaa[i]).next()[<span class="hljs-number">0</span>].children[j].data<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (aaa[i].attribs.class == <span class="hljs-string">&#x27;title&#x27;</span>) &#123;<br><br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; $(aaa[i]).children()[<span class="hljs-number">0</span>].children.length; j++) &#123;<br>                    re.name = $(aaa[i]).children()[<span class="hljs-number">0</span>].children[j].data<br><br>                &#125;<br>            &#125;<br><br>        &#125;<br>        result.push(re)<br>    &#125;<br><br><br><br><br>    <span class="hljs-comment">// 上课时间</span><br><br>    <span class="hljs-keyword">var</span> classTime = [<br>        &#123; <span class="hljs-string">&quot;section&quot;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&quot;startTime&quot;</span>: <span class="hljs-string">&quot;08:00&quot;</span>, <span class="hljs-string">&quot;endTime&quot;</span>: <span class="hljs-string">&quot;08:50&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;section&quot;</span>: <span class="hljs-number">2</span>, <span class="hljs-string">&quot;startTime&quot;</span>: <span class="hljs-string">&quot;09:00&quot;</span>, <span class="hljs-string">&quot;endTime&quot;</span>: <span class="hljs-string">&quot;09:50&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;section&quot;</span>: <span class="hljs-number">3</span>, <span class="hljs-string">&quot;startTime&quot;</span>: <span class="hljs-string">&quot;10:15&quot;</span>, <span class="hljs-string">&quot;endTime&quot;</span>: <span class="hljs-string">&quot;11:05&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;section&quot;</span>: <span class="hljs-number">4</span>, <span class="hljs-string">&quot;startTime&quot;</span>: <span class="hljs-string">&quot;11:25&quot;</span>, <span class="hljs-string">&quot;endTime&quot;</span>: <span class="hljs-string">&quot;12:15&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;section&quot;</span>: <span class="hljs-number">5</span>, <span class="hljs-string">&quot;startTime&quot;</span>: <span class="hljs-string">&quot;14:00&quot;</span>, <span class="hljs-string">&quot;endTime&quot;</span>: <span class="hljs-string">&quot;14:50&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;section&quot;</span>: <span class="hljs-number">6</span>, <span class="hljs-string">&quot;startTime&quot;</span>: <span class="hljs-string">&quot;15:00&quot;</span>, <span class="hljs-string">&quot;endTime&quot;</span>: <span class="hljs-string">&quot;15:50&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;section&quot;</span>: <span class="hljs-number">7</span>, <span class="hljs-string">&quot;startTime&quot;</span>: <span class="hljs-string">&quot;16:00&quot;</span>, <span class="hljs-string">&quot;endTime&quot;</span>: <span class="hljs-string">&quot;16:50&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;section&quot;</span>: <span class="hljs-number">8</span>, <span class="hljs-string">&quot;startTime&quot;</span>: <span class="hljs-string">&quot;17:00&quot;</span>, <span class="hljs-string">&quot;endTime&quot;</span>: <span class="hljs-string">&quot;17:50&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;section&quot;</span>: <span class="hljs-number">9</span>, <span class="hljs-string">&quot;startTime&quot;</span>: <span class="hljs-string">&quot;18:30&quot;</span>, <span class="hljs-string">&quot;endTime&quot;</span>: <span class="hljs-string">&quot;20:20&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;section&quot;</span>: <span class="hljs-number">10</span>, <span class="hljs-string">&quot;startTime&quot;</span>: <span class="hljs-string">&quot;20:30&quot;</span>, <span class="hljs-string">&quot;endTime&quot;</span>: <span class="hljs-string">&quot;21:20&quot;</span> &#125;,<br>    ]<br><br><br>    <span class="hljs-built_in">console</span>.log(result)<br>    <span class="hljs-built_in">console</span>.log(classTime)<br>    <span class="hljs-keyword">return</span> &#123;<br>        courseInfos: result,<br>        sectionTimes: classTime<br>    &#125;<br><br><br><br><br><br>&#125;<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>时光轴</title>
    <link href="/2021/01/29/timeLine/"/>
    <url>/2021/01/29/timeLine/</url>
    
    <content type="html"><![CDATA[<h1 id="简易的时光轴练习"><a href="#简易的时光轴练习" class="headerlink" title="简易的时光轴练习"></a>简易的时光轴练习</h1><h2 id="相关知识"><a href="#相关知识" class="headerlink" title="相关知识"></a>相关知识</h2><p>这个简易的时光轴的实现,使用了html和css.元素主要有时间,图片,文字.</p><a id="more"></a><h3 id="list-style"><a href="#list-style" class="headerlink" title="list-style"></a>list-style</h3><p><strong>定义和用法</strong></p><p>list-style 简写属性在一个声明中设置所有的列表属性。</p><p>说明</p><p>该属性是一个简写属性，涵盖了所有其他列表样式属性。由于它应用到所有 display 为 list-item 的元素，所以在普通的 HTML 和 XHTML 中只能用于 li 元素，不过实际上它可以应用到任何元素，并由 list-item 元素继承。</p><p>可以按顺序设置如下属性：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">list-style-type</span><br><span class="hljs-selector-tag">list-style-position</span><br><span class="hljs-selector-tag">list-style-image</span><br></code></pre></td></tr></table></figure><p>可以不设置其中的某个值，比如 “list-style:circle inside;” 也是允许的。未设置的属性会使用其默认值。<br>|默认值：|disc outside none|<br>|—-|—-|<br>|继承性：|yes|<br>|版本：|CSS1|<br>|JavaScript 语法：|object.style.listStyle=”decimal inside”|</p><hr><table><thead><tr><th>描述</th><th>值</th></tr></thead><tbody><tr><td>list-style-type</td><td>设置列表项标记的类型。</td></tr><tr><td>list-style-position</td><td>设置在何处放置列表项标记。</td></tr><tr><td>list-style-image</td><td>使用图像来替换列表项的标记</td></tr><tr><td>inherit</td><td>规定应该从父元素继承 list-style 属性的值。</td></tr></tbody></table><h2 id="transform属性"><a href="#transform属性" class="headerlink" title="transform属性"></a>transform属性</h2><p><strong>属性定义及使用说明</strong><br>Transform属性应用于元素的2D或3D转换。这个属性允许你将元素旋转，缩放，移动，倾斜等。<br>|默认值：|none|<br>|—-|—-|<br>|继承：|no|<br>|版本：|CSS3|<br>|JavaScript 语法：|object.style.transform=”rotate(7deg)”|</p><p>语法</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">transform: none|transform-functions;<br></code></pre></td></tr></table></figure><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>none</td><td>定义不进行转换。</td></tr><tr><td>matrix(n,n,n,n,n,n)</td><td>定义 2D 转换，使用六个值的矩阵。</td></tr><tr><td>matrix3d(n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n)</td><td>定义 3D 转换，使用 16 个值的 4x4 矩阵。</td></tr><tr><td>translate(x,y)</td><td>定义 2D 转换。</td></tr><tr><td>translate3d(x,y,z)</td><td>定义 3D 转换。</td></tr><tr><td>translateX(x)</td><td>定义转换，只是用 X 轴的值</td></tr><tr><td>translateY(y)</td><td>定义转换，只是用 Y 轴的值。</td></tr><tr><td>translateZ(z)</td><td>定义 3D 转换，只是用 Z 轴的值。</td></tr><tr><td>scale(x[,y]?)</td><td>定义 2D 缩放转换。</td></tr><tr><td>scale3d(x,y,z)</td><td>定义 3D 缩放转换。</td></tr><tr><td>scaleX(x)</td><td>通过设置 X 轴的值来定义缩放转换</td></tr><tr><td>scaleY(y)</td><td>通过设置 Y 轴的值来定义缩放转换。</td></tr><tr><td>rotate(angle)</td><td>定义 2D 旋转，在参数中规定角度</td></tr><tr><td>还有很多,<a href="https://www.runoob.com/cssref/css3-pr-transform.html">点击查看</a></td><td></td></tr></tbody></table><h2 id="transition"><a href="#transition" class="headerlink" title="transition"></a>transition</h2><p><strong>属性定义及使用说明</strong></p><p>transition 属性设置元素当过渡效果，四个简写属性为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">transition-property</span><br><span class="hljs-selector-tag">transition-duration</span><br><span class="hljs-selector-tag">transition-timing-function</span><br><span class="hljs-selector-tag">transition-delay</span><br></code></pre></td></tr></table></figure><p>注意： 始终指定transition-duration属性，否则持续时间为0，transition不会有任何效果。<br>|默认值|all 0 ease 0|<br>|—-|—-|<br>|继承：|    no|<br>|版本：|    CSS3|<br>|JavaScript 语法：|object.style.transition=”width 2s”|</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>transition-property</td><td>指定CSS属性的name，transition效果</td></tr><tr><td>transition-duration</td><td>transition效果需要指定多少秒或毫秒才能完成</td></tr><tr><td>transition-timing-function</td><td>指定transition效果的转速曲线</td></tr><tr><td>transition-delay</td><td>定义transition效果开始的时候</td></tr></tbody></table><h2 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h2><p><strong>html</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;css/style.css&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>时光轴效果<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>2021年1月28日21:11:41<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content-img&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/01.jpg&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;羽习&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content-words&quot;</span>&gt;</span><br>                    不见你,恍如三秋啊!<br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>2021年1月28日21:11:51<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content-img&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/02.jpg&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;羽习&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content-words&quot;</span>&gt;</span><br>                对你有时候甚是思念<br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>2021年1月28日21:11:56<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content-img&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/03.jpg&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;羽习&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content-words&quot;</span>&gt;</span><br>                有时候就是想想就好,没有想过我的结果,就是做出这一步<br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>css</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs css">*&#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-tag">ul</span>&#123;<br>    <span class="hljs-attribute">list-style</span>: none;<br>&#125;<br><br><span class="hljs-selector-tag">ul</span>&#123;<br>    <span class="hljs-attribute">max-width</span>: <span class="hljs-number">600px</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">100px</span> auto;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;<br>    <span class="hljs-attribute">position</span>: relative;<br>    <span class="hljs-attribute">padding-left</span>:<span class="hljs-number">20px</span> ;<br>&#125;<br><span class="hljs-selector-tag">ul</span><span class="hljs-selector-pseudo">::before</span>&#123;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">5px</span>;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#00ffff</span>;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span>&#123;<br>    <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">position</span>: relative;<br>&#125;<br><br><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">::before</span>&#123;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#00ffff</span> ;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>    <span class="hljs-attribute">left</span>: -<span class="hljs-number">28px</span>;<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">6px</span>;<br>&#125;<br><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-tag">span</span> &#123;<br>    <span class="hljs-attribute">color</span>: gray;<br>&#125;<br><br><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-class">.content</span>&#123;<br>    <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">20px</span> ;<br>&#125;<br><br><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-class">.content-img</span>&#123;<br>    <span class="hljs-attribute">overflow</span>: hidden;<br>&#125;<br><br><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-class">.content-img</span> <span class="hljs-selector-tag">img</span>&#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>    <span class="hljs-attribute">transition</span>: transform <span class="hljs-number">0.4s</span>;<br>&#125;<br><br><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-class">.content-img</span> <span class="hljs-selector-tag">img</span><span class="hljs-selector-pseudo">:hover</span>&#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale</span>(<span class="hljs-number">1.1</span>);<br>&#125;<br><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-class">.content</span> <span class="hljs-selector-class">.content-words</span>&#123;<br>    <span class="hljs-attribute">text-align</span>: justify;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>;<br>    <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">18px</span>;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.6</span>;<br>    <span class="hljs-attribute">transition</span>: transform <span class="hljs-number">0.4s</span>;<br>&#125;<br><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-class">.content</span> <span class="hljs-selector-class">.content-words</span><span class="hljs-selector-pseudo">:hover</span>&#123;<br>    <span class="hljs-attribute">transform</span>:<span class="hljs-built_in">translateX</span>(<span class="hljs-number">10px</span>);<br>    <span class="hljs-attribute">color</span>: gray;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>css|html</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>tab的实现</title>
    <link href="/2021/01/27/tabs/"/>
    <url>/2021/01/27/tabs/</url>
    
    <content type="html"><![CDATA[<h2 id="tab实现的方法"><a href="#tab实现的方法" class="headerlink" title="tab实现的方法"></a>tab实现的方法</h2><p>下面的代码的注释中已经描述的十分清楚。<br>主要就是css+js的方法实现点击就切换的方法.<br> <a id="more"></a></p><h2 id="setAttibute函数"><a href="#setAttibute函数" class="headerlink" title="setAttibute函数:"></a>setAttibute函数:</h2><p> 定义和用法</p><pre><code>setAttribute() 方法添加指定的属性，并为其赋指定的值。如果这个指定的属性已存在，则仅设置/更改值。setAttribute(string name, string value)：增加一个指定名称和值的新属性，或者把一个现有的属性设定为指定的值。</code></pre><h3 id="语法"><a href="#语法" class="headerlink" title="语法:"></a>语法:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">element.setAttribute(attributename,attributevalue)<br></code></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>attributename</td><td>string</td><td>必需。您希望添加的属性的名称。</td></tr><tr><td>attributevalue</td><td>String</td><td>必需。您希望添加的属性值。</td></tr></tbody></table><h3 id="例子"><a href="#例子" class="headerlink" title="例子:"></a>例子:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> input = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;input&quot;</span>);<br>input.setAttribute(<span class="hljs-string">&quot;type&quot;</span>, <span class="hljs-string">&quot;text&quot;</span>);<br>input.setAttribute(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;q&quot;</span>);<br>input.setAttribute(<span class="hljs-string">&quot;class&quot;</span>,bordercss);<br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">&lt;<span class="hljs-keyword">input</span> <span class="hljs-keyword">type</span>=&quot;text&quot; <span class="hljs-type">name</span>=&quot;q&quot; <span class="hljs-keyword">class</span>=&quot;bordercss&quot;&gt;,即，<span class="hljs-keyword">input</span>控件具有bordercss样式属性<br></code></pre></td></tr></table></figure><h2 id="getAttribute-函数"><a href="#getAttribute-函数" class="headerlink" title="getAttribute()函数"></a>getAttribute()函数</h2><h3 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h3><pre><code>getAttribute() 方法返回指定属性名的属性值。提示：如果您希望以 Attr 对象返回属性，请使getAttributeNode。--------------------------------------------------------getAttribute()方法是一个函数。它只有一个参数——你打算查询的属性的名字,下面为大家介绍下其具体的使用</code></pre><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">element.getAttribute(attributename)<br></code></pre></td></tr></table></figure><h3 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h3><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>attributename</td><td>字符串值。</td><td>必需。需要获得属性值的属性名称。</td></tr></tbody></table><h3 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h3><table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>指定属性的值。</td></tr></tbody></table><p><strong>注意</strong></p><p>不过，getAttribute()方法不能通过document对象调用，这与我们此前介绍过的其他方法不同。我们只能通过一个元素节点对象调用它。</p><p>可以把它与getElementsByTagName()方法结合起来，去查询每个&lt;p&gt;元素的title属性</p><h3 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> text=<span class="hljs-built_in">document</span>.getElementsByTagName(<span class="hljs-string">&quot;p&quot;</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;text.length;i++)<br>&#123;<br>alert(text[i].getAttribute(<span class="hljs-string">&quot;title&quot;</span>));<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;css/style.css&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>手风琴<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tabs&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-tab&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;dis&quot;</span>&gt;</span>张羽习<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>李一桐<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>冷檬<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;info&quot;</span>&gt;</span>张羽习<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>李一桐<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>冷檬<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">        <span class="hljs-keyword">var</span> spanlist = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;span&#x27;</span>);</span><br><span class="javascript">        <span class="hljs-keyword">var</span> lis = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;li&#x27;</span>);</span><br><span class="javascript">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i =<span class="hljs-number">0</span> ; i &lt; spanlist.length; i++) &#123;</span><br><span class="javascript">            <span class="hljs-comment">//添加自定义属性</span></span><br><span class="javascript">            spanlist[i].setAttribute(<span class="hljs-string">&#x27;index&#x27;</span>, i);</span><br><span class="javascript">            <span class="hljs-comment">//获取span点击事件</span></span><br><span class="javascript">            spanlist[i].onclick= <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">                <span class="hljs-built_in">console</span>.log(spanlist)</span><br><span class="javascript">                <span class="hljs-comment">//获取自定义属性,然后遍历数组</span></span><br><span class="javascript">                <span class="hljs-keyword">var</span> index = <span class="hljs-built_in">this</span>.getAttribute(<span class="hljs-string">&#x27;index&#x27;</span>);</span><br><span class="javascript">                <span class="hljs-comment">//遍历lis这个数组,然后再用if进行判断是不是这个</span></span><br><span class="javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> l = <span class="hljs-number">0</span>; l &lt; lis.length; l++) &#123;</span><br><span class="javascript">                    <span class="hljs-comment">//通过if来判定 两个伪数组的下标是否相同,如果相同就改变属性 ---(style.display 和 classroom的值)</span></span><br><span class="javascript">                    <span class="hljs-keyword">if</span> (index == l) &#123;</span><br><span class="javascript">                        <span class="hljs-comment">//注意是==</span></span><br><span class="javascript">                        <span class="hljs-comment">//如果index下标和j的下标一样的就执行代码</span></span><br><span class="javascript">                        spanlist[l].className = <span class="hljs-string">&#x27;dis&#x27;</span>;</span><br><span class="javascript">                        lis[l].style.display = <span class="hljs-string">&#x27;block&#x27;</span>;</span><br><span class="javascript">                    &#125; <span class="hljs-keyword">else</span> &#123;<span class="hljs-comment">// if 和else需要写完整以后才能执行</span></span><br><span class="javascript">                        spanlist[l].className = <span class="hljs-string">&#x27;&#x27;</span>;</span><br><span class="javascript">                        lis[l].style.display = <span class="hljs-string">&#x27;none&#x27;</span>;</span><br>                    &#125;<br>                &#125;<br>            &#125;<br><br>        &#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs css">*&#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.tabs</span> <span class="hljs-selector-class">.nav-tab</span>&#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#e5e6e5</span>;<br>&#125;<br><span class="hljs-selector-class">.tabs</span> <span class="hljs-selector-class">.nav-tab</span> <span class="hljs-selector-tag">span</span>&#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">position</span>: relative;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><span class="hljs-selector-class">.tabs</span> <span class="hljs-selector-class">.nav-tab</span> <span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">:hover</span>&#123;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#bcbdbd</span>;<br>&#125;<br><span class="hljs-selector-class">.content</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br>    <span class="hljs-attribute">background</span>: black;<br>&#125;<br><span class="hljs-selector-class">.content</span> <span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">5px</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>    <span class="hljs-attribute">display</span>: none;<br>&#125;<br><span class="hljs-selector-class">.content</span> <span class="hljs-selector-class">.info</span>&#123;<br>    <span class="hljs-attribute">display</span>: block;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>css|js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>正则表达式</title>
    <link href="/2021/01/22/Rep/"/>
    <url>/2021/01/22/Rep/</url>
    
    <content type="html"><![CDATA[<h1 id="正则表达式学习"><a href="#正则表达式学习" class="headerlink" title="正则表达式学习"></a>正则表达式学习</h1><a id="more"></a><p><em>例子</em></p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs haml">^[0-9]+abs$<br><br> -<span class="ruby">  ^ 为匹配输入字符串的开始位置。</span><br><br><span class="ruby"> -  [<span class="hljs-number">0</span>-<span class="hljs-number">9</span>]+匹配多个数字， [<span class="hljs-number">0</span>-<span class="hljs-number">9</span>] 匹配单个数字，+ 匹配一个或者多个。</span><br><br><span class="ruby"> -  abc<span class="hljs-variable">$匹</span>配字母 abc 并以 abc 结尾，<span class="hljs-variable">$ </span>为匹配输入字符串的结束位置。</span><br></code></pre></td></tr></table></figure><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs subunit">^[a-z0<span class="hljs-string">-9</span>_-]&#123;3,15&#125;$<br>-   [a-z0<span class="hljs-string">-9</span>_-]表示字母(a-z)数字(0<span class="hljs-string">-9</span>)还有加上下划线连字符<br>-   &#123;3,15&#125;表示3<span class="hljs-string">-15</span>个字符<br></code></pre></td></tr></table></figure><table><thead><tr><th>字符</th><th>描述</th></tr></thead><tbody><tr><td>[ABC]</td><td>匹配 […] 中的所有字符，例如 [aeiou] 匹配字符串     “google runoob taobao” 中所有的 e o u a 字母。</td></tr><tr><td>[^ABC]</td><td>匹配除了 […] 中字符的所有字符，例如 [^aeiou] 匹配字符串 “google runoob taobao” 中除了 e o u a 字母的所有字母。</td></tr><tr><td>[A-Z]</td><td>表示一个区间，匹配所有大写字母，[a-z] 表示所有小写字母。</td></tr><tr><td>.</td><td>匹配除换行符（\n、\r）之外的任何单个字符，相等于 [^\n\r]。</td></tr><tr><td>[\s\S]</td><td>匹配所有。\s 是匹配所有空白符，包括换行，\S 非空白符，包括换行。</td></tr><tr><td>\w</td><td>匹配字母、数字、下划线。等价于 [A-Za-z0-9_]</td></tr></tbody></table><h2 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h2><p>所谓特殊字符，就是一些有特殊含义的字符，如上面说的 runoo<em>b 中的 <em>，简单的说就是表示任何字符串的意思。如果要查找字符串中的 * 符号，则需要对 * 进行转义，即在其前加一个 : runo\</em>ob 匹配 runo</em>ob。</p><p>许多元字符要求在试图匹配它们时特别对待。若要匹配这些特殊字符，必须首先使字符”转义”，即，将反斜杠字符\ 放在它们前面。下表列出了正则表达式中的特殊字符：</p><table><thead><tr><th>特殊字符</th><th>描述</th></tr></thead><tbody><tr><td>$</td><td>匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 ‘\n’ 或 ‘\r’。要匹配 $ 字符本身，请使用 $。</td></tr><tr><td>( )</td><td>标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 ( 和 )。</td></tr><tr><td>*</td><td>匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 *。</td></tr><tr><td>+</td><td>匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 +。</td></tr><tr><td>.</td><td>匹配除换行符 \n 之外的任何单字符。要匹配 . ，请使用 . 。</td></tr><tr><td>[</td><td>标记一个中括号表达式的开始。要匹配 [，请使用 [。</td></tr><tr><td>?</td><td>匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 ?。</td></tr><tr><td>\</td><td>将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， ‘n’ 匹配字符 ‘n’。’\n’ 匹配换行符。序列 ‘\‘ 匹配 “&quot;，而 ‘(‘ 则匹配 “(“。</td></tr><tr><td>^</td><td>匹配输入字符串的开始位置，除非在方括号表达式中使用，当该符号在方括号表达式中使用时，表示不接受该方括号表达式中的字符集合。要匹配 ^ 字符本身，请使用 ^。</td></tr><tr><td>{</td><td>标记限定符表达式的开始。要匹配 {，请使用 {。</td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h2><p>限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有 * 或 + 或 ? 或 {n} 或 {n,} 或 {n,m} 共6种。</p><p>正则表达式的限定符有：</p><table><thead><tr><th>字符</th><th>描述</th></tr></thead><tbody><tr><td>*</td><td>匹配前面的子表达式零次或多次。例如，zo* 能匹配 “z” 以及 “zoo”。* 等价于{0,}。</td></tr><tr><td>+</td><td>匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。</td></tr><tr><td>?</td><td>匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 、 “does” 中的 “does” 、 “doxy” 中的 “do” 。? 等价于 {0,1}。</td></tr><tr><td>{n}</td><td>n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</td></tr><tr><td>{n,}</td><td>n 是一个非负整数。至少匹配n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*’。</td></tr><tr><td>{n,m}</td><td>m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。</td></tr></tbody></table><p>以下正则表达式匹配一个正整数，[1-9]设置第一个数字不是 0，[0-9]* 表示任意多个数字：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/[1-9][0-9]*/</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>正则表达式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网页设计/css</title>
    <link href="/2020/08/02/web2/"/>
    <url>/2020/08/02/web2/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="响应式网页设计原则：创建媒体查询"><a href="#响应式网页设计原则：创建媒体查询" class="headerlink" title="响应式网页设计原则：创建媒体查询"></a>响应式网页设计原则：创建媒体查询</h2><p>媒体查询是CSS3中引入的一项新技术，可根据不同的视口大小更改内容的表示形式。视口是用户在网页上的可见区域，视用于访问站点的设备而异。</p><p>媒体查询由一种媒体类型组成，如果该媒体类型与显示文档的设备类型匹配，则将应用样式。您可以在媒体查询中根据需要选择任意多个选择器和样式。</p><p>以下是媒体查询的示例，该查询在设备的宽度小于或等于100px时返回内容：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">max-width:</span> <span class="hljs-number">100px</span>) &#123; <span class="hljs-comment">/* CSS Rules */</span> &#125;<br></code></pre></td></tr></table></figure><p>当设备的高度大于或等于350px时，以下媒体查询将返回内容：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">min-height:</span> <span class="hljs-number">350px</span>) &#123; <span class="hljs-comment">/* CSS Rules */</span> &#125;<br></code></pre></td></tr></table></figure><p>** 请记住，仅当媒体类型与所使用设备的媒体类型匹配时，才会应用媒体查询中的CSS。**</p><p>例子：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">style</span>&gt;<br>  <span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;<br>  &#125;<br> <br>  <span class="hljs-comment">/* Only change code below this line */</span><br><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">max-height:</span> <span class="hljs-number">800px</span>) &#123;<br>  <span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;<br>  &#125;<br>  &#125;<br><br>   <span class="hljs-comment">/* CSS Rules */</span> <br>  <span class="hljs-comment">/* Only change code above this line */</span><br>&lt;/<span class="hljs-selector-tag">style</span>&gt;<br></code></pre></td></tr></table></figure><hr><h3 id="自适应网页设计原则：使图像具有响应性"><a href="#自适应网页设计原则：使图像具有响应性" class="headerlink" title="自适应网页设计原则：使图像具有响应性"></a>自适应网页设计原则：使图像具有响应性</h3><p>使用CSS使图像具有响应性实际上非常简单。您只需要向图像添加以下属性：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">img</span> &#123;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: auto;<br>&#125;<br></code></pre></td></tr></table></figure><p>max-width的100%将确保图像不会比它在容器更宽，而height中auto将会使图像保持其原始宽高比。</p><p>例子：</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span></span><br><span class="xml">.responsive-img &#123;</span><br><br><br><span class="xml">&#125;</span><br><br><span class="xml">img &#123;</span><br><span class="xml">  max-width: 100%;</span><br><span class="xml">  height:auto;</span><br><span class="xml">&#125;</span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br></code></pre></td></tr></table></figure><hr><h3 id="响应式Web设计原则：使用视网膜图像进行高分辨率显示"><a href="#响应式Web设计原则：使用视网膜图像进行高分辨率显示" class="headerlink" title="响应式Web设计原则：使用视网膜图像进行高分辨率显示"></a>响应式Web设计原则：使用视网膜图像进行高分辨率显示</h3><p>随着互联网连接设备的增加，它们的尺寸和规格也有所不同，并且它们使用的显示器在内部和外部可能会有所不同。像素密度是一个设备上可能与其他设备不同的方面，这种密度称为“像素每英寸（PPI）”或“每英寸点数（DPI）”。最著名的显示器就是最新的Apple MacBook Pro笔记本电脑和最近的iMac电脑上的“视网膜显示器”。由于“视网膜”和“非视网膜”显示器之间的像素密度不同，因此某些未考虑高分辨率显示器的图像在高分辨率显示器上渲染时可能看起来“像素化”。</p><p>使图像正确显示在高分辨率显示器（例如MacBook Pro“视网膜显示器”）上的最简单方法是将其width和height值定义为原始文件的一半。这是仅使用原始高度和宽度一半的图像的示例：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">style</span>&gt;<br>  <span class="hljs-selector-tag">img</span> &#123; <span class="hljs-attribute">height</span>: <span class="hljs-number">250px</span>; <span class="hljs-attribute">width</span>: <span class="hljs-number">250px</span>; &#125;<br>&lt;/<span class="hljs-selector-tag">style</span>&gt;<br>&lt;img src=&quot;coolPic500x500&quot; alt=&quot;A most excellent picture&quot;&gt;<br></code></pre></td></tr></table></figure><h3 id="响应式网页设计原则：使版式具有响应性"><a href="#响应式网页设计原则：使版式具有响应性" class="headerlink" title="响应式网页设计原则：使版式具有响应性"></a>响应式网页设计原则：使版式具有响应性</h3><p>您可以使用视口单位进行响应式排版，而不必使用文本em或不px调整文本大小。视口单位（如百分比）是相对单位，但它们基于不同的项目。视口单位是相对于设备的视口尺寸（宽度或高度），而百分比是相对于父容器元素的大小。</p><p>四个不同的视口单位是：</p><p>vw（视口宽度）：10vw将为视口宽度的10％。<br>vh（视口高度）：3vh将为视口高度的3％。<br>vmin（最小视口）：70vmin将是视口较小尺寸（高度或宽度）的70％。<br>vmax（最大视口）：100vmax将是视口较大尺寸（高度或宽度）的100％。<br>这是一个将body标签设置为视口宽度的30％的示例。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span> &#123; <span class="hljs-attribute">width</span>: <span class="hljs-number">30vw</span>; &#125;<br><br></code></pre></td></tr></table></figure><h2 id="CSS-Flexbox：使用显示：flex定位两个框"><a href="#CSS-Flexbox：使用显示：flex定位两个框" class="headerlink" title="CSS Flexbox：使用显示：flex定位两个框"></a>CSS Flexbox：使用显示：flex定位两个框</h2><p>本节使用交替的质询样式来说明如何使用CSS灵活地放置元素。首先，挑战将解释理论，然后使用简单的tweet组件进行实际挑战将应用flexbox概念。</p><p>将CSS属性display: flex;放在元素上可让您使用其他flex属性来构建响应页面。</p><style>  #box-container {    display: flex;    height: 500px;  }  #box-1 {    background-color: dodgerblue;    width: 50%;    height: 50%;  }  #box-2 {    background-color: orangered;    width: 50%;    height: 50%;  }</style><div id="box-container">  <div id="box-1"></div>  <div id="box-2"></div></div><h3 id="CSS-Flexbox：在Tweet嵌入中添加Flex超级功能"><a href="#CSS-Flexbox：在Tweet嵌入中添加Flex超级功能" class="headerlink" title="CSS Flexbox：在Tweet嵌入中添加Flex超级功能"></a>CSS Flexbox：在Tweet嵌入中添加Flex超级功能</h3><p>右侧是将用作实际示例的推特嵌入。在不同布局下，某些元素看起来会更好。最后的挑战证明了display: flex。在这里，您将把它添加到嵌入的推文中的几个组件中，以开始调整其位置。</p><style>  body {    font-family: Arial, sans-serif;  }  header {  }  header .profile-thumbnail {    width: 50px;    height: 50px;    border-radius: 4px;  }  header .profile-name {    margin-left: 10px;  }  header .follow-btn {    margin: 0 0 0 auto;  }  header .follow-btn button {    border: 0;    border-radius: 3px;    padding: 5px;  }  header h3, header h4 {    margin: 0;  }  #inner p {    margin-bottom: 10px;    font-size: 20px;  }  #inner hr {    margin: 20px 0;    border-style: solid;    opacity: 0.1;  }  footer {  }  footer .stats {    font-size: 15px;  }  footer .stats strong {    font-size: 18px;  }  footer .stats .likes {    margin-left: 10px;  }  footer .cta {    margin-left: auto;  }  footer .cta button {    border: 0;    background: transparent;  }</style><header>  <img src="https://freecodecamp.s3.amazonaws.com/quincy-twitter-photo.jpg" alt="Quincy Larson's profile picture" class="profile-thumbnail">  <div class="profile-name">    <h3>Quincy Larson</h3>    <h4>@ossia</h4>  </div>  <div class="follow-btn">    <button>Follow</button>  </div></header><div id="inner">  <p>I meet so many people who are in search of that one trick that will help them work smart. Even if you work smart, you still have to work hard.</p>  <span class="date">1:32 PM - 12 Jan 2018</span>  <hr></div><footer>  <div class="stats">    <div class="Retweets">      <strong>107</strong> Retweets    </div>    <div class="likes">      <strong>431</strong> Likes    </div>  </div>  <div class="cta">    <button class="share-btn">Share</button>    <button class="retweet-btn">Retweet</button>    <button class="like-btn">Like</button>  </div></footer><hr><h2 id="CSS-Flexbox：使用flex-direction属性创建一行"><a href="#CSS-Flexbox：使用flex-direction属性创建一行" class="headerlink" title="CSS Flexbox：使用flex-direction属性创建一行"></a>CSS Flexbox：使用flex-direction属性创建一行</h2><p>添加display: flex到元素会将其变成flex容器。这样就可以将该元素的所有子元素对齐到行或列中。通过将flex-direction属性添加到父项并将其设置为行或列来执行此操作。创建一行将使子代水平对齐，创建一列将使子代垂直对齐。</p><p>其他选项为flex-direction行反向和列反向。</p><p>注意：该flex-direction属性的默认值为row。</p>]]></content>
    
    
    
    <tags>
      
      <tag>响应式设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>

<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>鼠标移上去图片放大</title>
    <link href="/2021/03/14/html-tupianfangda/"/>
    <url>/2021/03/14/html-tupianfangda/</url>
    
    <content type="html"><![CDATA[<h1 id="图片放大"><a href="#图片放大" class="headerlink" title="图片放大"></a>图片放大</h1><a id="more"></a><h3 id="html文件"><a href="#html文件" class="headerlink" title="html文件"></a>html文件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>鼠标移上去图片放大<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;image&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/01.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">````</span><br><span class="line"></span><br><span class="line">```css</span><br><span class="line">/*</span><br><span class="line">content: 鼠标移上去放大样式表</span><br><span class="line">author: weiWei</span><br><span class="line">time: 2021/03/14 13:54</span><br><span class="line">class: imation</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">body&#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    align-items: center;</span><br><span class="line">    min-height: 100vh;</span><br><span class="line">&#125;</span><br><span class="line">#image&#123;</span><br><span class="line">    width: 300px;</span><br><span class="line">    height: 300px;</span><br><span class="line">    background-color: #000;</span><br><span class="line">    background-image: url(../img/dog.jpg);</span><br><span class="line">    background-size: 300px;</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#image[index]&#123;</span><br><span class="line">    background-size: 900px 900px;</span><br><span class="line">    background-position: calc(var(--x)*100%) calc(var(--y)*100%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">content: 鼠标移上去放大脚本</span></span><br><span class="line"><span class="comment">author: weiWei</span></span><br><span class="line"><span class="comment">time: 2021/03/14 13:54</span></span><br><span class="line"><span class="comment">class: imation</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//电脑版鼠标移动事件</span></span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">&#x27;#image&#x27;</span>).addEventListener(<span class="string">&#x27;mouseenter&#x27;</span>, enterImage);<span class="comment">//进入图片触发mouseenter</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">&#x27;#image&#x27;</span>).addEventListener(<span class="string">&#x27;mousemove&#x27;</span>, moveImage);<span class="comment">//鼠标在图片游动上触发mousemove</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">&#x27;#image&#x27;</span>).addEventListener(<span class="string">&#x27;mouseleave&#x27;</span>, leaveImage);<span class="comment">//离开图片触发mouseenter</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//手机触摸事件</span></span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">&#x27;#image&#x27;</span>).addEventListener(<span class="string">&#x27;touchstart&#x27;</span>, enterImage);<span class="comment">//触摸进入图片触发</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">&#x27;#image&#x27;</span>).addEventListener(<span class="string">&#x27;touchmove&#x27;</span>, moveImage);<span class="comment">//在图片上触摸滑动触发</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">&#x27;#image&#x27;</span>).addEventListener(<span class="string">&#x27;touchend&#x27;</span>, leaveImage);<span class="comment">//离开图片触发</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//进入图片的函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">enterImage</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    e.target.setAttribute(<span class="string">&#x27;index&#x27;</span>, <span class="number">1</span>);</span><br><span class="line">    moveImage(e);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    touch事件的event没有offsetX和offsetY</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//鼠标在图片上面移动</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">moveImage</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> rect = e.target.getBoundingClientRect();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//自己定义offsetX和offsetY</span></span><br><span class="line">    <span class="keyword">let</span> offsetX , offsetY ;</span><br><span class="line">    <span class="keyword">if</span>([<span class="string">&#x27;touchstart&#x27;</span>, <span class="string">&#x27;touchmove&#x27;</span>, <span class="string">&#x27;touchend&#x27;</span>].includes(e.type))&#123;</span><br><span class="line">        offsetX = e.touches[<span class="number">0</span>].pageX - rect.left;</span><br><span class="line">        offsetY = e.touches[<span class="number">0</span>].pageY - rect.top; </span><br><span class="line">        e.preventDefault()</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        offsetX = e.offsetX;</span><br><span class="line">        offsetY = e.offsetY;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> x = offsetX / rect.width;  <span class="comment">//获取图片在X轴的位移</span></span><br><span class="line">    <span class="keyword">let</span> y = offsetY / rect.height;  <span class="comment">//获取图片在Y轴的位移</span></span><br><span class="line"></span><br><span class="line">    e.target.style.setProperty(<span class="string">&#x27;--x&#x27;</span>, x);</span><br><span class="line">    e.target.style.setProperty(<span class="string">&#x27;--y&#x27;</span>, y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//鼠标在离开图片以后</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">leaveImage</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    e.target.removeAttribute(<span class="string">&#x27;index&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">    moveImage(e);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><ul><li><p>css变量</p><pre><code># 解释 - CSS 变量是由CSS作者定义的实体，其中包含要在整个文档中重复使用的特定值。使用自定义属性来设置变量名，并使用特定的 var() 来访问。（比如  color: var(--main-color);）。# 解决问题 在构建大型站点的时候,面对很多的重复使用信息,可以设定变量,重复使用 CSS变量为我们带来一些预处理器的便利，并且不需要额外的编译。并使用特定的 var() 来访问。（比如  color: var(--main-color);）。</code></pre></li></ul><ul><li><p>鼠标事件</p><p>mouseenter: 鼠标进入</p><p>mousemove: 鼠标移动</p><p>mouseleave: 鼠标离开</p><h1 id="addEventListener-‘event’-’function’-useCapture"><a href="#addEventListener-‘event’-’function’-useCapture" class="headerlink" title="addEventListener(‘event’,’function’,useCapture)"></a>addEventListener(‘event’,’function’,useCapture)</h1><pre><code> 方法用于向指定元素添加事件句柄。</code></pre><p>  参数: </p><pre><code>  event: 必须。字符串，指定事件名。  function: 指定要触发的函数名称  useCapture: 可有可无,放置布尔值   可能值:        true - 事件句柄在捕获阶段执行        false- 默认。事件句柄在冒泡阶段执行</code></pre><p> <strong>注意</strong>: 不要使用 “on” 前缀。 例如，使用 “click” ,而不是使用 “onclick”。</p></li><li><p>形式参数e</p><p> 这里的e是参数的名字。参数分为：<br> 1.形参：形式参数，相当于函数声明的局部变量，实参把自己的值赋给形参，形参就保存了这个值<br> 2.形参只能在函数内部使用。</p></li><li><p>移动端 touch事件<br> Touch<br> Touch对象代表一个触点，可以通过 event.touches[0]获取，每个触点包含位置，大小，形状，压力大小，和目标 element属性。</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>html</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>生成自己小爱同学超级课程表</title>
    <link href="/2021/02/25/xiaoa/"/>
    <url>/2021/02/25/xiaoa/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><a id="more"></a><p><img src="https://t1.picb.cc/uploads/2021/02/25/Zr3cbG.jpg" alt="开发者"></p><p>我看过超级课程表的一键导入课表,还有我们学校的一个公众号的一键导入课表,我为此深深着迷.现在看到小爱同学的这一款,总体来说不难.<br>下面请看我慢慢道来。</p><h2 id="开发者文档"><a href="#开发者文档" class="headerlink" title="开发者文档"></a>开发者文档</h2><p>开发文档很重要,不要忘记了。<br><a href="https://ldtu0m3md0.feishu.cn/docs/doccnhZPl8KnswEthRXUz8ivnhb#26bux2">https://ldtu0m3md0.feishu.cn/docs/doccnhZPl8KnswEthRXUz8ivnhb#26bux2</a></p><h2 id="我的学校代码"><a href="#我的学校代码" class="headerlink" title="我的学校代码"></a>我的学校代码</h2><p>我们要写的代码主要为 scheduleHtmlProvider.js 和 scheduleHtmlParser.js 这两个文件.如果你的学校是正方教务系统的话,可以在默认的基础上修改,一般不需要大改.</p><p>Provider是用来获取html的函数，将获取到的html传给 Parser 进行数据处理，截取出对应的课程信息，再封装为规定的json格式数据返回。</p><h2 id="代码讲解"><a href="#代码讲解" class="headerlink" title="代码讲解"></a>代码讲解</h2><p>以下是默认的Provider函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">scheduleHtmlProvider</span>(<span class="params">iframeContent = <span class="string">&quot;&quot;</span>, frameContent = <span class="string">&quot;&quot;</span>, dom = <span class="built_in">document</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//除函数名外都可编辑</span></span><br><span class="line">    <span class="comment">//以下为示例，您可以完全重写或在此基础上更改</span></span><br><span class="line">                                </span><br><span class="line"><span class="keyword">const</span> ifrs = dom.getElementsByTagName(<span class="string">&quot;iframe&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> frs = dom.getElementsByTagName(<span class="string">&quot;frame&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ifrs.length) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; ifrs.length; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> dom = ifrs[i].contentWindow.document;</span><br><span class="line">        iframeContent += scheduleHtmlProvider(iframeContent, frameContent, dom);</span><br><span class="line">        &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span> (frs.length) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; frs.length; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> dom = frs[i].contentDocument.body.parentElement;</span><br><span class="line">        frameContent += scheduleHtmlProvider(iframeContent, frameContent, dom);</span><br><span class="line">        &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(!ifrs.length &amp;&amp; !frs.length)&#123;</span><br><span class="line">    <span class="keyword">return</span> dom.querySelector(<span class="string">&#x27;body&#x27;</span>).outerHTML</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dom.getElementsByTagName(<span class="string">&#x27;html&#x27;</span>)[<span class="number">0</span>].innerHTML + iframeContent+frameContent  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实我们主要去看 scheduleHtmlParser.js 这个文件,我会详细的介绍这个文件的</p><p>（scheduleHtmlParser函数的输出须符合以下数据结构）</p><table><thead><tr><th>参数名</th><th>术语解释</th><th>是否必填</th><th align="left">说明</th></tr></thead><tbody><tr><td>courseInfo</td><td>Array[{},{}</td><td>是</td><td align="left">课程表详细信息: <br>name: String 课程 <br>position: Sting 教室<br> teacher:String 教师<br> weeks:Array(非空)第几周 <br> day:Sring 星期几 <br>section:[] 第几节</td></tr><tr><td>sectionTimes</td><td>Array[{},{}]</td><td>否</td><td align="left">课时信息:<br> section: Number 第几节<br> startTime: String 开始时间<br> endTime: String 结束时间</td></tr></tbody></table><p>我为缩短开发的时间,然后直接使用默认的,在默认的基础上修改.<br>其实,Parser 对象选择和Jquery相似,主要是使用正则表达式</p><p>我已经在里面写了注释,具体看它把,不懂可以留言</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">scheduleHtmlParser</span>(<span class="params">html</span>) </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     Author: @Weiwei</span></span><br><span class="line"><span class="comment">     Version: v0.1.1</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> timeJsonArray = [];</span><br><span class="line">    <span class="keyword">let</span> result = [];  <span class="comment">//放置结果的数组</span></span><br><span class="line">    <span class="keyword">let</span> allDom = $(<span class="string">&#x27;#table1 .timetable_con&#x27;</span>); <span class="comment">//变量allDom作为选择器选择id为table1 class类为timetable_con</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> u = <span class="number">0</span>; u &lt; allDom.length; u++) &#123;   <span class="comment">//for循环遍历allDom</span></span><br><span class="line">        <span class="keyword">let</span> re = &#123;</span><br><span class="line">            sections: [],</span><br><span class="line">            weeks: []</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> aaa = $(allDom[u]).find(<span class="string">&#x27;span&#x27;</span>)</span><br><span class="line">        <span class="keyword">let</span> week = $(allDom[u]).parent(<span class="string">&#x27;td&#x27;</span>)[<span class="number">0</span>].attribs.id  <span class="comment">//获取当前第几周</span></span><br><span class="line">        <span class="keyword">if</span> (week) &#123;</span><br><span class="line">            re.day = week.split(<span class="string">&#x27;-&#x27;</span>)[<span class="number">0</span>]    <span class="comment">//获取当前是周几,分词然后获取第一个内容</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; aaa.length; i++) &#123;</span><br><span class="line">            <span class="comment">// 获取上课地点</span></span><br><span class="line">            <span class="keyword">if</span> (aaa[i].attribs.title == <span class="string">&#x27;上课地点&#x27;</span>) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; $(aaa[i]).next()[<span class="number">0</span>].children.length; j++) &#123;</span><br><span class="line">                    re.position = $(aaa[i]).next()[<span class="number">0</span>].children[j].data</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//获取有多少周课</span></span><br><span class="line">            <span class="keyword">if</span> (aaa[i].attribs.title == <span class="string">&#x27;节/周&#x27;</span>) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; $(aaa[i]).next()[<span class="number">0</span>].children.length; j++) &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">let</span> lesson = $(aaa[i]).next()[<span class="number">0</span>].children[j].data</span><br><span class="line">                    <span class="comment">//                              console.log(&quot;lesson为&quot;+lesson)</span></span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">let</span> a = <span class="built_in">Number</span>(lesson.split(<span class="string">&#x27;)&#x27;</span>)[<span class="number">0</span>].split(<span class="string">&#x27;(&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;-&#x27;</span>)[<span class="number">0</span>]); a &lt; <span class="built_in">Number</span>(lesson.split(<span class="string">&#x27;)&#x27;</span>)[<span class="number">0</span>].split(<span class="string">&#x27;(&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;-&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;节&#x27;</span>)[<span class="number">0</span>]) + <span class="number">1</span>; a++) &#123;</span><br><span class="line">                        <span class="comment">//                                     console.log(&quot;a1为&quot;+a)</span></span><br><span class="line">                        re.sections.push(&#123;</span><br><span class="line">                            section: a</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    <span class="comment">//一个学期上上课的周数</span></span><br><span class="line">                    <span class="keyword">if</span> (lesson.length == <span class="number">20</span>) &#123;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">let</span> a = <span class="built_in">Number</span>(lesson.split(<span class="string">&#x27;)&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;-&#x27;</span>)[<span class="number">0</span>]); a &lt; <span class="built_in">Number</span>(lesson.split(<span class="string">&#x27;)&#x27;</span>)[<span class="number">2</span>].split(<span class="string">&#x27;-&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;周&#x27;</span>)[<span class="number">0</span>]) + <span class="number">1</span>; a++) &#123;</span><br><span class="line"></span><br><span class="line">                            re.weeks.push(a)</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (lesson.length == <span class="number">15</span>) &#123;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">let</span> a = <span class="built_in">Number</span>(lesson.split(<span class="string">&#x27;)&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;-&#x27;</span>)[<span class="number">0</span>]); a &lt; <span class="built_in">Number</span>(lesson.split(<span class="string">&#x27;)&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;-&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;周&#x27;</span>)[<span class="number">0</span>]) + <span class="number">1</span>; a++) &#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">let</span> evenNum = a;</span><br><span class="line">                            <span class="keyword">if</span> (evenNum % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                                re.weeks.push(evenNum)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">let</span> a = <span class="built_in">Number</span>(lesson.split(<span class="string">&#x27;)&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;-&#x27;</span>)[<span class="number">0</span>]); a &lt; <span class="built_in">Number</span>(lesson.split(<span class="string">&#x27;)&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;-&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;周&#x27;</span>)[<span class="number">0</span>]) + <span class="number">1</span>; a++) &#123;</span><br><span class="line"></span><br><span class="line">                            re.weeks.push(a)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//获取授课教师姓名</span></span><br><span class="line">            <span class="keyword">if</span> (aaa[i].attribs.title == <span class="string">&#x27;教师&#x27;</span>) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; $(aaa[i]).next()[<span class="number">0</span>].children.length; j++) &#123;</span><br><span class="line">                    re.teacher = $(aaa[i]).next()[<span class="number">0</span>].children[j].data</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (aaa[i].attribs.class == <span class="string">&#x27;title&#x27;</span>) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; $(aaa[i]).children()[<span class="number">0</span>].children.length; j++) &#123;</span><br><span class="line">                    re.name = $(aaa[i]).children()[<span class="number">0</span>].children[j].data</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        result.push(re)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 上课时间</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> classTime = [</span><br><span class="line">        &#123; <span class="string">&quot;section&quot;</span>: <span class="number">1</span>, <span class="string">&quot;startTime&quot;</span>: <span class="string">&quot;08:00&quot;</span>, <span class="string">&quot;endTime&quot;</span>: <span class="string">&quot;08:50&quot;</span> &#125;,</span><br><span class="line">        &#123; <span class="string">&quot;section&quot;</span>: <span class="number">2</span>, <span class="string">&quot;startTime&quot;</span>: <span class="string">&quot;09:00&quot;</span>, <span class="string">&quot;endTime&quot;</span>: <span class="string">&quot;09:50&quot;</span> &#125;,</span><br><span class="line">        &#123; <span class="string">&quot;section&quot;</span>: <span class="number">3</span>, <span class="string">&quot;startTime&quot;</span>: <span class="string">&quot;10:15&quot;</span>, <span class="string">&quot;endTime&quot;</span>: <span class="string">&quot;11:05&quot;</span> &#125;,</span><br><span class="line">        &#123; <span class="string">&quot;section&quot;</span>: <span class="number">4</span>, <span class="string">&quot;startTime&quot;</span>: <span class="string">&quot;11:25&quot;</span>, <span class="string">&quot;endTime&quot;</span>: <span class="string">&quot;12:15&quot;</span> &#125;,</span><br><span class="line">        &#123; <span class="string">&quot;section&quot;</span>: <span class="number">5</span>, <span class="string">&quot;startTime&quot;</span>: <span class="string">&quot;14:00&quot;</span>, <span class="string">&quot;endTime&quot;</span>: <span class="string">&quot;14:50&quot;</span> &#125;,</span><br><span class="line">        &#123; <span class="string">&quot;section&quot;</span>: <span class="number">6</span>, <span class="string">&quot;startTime&quot;</span>: <span class="string">&quot;15:00&quot;</span>, <span class="string">&quot;endTime&quot;</span>: <span class="string">&quot;15:50&quot;</span> &#125;,</span><br><span class="line">        &#123; <span class="string">&quot;section&quot;</span>: <span class="number">7</span>, <span class="string">&quot;startTime&quot;</span>: <span class="string">&quot;16:00&quot;</span>, <span class="string">&quot;endTime&quot;</span>: <span class="string">&quot;16:50&quot;</span> &#125;,</span><br><span class="line">        &#123; <span class="string">&quot;section&quot;</span>: <span class="number">8</span>, <span class="string">&quot;startTime&quot;</span>: <span class="string">&quot;17:00&quot;</span>, <span class="string">&quot;endTime&quot;</span>: <span class="string">&quot;17:50&quot;</span> &#125;,</span><br><span class="line">        &#123; <span class="string">&quot;section&quot;</span>: <span class="number">9</span>, <span class="string">&quot;startTime&quot;</span>: <span class="string">&quot;18:30&quot;</span>, <span class="string">&quot;endTime&quot;</span>: <span class="string">&quot;20:20&quot;</span> &#125;,</span><br><span class="line">        &#123; <span class="string">&quot;section&quot;</span>: <span class="number">10</span>, <span class="string">&quot;startTime&quot;</span>: <span class="string">&quot;20:30&quot;</span>, <span class="string">&quot;endTime&quot;</span>: <span class="string">&quot;21:20&quot;</span> &#125;,</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(result)</span><br><span class="line">    <span class="built_in">console</span>.log(classTime)</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        courseInfos: result,</span><br><span class="line">        sectionTimes: classTime</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>css一些有用的技巧</title>
    <link href="/2021/02/02/css%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <url>/2021/02/02/css%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<h2 id="calc函数"><a href="#calc函数" class="headerlink" title="calc函数"></a>calc函数</h2><a id="more"></a><p><strong>1.简介</strong></p><p>calc()看其外表像个函数。平时在制作页面的时候，总会碰到有的元素是100%的宽度（例如body元素）。如果元素宽度为100%时，其自身不带其他盒模型属性设置还好，要是有别的，那将导致盒子撑破。比如说，有一个边框，或者说有margin和padding，这些都会让你的盒子撑破。我们换句话来说，如果你的元素宽度是100%时，只要你在元素中添加了border,padding,margin任何一值，都将会把元素盒子撑破（标准模式下，除IE怪异模式）。平时我们碰到这样的现象时，只能通过改变结构来实现，有时甚至无法解决。就算你通过繁琐的方法实现了，但由于浏览器的兼容性而导致最终效果不一致。calc()函数功能实现上面的效果来得更简单。</p><p><strong>2.语法</strong></p><p>calc()语法简单，利用 + , - , * , / 数学表达式来进行表示</p><p><strong>用于动态计算长度值</strong></p><ul><li>需要注意的是，运算符前后都需要保留一个空格，表达式中有“*”和“/”时，其前后可以没有空格，但建议留有空格；例如：width: calc(100% - 10px)；</li><li>可以使用百分比、px、em、rem等单位；</li><li>任何长度值都可以使用calc()函数进行计算；</li><li>calc()函数支持 “+”, “-“, “*”, “/“ 运算；</li><li>calc()函数使用标准的数学运算优先级规则；</li></ul><h2 id="box-sizing-属性"><a href="#box-sizing-属性" class="headerlink" title="box-sizing 属性"></a>box-sizing 属性</h2><p><strong>语法</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">box-sizing: content-box|border-box|inherit:</span><br></pre></td></tr></table></figure><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>content-box</td><td>这是 CSS2.1 指定的宽度和高度的行为。指定元素的宽度和高度（最小/最大属性）适用于box的宽度和高度。元素的填充和边框布局和绘制指定宽度和高度除外</td></tr><tr><td>border-box</td><td>指定宽度和高度（最小/最大属性）确定元素边框。也就是说，对元素指定宽度和高度包括了 padding 和 border 。通过从已设定的宽度和高度分别减去边框和内边距才能得到内容的宽度和高度。</td></tr><tr><td>inherit</td><td>指定 box-sizing 属性的值，应该从父元素继承</td></tr><tr><td>+</td><td></td></tr><tr><td><strong>指定两个boxes接壤</strong></td><td></td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>:border-box;</span><br><span class="line">    <span class="attribute">-moz-box-sizing</span>:border-box; <span class="comment">/* Firefox */</span></span><br><span class="line">    <span class="attribute">width</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">float</span>:left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="毛玻璃特效"><a href="#毛玻璃特效" class="headerlink" title="毛玻璃特效"></a>毛玻璃特效</h2><p>毛玻璃特效在日常的网页中都是寻常可见的，其大概结构为三层：背景层+毛玻璃层+内容层。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.container</span>&#123;</span></span><br><span class="line">    width: 500px;</span><br><span class="line">　　height: 200px;</span><br><span class="line">　　position: absolute;</span><br><span class="line">　　top: calc(50% - 100px);</span><br><span class="line">　　left: calc(50% - 250px);</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.glass</span>&#123;</span></span><br><span class="line">    position: absolute;</span><br><span class="line">　　top: 0;left: 0;right: 0;bottom: 0;</span><br><span class="line"><span class="css">　　<span class="selector-tag">background</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">　　filter: blur(20px);</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.content</span>&#123;</span></span><br><span class="line">　　position: absolute;</span><br><span class="line">　　top: 0;left: 0;right: 0;bottom: 0;</span><br><span class="line">　　padding: 20px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span><span class="comment">&lt;!--该层主要用于设定毛玻璃位置以及对毛玻璃的溢出进行限制，即作为毛玻璃的容器--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;glass&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!--该层用于模糊化--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>云边的鸟<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>flex布局技巧</title>
    <link href="/2021/02/02/flex%E5%B8%83%E5%B1%80%E6%8A%80%E5%B7%A7/"/>
    <url>/2021/02/02/flex%E5%B8%83%E5%B1%80%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<h2 id="flex实现二栏等分布局"><a href="#flex实现二栏等分布局" class="headerlink" title="flex实现二栏等分布局"></a>flex实现二栏等分布局</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>外层容器也就是div.wai设置display:flex，对项目也就是div.nei1/2设置flex：auto，代表 flex: 1 1 auto</p><a id="more"></a><p>例如</p><div class="wai" style="display: flex;background:#fff;width:20vw;height:10vw;">    <div class="nei1" style="display: flex; flex: 1 1 50%;background:pink;width:60vw;height:10vw;">    </div>    <div class="nei2"style="display: flex;flex: 1 1 50%;background:red;width:60vw;height:10vw;">    </div></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wai&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: flex;</span></span></span><br><span class="line"><span class="tag"><span class="string">    background:#fff;</span></span></span><br><span class="line"><span class="tag"><span class="string">    width:60vw;</span></span></span><br><span class="line"><span class="tag"><span class="string">    height:10vw;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nei1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: flex; </span></span></span><br><span class="line"><span class="tag"><span class="string">    flex: 1 1 50%;</span></span></span><br><span class="line"><span class="tag"><span class="string">    background:pink;</span></span></span><br><span class="line"><span class="tag"><span class="string">    width:60vw;</span></span></span><br><span class="line"><span class="tag"><span class="string">    height:10vw;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nei2&quot;</span><span class="attr">style</span>=<span class="string">&quot;display: flex;</span></span></span><br><span class="line"><span class="tag"><span class="string">    flex: 1 1 50%;</span></span></span><br><span class="line"><span class="tag"><span class="string">    background:red;</span></span></span><br><span class="line"><span class="tag"><span class="string">    width:60vw;</span></span></span><br><span class="line"><span class="tag"><span class="string">    height:10vw;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>css | flex</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>时光轴</title>
    <link href="/2021/01/29/timeLine/"/>
    <url>/2021/01/29/timeLine/</url>
    
    <content type="html"><![CDATA[<h1 id="简易的时光轴练习"><a href="#简易的时光轴练习" class="headerlink" title="简易的时光轴练习"></a>简易的时光轴练习</h1><h2 id="相关知识"><a href="#相关知识" class="headerlink" title="相关知识"></a>相关知识</h2><p>这个简易的时光轴的实现,使用了html和css.元素主要有时间,图片,文字.</p><a id="more"></a><h3 id="list-style"><a href="#list-style" class="headerlink" title="list-style"></a>list-style</h3><p><strong>定义和用法</strong></p><p>list-style 简写属性在一个声明中设置所有的列表属性。</p><p>说明</p><p>该属性是一个简写属性，涵盖了所有其他列表样式属性。由于它应用到所有 display 为 list-item 的元素，所以在普通的 HTML 和 XHTML 中只能用于 li 元素，不过实际上它可以应用到任何元素，并由 list-item 元素继承。</p><p>可以按顺序设置如下属性：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">list-style-type</span></span><br><span class="line"><span class="selector-tag">list-style-position</span></span><br><span class="line"><span class="selector-tag">list-style-image</span></span><br></pre></td></tr></table></figure><p>可以不设置其中的某个值，比如 “list-style:circle inside;” 也是允许的。未设置的属性会使用其默认值。<br>|默认值：|disc outside none|<br>|—-|—-|<br>|继承性：|yes|<br>|版本：|CSS1|<br>|JavaScript 语法：|object.style.listStyle=”decimal inside”|</p><hr><table><thead><tr><th>描述</th><th>值</th></tr></thead><tbody><tr><td>list-style-type</td><td>设置列表项标记的类型。</td></tr><tr><td>list-style-position</td><td>设置在何处放置列表项标记。</td></tr><tr><td>list-style-image</td><td>使用图像来替换列表项的标记</td></tr><tr><td>inherit</td><td>规定应该从父元素继承 list-style 属性的值。</td></tr></tbody></table><h2 id="transform属性"><a href="#transform属性" class="headerlink" title="transform属性"></a>transform属性</h2><p><strong>属性定义及使用说明</strong><br>Transform属性应用于元素的2D或3D转换。这个属性允许你将元素旋转，缩放，移动，倾斜等。<br>|默认值：|none|<br>|—-|—-|<br>|继承：|no|<br>|版本：|CSS3|<br>|JavaScript 语法：|object.style.transform=”rotate(7deg)”|</p><p>语法</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">transform: none|transform-functions;</span><br></pre></td></tr></table></figure><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>none</td><td>定义不进行转换。</td></tr><tr><td>matrix(n,n,n,n,n,n)</td><td>定义 2D 转换，使用六个值的矩阵。</td></tr><tr><td>matrix3d(n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n)</td><td>定义 3D 转换，使用 16 个值的 4x4 矩阵。</td></tr><tr><td>translate(x,y)</td><td>定义 2D 转换。</td></tr><tr><td>translate3d(x,y,z)</td><td>定义 3D 转换。</td></tr><tr><td>translateX(x)</td><td>定义转换，只是用 X 轴的值</td></tr><tr><td>translateY(y)</td><td>定义转换，只是用 Y 轴的值。</td></tr><tr><td>translateZ(z)</td><td>定义 3D 转换，只是用 Z 轴的值。</td></tr><tr><td>scale(x[,y]?)</td><td>定义 2D 缩放转换。</td></tr><tr><td>scale3d(x,y,z)</td><td>定义 3D 缩放转换。</td></tr><tr><td>scaleX(x)</td><td>通过设置 X 轴的值来定义缩放转换</td></tr><tr><td>scaleY(y)</td><td>通过设置 Y 轴的值来定义缩放转换。</td></tr><tr><td>rotate(angle)</td><td>定义 2D 旋转，在参数中规定角度</td></tr><tr><td>还有很多,<a href="https://www.runoob.com/cssref/css3-pr-transform.html">点击查看</a></td><td></td></tr></tbody></table><h2 id="transition"><a href="#transition" class="headerlink" title="transition"></a>transition</h2><p><strong>属性定义及使用说明</strong></p><p>transition 属性设置元素当过渡效果，四个简写属性为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">transition-property</span></span><br><span class="line"><span class="selector-tag">transition-duration</span></span><br><span class="line"><span class="selector-tag">transition-timing-function</span></span><br><span class="line"><span class="selector-tag">transition-delay</span></span><br></pre></td></tr></table></figure><p>注意： 始终指定transition-duration属性，否则持续时间为0，transition不会有任何效果。<br>|默认值|all 0 ease 0|<br>|—-|—-|<br>|继承：|    no|<br>|版本：|    CSS3|<br>|JavaScript 语法：|object.style.transition=”width 2s”|</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>transition-property</td><td>指定CSS属性的name，transition效果</td></tr><tr><td>transition-duration</td><td>transition效果需要指定多少秒或毫秒才能完成</td></tr><tr><td>transition-timing-function</td><td>指定transition效果的转速曲线</td></tr><tr><td>transition-delay</td><td>定义transition效果开始的时候</td></tr></tbody></table><h2 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h2><p><strong>html</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>时光轴效果<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>2021年1月28日21:11:41<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-img&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/01.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;羽习&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-words&quot;</span>&gt;</span></span><br><span class="line">                    不见你,恍如三秋啊!</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>2021年1月28日21:11:51<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-img&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/02.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;羽习&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-words&quot;</span>&gt;</span></span><br><span class="line">                对你有时候甚是思念</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>2021年1月28日21:11:56<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-img&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/03.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;羽习&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-words&quot;</span>&gt;</span></span><br><span class="line">                有时候就是想想就好,没有想过我的结果,就是做出这一步</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>css</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span>&#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span>&#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">padding-left</span>:<span class="number">20px</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#00ffff</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#00ffff</span> ;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">28px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: gray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-class">.content</span>&#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">20px</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-class">.content-img</span>&#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-class">.content-img</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">0.4s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-class">.content-img</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-class">.content</span> <span class="selector-class">.content-words</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span>: justify;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.6</span>;</span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">0.4s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-class">.content</span> <span class="selector-class">.content-words</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>:<span class="built_in">translateX</span>(<span class="number">10px</span>);</span><br><span class="line">    <span class="attribute">color</span>: gray;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>css|html</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>tab的实现</title>
    <link href="/2021/01/27/tabs/"/>
    <url>/2021/01/27/tabs/</url>
    
    <content type="html"><![CDATA[<h2 id="tab实现的方法"><a href="#tab实现的方法" class="headerlink" title="tab实现的方法"></a>tab实现的方法</h2><p>下面的代码的注释中已经描述的十分清楚。<br>主要就是css+js的方法实现点击就切换的方法.<br> <a id="more"></a></p><h2 id="setAttibute函数"><a href="#setAttibute函数" class="headerlink" title="setAttibute函数:"></a>setAttibute函数:</h2><p> 定义和用法</p><pre><code>setAttribute() 方法添加指定的属性，并为其赋指定的值。如果这个指定的属性已存在，则仅设置/更改值。setAttribute(string name, string value)：增加一个指定名称和值的新属性，或者把一个现有的属性设定为指定的值。</code></pre><h3 id="语法"><a href="#语法" class="headerlink" title="语法:"></a>语法:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.setAttribute(attributename,attributevalue)</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>attributename</td><td>string</td><td>必需。您希望添加的属性的名称。</td></tr><tr><td>attributevalue</td><td>String</td><td>必需。您希望添加的属性值。</td></tr></tbody></table><h3 id="例子"><a href="#例子" class="headerlink" title="例子:"></a>例子:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> input = <span class="built_in">document</span>.createElement(<span class="string">&quot;input&quot;</span>);</span><br><span class="line">input.setAttribute(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;text&quot;</span>);</span><br><span class="line">input.setAttribute(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;q&quot;</span>);</span><br><span class="line">input.setAttribute(<span class="string">&quot;class&quot;</span>,bordercss);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;q&quot; class&#x3D;&quot;bordercss&quot;&gt;,即，input控件具有bordercss样式属性</span><br></pre></td></tr></table></figure><h2 id="getAttribute-函数"><a href="#getAttribute-函数" class="headerlink" title="getAttribute()函数"></a>getAttribute()函数</h2><h3 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h3><pre><code>getAttribute() 方法返回指定属性名的属性值。提示：如果您希望以 Attr 对象返回属性，请使getAttributeNode。--------------------------------------------------------getAttribute()方法是一个函数。它只有一个参数——你打算查询的属性的名字,下面为大家介绍下其具体的使用</code></pre><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.getAttribute(attributename)</span><br></pre></td></tr></table></figure><h3 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h3><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>attributename</td><td>字符串值。</td><td>必需。需要获得属性值的属性名称。</td></tr></tbody></table><h3 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h3><table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>指定属性的值。</td></tr></tbody></table><p><strong>注意</strong></p><p>不过，getAttribute()方法不能通过document对象调用，这与我们此前介绍过的其他方法不同。我们只能通过一个元素节点对象调用它。</p><p>可以把它与getElementsByTagName()方法结合起来，去查询每个&lt;p&gt;元素的title属性</p><h3 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> text=<span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;p&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;text.length;i++)</span><br><span class="line">&#123;</span><br><span class="line">alert(text[i].getAttribute(<span class="string">&quot;title&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>手风琴<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tabs&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav-tab&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;dis&quot;</span>&gt;</span>张羽习<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>李一桐<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>冷檬<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span>张羽习<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>李一桐<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>冷檬<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> spanlist = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;span&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> lis = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i =<span class="number">0</span> ; i &lt; spanlist.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//添加自定义属性</span></span></span><br><span class="line"><span class="javascript">            spanlist[i].setAttribute(<span class="string">&#x27;index&#x27;</span>, i);</span></span><br><span class="line"><span class="javascript">            <span class="comment">//获取span点击事件</span></span></span><br><span class="line"><span class="javascript">            spanlist[i].onclick= <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(spanlist)</span></span><br><span class="line"><span class="javascript">                <span class="comment">//获取自定义属性,然后遍历数组</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> index = <span class="built_in">this</span>.getAttribute(<span class="string">&#x27;index&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="comment">//遍历lis这个数组,然后再用if进行判断是不是这个</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">var</span> l = <span class="number">0</span>; l &lt; lis.length; l++) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//通过if来判定 两个伪数组的下标是否相同,如果相同就改变属性 ---(style.display 和 classroom的值)</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (index == l) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">//注意是==</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">//如果index下标和j的下标一样的就执行代码</span></span></span><br><span class="line"><span class="javascript">                        spanlist[l].className = <span class="string">&#x27;dis&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                        lis[l].style.display = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> &#123;<span class="comment">// if 和else需要写完整以后才能执行</span></span></span><br><span class="line"><span class="javascript">                        spanlist[l].className = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                        lis[l].style.display = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tabs</span> <span class="selector-class">.nav-tab</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#e5e6e5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tabs</span> <span class="selector-class">.nav-tab</span> <span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tabs</span> <span class="selector-class">.nav-tab</span> <span class="selector-tag">span</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#bcbdbd</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background</span>: black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.info</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>css|js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Node.js 爬取 UPR 教务系统获得课表数据</title>
    <link href="/2021/01/24/Node-01/"/>
    <url>/2021/01/24/Node-01/</url>
    
    <content type="html"><![CDATA[<p><strong>使用工具</strong></p><a id="more"></a><p>Node.js</p><p>superagent, fs 模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">superagent是一个轻量级ajaxAPI，是一个关于HTTP方面的一个库，使用链式写法。</span><br><span class="line">fs是Node.js自带的模块，用于与文件系统进行交互。</span><br></pre></td></tr></table></figure><p><strong>安装</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install superagent --save</span><br></pre></td></tr></table></figure><p><strong>引用</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const superagent &#x3D; require(&quot;superagent&quot;)</span><br><span class="line">const fs &#x3D; require(&quot;fs&quot;)</span><br></pre></td></tr></table></figure><p><strong>使用到的代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">superagent</span><br><span class="line">    .[get&#x2F;post&#x2F;...](url)</span><br><span class="line">    .set()</span><br><span class="line">    .send()</span><br><span class="line">    .end(function(err,res)&#123;</span><br><span class="line">        &#x2F;&#x2F;do something</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><ul><li><p>设置请求，参数中加入请求地址(例如向baidu发送get请求)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.get(&quot;https:&#x2F;&#x2F;www.baidu.com&quot;)</span><br></pre></td></tr></table></figure></li><li><p>设置请求头</p><ul><li>单个设置<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.set(&#39;Referer&#39;,&#39;https:&#x2F;&#x2F;www.google.com&#39;)</span><br></pre></td></tr></table></figure></li><li>一起设置(传入json数据)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.set(&#123;</span><br><span class="line">  &quot;Cache-Control&quot;: &quot;max-age&#x3D;0&quot;,</span><br><span class="line">  &quot;Content-Length&quot;: &quot;57&quot;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>发送数据(传入json数据)</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.send(&#123;</span><br><span class="line">    &quot;sss&quot;:&quot;xxx&quot;,</span><br><span class="line">    &quot;kkk&quot;:&quot;yyy&quot;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><p>处理返回数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.end(function(err, res)&#123;</span><br><span class="line">    if(err)&#123;</span><br><span class="line">        return console(&quot;xxx出错&quot; + err)</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;对得到的res做处理</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>res</p><ul><li>res.text包含为被解析的响应数据</li><li>res.body将解析返回的数据，但是目前只支持三种格式(application/x-www-form-urlencoded， application/json和multipart/form-data)</li><li>res.header响应头,是一个Object</li><li>res.type &amp; res.charset 类型和编码格式</li><li>res.status 状态码</li></ul></li><li><p>fs</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fs.writeFile(&quot;result.json&quot;, JSON.stringify(res.body.xkxx), function (err) &#123;</span><br><span class="line">    if (err) &#123;</span><br><span class="line">        return console.log(&quot;文件写入失败&quot; + err)</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(&quot;文件写入成功&quot;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>fs.writeFile(file, data[, options], callback)是一个向本地写入文件的函数。</p></li><li><p>第一个参数是文件名</p></li><li><p>第二个参数是写入的数据</p></li><li><p>第三个参数是可选参数，指定编码格式。</p></li><li><p>第四个参数是回调函数,回调函数只有一个参数，就是error</p></li></ul><h2 id="分析页面"><a href="#分析页面" class="headerlink" title="分析页面"></a>分析页面</h2><p>打开登陆页面，清除cookie，F12打开控制台，切换到Network选项卡，刷新页面</p><p><img src="https://upload-images.jianshu.io/upload_images/3114400-253d67a0bdfa87d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/417/format/webp" alt="分析页面"></p><p>发现4个文件，很明显login文件是我们要的，其他都是网站资源文件<br>点击login</p><p><img src="https://upload-images.jianshu.io/upload_images/3114400-7ce4731c783a4c4e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1066/format/webp" alt="login文件"></p><p>查看General头，发现请求发放是get</p><p>查看response Headers，找到set-Cookie</p><p>查看Request Headers，将请求头复制下来，以模拟登陆</p><p><strong>接下来进行第一步，获得cookie</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;获取cookie, url 和 headers根据上文在上方定义出来</span><br><span class="line">var cookie</span><br><span class="line">superagent.get(url)</span><br><span class="line">    .set(headers)</span><br><span class="line">    .end(function (err, res) &#123;</span><br><span class="line">        if (err) &#123;</span><br><span class="line">            return console.log(&quot;获取cookie发生错误&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">        cookie &#x3D; res.headers[&quot;set-cookie&quot;]</span><br><span class="line">        console.log(&quot;获得到的cookie为：&quot; + cookie)</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;模拟登陆</span><br><span class="line">        login()</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p><strong>第二步，模拟登陆</strong></p><p>勾选上Preserve log(在页面刷新或更改之间保留控制台历史记录。 消息将一直存储，直至清除控制台或者关闭标签。)<br><img src="https://upload-images.jianshu.io/upload_images/3114400-6387cb83e62f9028.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/356/format/webp" alt="模拟登陆"></p><p>经过分析发现是名为j_spring_security_check的文件接收到Form Data数据，进行登陆验证<br>点击文件，查看</p><p><img src="https://upload-images.jianshu.io/upload_images/3114400-b40f891c4930ae12.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/535/format/webp" alt="文件"></p><p>发现请求方法是POST，地址为<a href="http://xsjwxt.sxau.edu.cn:7872/j_spring_security_check">http://xsjwxt.sxau.edu.cn:7872/j_spring_security_check</a><br>继续看请求头，</p><p><img src="https://upload-images.jianshu.io/upload_images/3114400-67a0ecf81f5ddb7d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/868/format/webp" alt="header"></p><p>发现里面有cookie请求头，但是我们前面获取过了，所以将除了cookie的请求头复制下来<br>然后set里面设置cookie就好啦</p><p>接着查看Form Data</p><p><img src="https://upload-images.jianshu.io/upload_images/3114400-04d17af2304e1b55.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/321/format/webp" alt=".."></p><p>多次试验发现j_captcha1是固定值error</p><p>然后将Form Data 需要的数据写成一个json变量，send出去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">function login() &#123;</span><br><span class="line">    superagent.post(&quot;http:&#x2F;&#x2F;xsjwxt.sxau.edu.cn:7872&#x2F;j_spring_security_check&quot;)</span><br><span class="line">        .set(headers1)</span><br><span class="line">        .set(&quot;Cookie&quot;, cookie)</span><br><span class="line">        .send(sxau)</span><br><span class="line">        .end(function (err, res) &#123;</span><br><span class="line">            if (err) &#123;</span><br><span class="line">                return console.log(&quot;模拟登陆出错&quot;)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;爬取课表页面</span><br><span class="line">            course()</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后就进入课表页面爬取数据啦<br>和上面一样的操作爬取下来，发现并没有得到数据，经过观察发现课表是用js代码在页面加载完毕后写入的，</p><p>于是在Network一一查看文件，最后发现是名为callback的文件返回的是课程数据的json格式</p><p><img src="https://upload-images.jianshu.io/upload_images/3114400-47d6c49dd6c2c538.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/458/format/webp" alt="课表信息"></p><p>于是直接爬取callback文件</p><p>经过和上面一样的操作，将课表成功下载到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">function getClass() &#123;</span><br><span class="line">    superagent.get(&quot;http:&#x2F;&#x2F;xsjwxt.sxau.edu.cn:7872&#x2F;student&#x2F;courseSelect&#x2F;thisSemesterCurriculum&#x2F;ajaxStudentSchedule&#x2F;callback&quot;)</span><br><span class="line">        .set(&quot;DNT&quot;,1)</span><br><span class="line">        .set(&quot;Referer&quot;, &quot;xsjwxt.sxau.edu.cn:7872&#x2F;student&#x2F;courseSelect&#x2F;thisSemesterCurriculum&#x2F;index&quot;)</span><br><span class="line">        .set(&quot;User-Agent&quot;, &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;69.0.3497.100 Safari&#x2F;537.36&quot;)</span><br><span class="line">        &#x2F;&#x2F;.set(&quot;selectionBar&quot;,82022)</span><br><span class="line">        .set(&quot;Host&quot;, &quot;xsjwxt.sxau.edu.cn:7872&quot;)</span><br><span class="line">        .set(&quot;X-Requested-With&quot;, &quot;XMLHttpRequest&quot;)</span><br><span class="line">        .set(&quot;Accept&quot;, &quot;*&#x2F;*&quot;)</span><br><span class="line">        .set(&quot;Accept-Encoding&quot;, &quot;gzip, deflate&quot;)</span><br><span class="line">        .set(&quot;Proxy-Connection&quot;, &quot;keep-alive&quot;)</span><br><span class="line">        .set(&quot;Cookie&quot;, cookie)</span><br><span class="line">        .end(function (err, res) &#123;</span><br><span class="line">            if (err) &#123;</span><br><span class="line">                return console.log(&quot;获取课表文件失败&quot; + err)</span><br><span class="line">            &#125;</span><br><span class="line">            fs.writeFile(&quot;result.json&quot;, res.text, function (err) &#123;</span><br><span class="line">                if (err) &#123;</span><br><span class="line">                    return console.log(&quot;课表文件写入失败&quot; + err)</span><br><span class="line">                &#125;</span><br><span class="line">                console.log(&quot;课表文件写入成功&quot;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查找课程数据时，发现getSectionAndTime文件返回的是课程时间，于是把getSectionAndTime文件下载下来，然后配合课表文件，就可以很方便处理成Google日历可以导入的ics文件了。</p><h2 id="所有代码"><a href="#所有代码" class="headerlink" title="所有代码"></a>所有代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> superagent = <span class="built_in">require</span>(<span class="string">&quot;superagent&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//需要的登陆信息</span></span><br><span class="line"><span class="keyword">var</span> sxau = &#123;</span><br><span class="line">    <span class="string">&quot;j_username&quot;</span>: name,</span><br><span class="line">    <span class="string">&quot;j_password&quot;</span>: password,</span><br><span class="line">    <span class="string">&quot;j_captcha1&quot;</span>: <span class="string">&quot;error&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;http://xsjwxt.sxau.edu.cn:7872&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//请求头</span></span><br><span class="line"><span class="keyword">var</span> headers = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Cache-Control&quot;</span>: <span class="string">&quot;max-age=0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Content-Length&quot;</span>: <span class="string">&quot;57&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>,</span><br><span class="line">    <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;xsjwxt.sxau.edu.cn:7872&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;http://xsjwxt.sxau.edu.cn:7872&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;http://xsjwxt.sxau.edu.cn:7872/login&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">&#125;,</span><br><span class="line">headers1 = &#123;</span><br><span class="line">    <span class="string">&quot;DNT&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;xsjwxt.sxau.edu.cn:7872/student/courseSelect/thisSemesterCurriculum/index&quot;</span>,</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;xsjwxt.sxau.edu.cn:7872&quot;</span>,</span><br><span class="line">    <span class="string">&quot;X-Requested-With&quot;</span>: <span class="string">&quot;XMLHttpRequest&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Proxy-Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取cookie</span></span><br><span class="line"><span class="keyword">var</span> cookie</span><br><span class="line">superagent.get(url)</span><br><span class="line">    .set(headers)</span><br><span class="line">    .end(<span class="function"><span class="keyword">function</span> (<span class="params">err, res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">console</span>.log(<span class="string">&quot;获取cookie发生错误&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        cookie = res.headers[<span class="string">&quot;set-cookie&quot;</span>]</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;获取到的cookie是：&quot;</span> + cookie)</span><br><span class="line"></span><br><span class="line">        login()</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//模拟登陆</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    superagent.post(<span class="string">&quot;http://xsjwxt.sxau.edu.cn:7872/j_spring_security_check&quot;</span>)</span><br><span class="line">        .set(headers)</span><br><span class="line">        .set(<span class="string">&quot;Cookie&quot;</span>, cookie)</span><br><span class="line">        .send(sxau)</span><br><span class="line">        .end(<span class="function"><span class="keyword">function</span> (<span class="params">err, res</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">console</span>.log(<span class="string">&quot;模拟登陆出错&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            getClass()</span><br><span class="line">            getTime()</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getClass</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    superagent.get(<span class="string">&quot;http://xsjwxt.sxau.edu.cn:7872/student/courseSelect/thisSemesterCurriculum/ajaxStudentSchedule/callback&quot;</span>)</span><br><span class="line">        .set(headers1)</span><br><span class="line">        .set(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;*/*&quot;</span>)</span><br><span class="line">        .set(<span class="string">&quot;Cookie&quot;</span>, cookie)</span><br><span class="line">        .end(<span class="function"><span class="keyword">function</span> (<span class="params">err, res</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">console</span>.log(<span class="string">&quot;获取课表文件失败&quot;</span> + err)</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            fs.writeFile(<span class="string">&quot;result.json&quot;</span>, res.text, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">console</span>.log(<span class="string">&quot;课表文件写入失败&quot;</span> + err)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;课表文件写入成功&quot;</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getTime</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    superagent.post(<span class="string">&quot;http://xsjwxt.sxau.edu.cn:7872/ajax/getSectionAndTime&quot;</span>)</span><br><span class="line">        .set(headers1)</span><br><span class="line">        .set(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;application/json, text/javascript, */*; q=0.01&quot;</span>)</span><br><span class="line">        .set(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/x-www-form-urlencoded; charset=UTF-8&quot;</span>)</span><br><span class="line">        .set(<span class="string">&quot;Cookie&quot;</span>, cookie)</span><br><span class="line">        .end(<span class="function"><span class="keyword">function</span> (<span class="params">err, res</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">console</span>.log(<span class="string">&quot;获取上课时间失败&quot;</span> + err)</span><br><span class="line">            &#125;</span><br><span class="line">            fs.writeFile(<span class="string">&quot;time.json&quot;</span>, res.text, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">console</span>.log(<span class="string">&quot;上课时间文件写入失败&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;上课时间文件写入成功&quot;</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>node</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>正则表达式</title>
    <link href="/2021/01/22/Rep/"/>
    <url>/2021/01/22/Rep/</url>
    
    <content type="html"><![CDATA[<h1 id="正则表达式学习"><a href="#正则表达式学习" class="headerlink" title="正则表达式学习"></a>正则表达式学习</h1><a id="more"></a><p><em>例子</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">^[0-9]+abs$</span><br><span class="line"></span><br><span class="line"> -  ^ 为匹配输入字符串的开始位置。</span><br><span class="line"></span><br><span class="line"> -  [0-9]+匹配多个数字， [0-9] 匹配单个数字，+ 匹配一个或者多个。</span><br><span class="line"></span><br><span class="line"> -  abc$匹配字母 abc 并以 abc 结尾，$ 为匹配输入字符串的结束位置。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">^[a-z0-9_-]&#123;3,15&#125;$</span><br><span class="line">-   [a-z0-9_-]表示字母(a-z)数字(0-9)还有加上下划线连字符</span><br><span class="line">-   &#123;3,15&#125;表示3-15个字符</span><br></pre></td></tr></table></figure><table><thead><tr><th>字符</th><th>描述</th></tr></thead><tbody><tr><td>[ABC]</td><td>匹配 […] 中的所有字符，例如 [aeiou] 匹配字符串     “google runoob taobao” 中所有的 e o u a 字母。</td></tr><tr><td>[^ABC]</td><td>匹配除了 […] 中字符的所有字符，例如 [^aeiou] 匹配字符串 “google runoob taobao” 中除了 e o u a 字母的所有字母。</td></tr><tr><td>[A-Z]</td><td>表示一个区间，匹配所有大写字母，[a-z] 表示所有小写字母。</td></tr><tr><td>.</td><td>匹配除换行符（\n、\r）之外的任何单个字符，相等于 [^\n\r]。</td></tr><tr><td>[\s\S]</td><td>匹配所有。\s 是匹配所有空白符，包括换行，\S 非空白符，包括换行。</td></tr><tr><td>\w</td><td>匹配字母、数字、下划线。等价于 [A-Za-z0-9_]</td></tr></tbody></table><h2 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h2><p>所谓特殊字符，就是一些有特殊含义的字符，如上面说的 runoo<em>b 中的 <em>，简单的说就是表示任何字符串的意思。如果要查找字符串中的 * 符号，则需要对 * 进行转义，即在其前加一个 : runo\</em>ob 匹配 runo</em>ob。</p><p>许多元字符要求在试图匹配它们时特别对待。若要匹配这些特殊字符，必须首先使字符”转义”，即，将反斜杠字符\ 放在它们前面。下表列出了正则表达式中的特殊字符：</p><table><thead><tr><th>特殊字符</th><th>描述</th></tr></thead><tbody><tr><td>$</td><td>匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 ‘\n’ 或 ‘\r’。要匹配 $ 字符本身，请使用 $。</td></tr><tr><td>( )</td><td>标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 ( 和 )。</td></tr><tr><td>*</td><td>匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 *。</td></tr><tr><td>+</td><td>匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 +。</td></tr><tr><td>.</td><td>匹配除换行符 \n 之外的任何单字符。要匹配 . ，请使用 . 。</td></tr><tr><td>[</td><td>标记一个中括号表达式的开始。要匹配 [，请使用 [。</td></tr><tr><td>?</td><td>匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 ?。</td></tr><tr><td>\</td><td>将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， ‘n’ 匹配字符 ‘n’。’\n’ 匹配换行符。序列 ‘\‘ 匹配 “&quot;，而 ‘(‘ 则匹配 “(“。</td></tr><tr><td>^</td><td>匹配输入字符串的开始位置，除非在方括号表达式中使用，当该符号在方括号表达式中使用时，表示不接受该方括号表达式中的字符集合。要匹配 ^ 字符本身，请使用 ^。</td></tr><tr><td>{</td><td>标记限定符表达式的开始。要匹配 {，请使用 {。</td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h2><p>限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有 * 或 + 或 ? 或 {n} 或 {n,} 或 {n,m} 共6种。</p><p>正则表达式的限定符有：</p><table><thead><tr><th>字符</th><th>描述</th></tr></thead><tbody><tr><td>*</td><td>匹配前面的子表达式零次或多次。例如，zo* 能匹配 “z” 以及 “zoo”。* 等价于{0,}。</td></tr><tr><td>+</td><td>匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。</td></tr><tr><td>?</td><td>匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 、 “does” 中的 “does” 、 “doxy” 中的 “do” 。? 等价于 {0,1}。</td></tr><tr><td>{n}</td><td>n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</td></tr><tr><td>{n,}</td><td>n 是一个非负整数。至少匹配n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*’。</td></tr><tr><td>{n,m}</td><td>m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。</td></tr></tbody></table><p>以下正则表达式匹配一个正整数，[1-9]设置第一个数字不是 0，[0-9]* 表示任意多个数字：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;[1-9][0-9]*&#x2F;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>正则表达式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用CSS让DIV上下左右居中的方法</title>
    <link href="/2021/01/18/css3/"/>
    <url>/2021/01/18/css3/</url>
    
    <content type="html"><![CDATA[<h2 id="方法一（varticle-align）"><a href="#方法一（varticle-align）" class="headerlink" title="方法一（varticle-align）"></a>方法一（varticle-align）</h2><a id="more"></a><p>理念</p><p>利用表格单元格的居中属性。</p><p>步骤</p><ul><li><p>父div外层配置一个div，同时设置为表格元素 (display: table)，宽度为100%</p></li><li><p>父div配置为表格单元格元素 (display: table-cell)</p></li><li><p>父div配置居中属性（vertical-align: middle），使子div上下居中</p></li><li><p>子div通过margin配置左右居中（margin-left:auto; margin-right:auto）</p></li></ul><p>例子</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    * &#123;<span class="attribute">margin</span>: <span class="number">0</span>; <span class="attribute">padding</span>: <span class="number">0</span>; <span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line">    <span class="selector-class">.table</span> &#123;<span class="attribute">display</span>: table; <span class="attribute">width</span>: <span class="number">100%</span>;&#125;</span><br><span class="line">    <span class="selector-class">.father</span> &#123;<span class="attribute">display</span>: table-cell; <span class="attribute">vertical-align</span>: middle;&#125;</span><br><span class="line">    <span class="selector-class">.son</span> &#123;<span class="attribute">margin</span>: auto;&#125;</span><br><span class="line">&lt;/<span class="selector-tag">style</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;div class=&quot;table&quot; &gt;</span><br><span class="line">        &lt;div class=&quot;father&quot; style=&quot;width: 100%; height: 400px; border: 1px solid rebeccapurple;&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;son&quot; style=&quot;width: 100px; height: 100px;background: palegreen;&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br></pre></td></tr></table></figure><p>注：表格单元格比较特殊，如果只有一个单元格时，它的宽度默认会占父级（table|tr）宽度的100%;</p><p>table默认宽度不会撑开，需要手动配置width:100%；</p><h2 id="方法二（line-height）"><a href="#方法二（line-height）" class="headerlink" title="方法二（line-height）"></a>方法二（line-height）</h2><p>理念</p><p>当父div的行高等于自身高度时，内部的行内元素会上下居中显示。行内块没有固定高度时也会上下居中显示。通过文本居中属性text-align:center,可以使内部行内元素或行内块元素左右居中显示。</p><p>步骤</p><ul><li><p>子div设定为行内块元素(display:inline-block)；</p></li><li><p>父div设置行高(line-height)使子div上下居中</p></li><li><p>父div设置文本居中(text-align:center)使子div左右居中。</p></li></ul><p>例子</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    * &#123;<span class="attribute">margin</span>: <span class="number">0</span>; <span class="attribute">padding</span>: <span class="number">0</span>; <span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line">    <span class="selector-class">.father</span> &#123;<span class="attribute">line-height</span>: <span class="number">500px</span>; <span class="attribute">text-align</span>: center; <span class="attribute">font-size</span>: <span class="number">0</span>;&#125;</span><br><span class="line">    <span class="selector-class">.son</span> &#123; <span class="attribute">display</span>: inline-block;</span><br><span class="line">        <span class="comment">/* display: inline-flex;</span></span><br><span class="line"><span class="comment">        display: inline-grid;</span></span><br><span class="line"><span class="comment">        display: inline-table; */</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/<span class="selector-tag">style</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;div class=&quot;father&quot; style=&quot;width: 100%; height: 400px; border: 1px solid rebeccapurple;&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;son&quot; style=&quot;width: 100px; height: 100px;background: palegreen;&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br></pre></td></tr></table></figure><p>注： 行高如果设置为当前父div的高度(400px)的话，有固定高度的子div并不会居中显示的，问题出在浏览器默认将其当做文本居中的，即把它当做了一段文本（chrome默认font-size:16px;hight:21px）进行居中，没把它当做高度100px进行居中。所以需要对父div的line-height进行调整。以font-size:0（对应的字体高度为0）为例子，则需要line-height增加一个子div的高度（400px + 100px;）。</p><h2 id="方法三（绝对定位）"><a href="#方法三（绝对定位）" class="headerlink" title="方法三（绝对定位）"></a>方法三（绝对定位）</h2><p>理念利用定位属性（top、left、right、bottom）百分比的模式。若为100%，则代表偏移的长度为父div的高度（宽度）的100%。</p><p>步骤</p><ul><li><p>父div标记下定位（position:relative|absolute|fixed）;子div绝对定位（position:absolute）</p></li><li><p>子div上下居中：top:50%;margin-top:-h/2; 或是 bottom:50%;margin-bottom:-h/2;；</p></li><li><p>子div左右居中: left:50%;margin-left:-w/2 或是 right:50%;margin-right:-w/2；</p></li></ul><p>例子</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    * &#123;<span class="attribute">margin</span>: <span class="number">0</span>; <span class="attribute">padding</span>: <span class="number">0</span>; <span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line">    <span class="selector-class">.father</span> &#123;<span class="attribute">position</span>: relative;&#125;</span><br><span class="line">    <span class="selector-class">.son</span> &#123;<span class="attribute">position</span>: absolute;<span class="attribute">bottom</span>:<span class="number">50%</span>;<span class="attribute">margin-bottom</span>: -<span class="number">50px</span>;<span class="attribute">left</span>: <span class="number">50%</span>;<span class="attribute">margin-left</span>: -<span class="number">50px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/<span class="selector-tag">style</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;div class=&quot;father&quot; style=&quot;width: 100%; height: 400px; border: 1px solid rebeccapurple;&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;son&quot; style=&quot;width: 100px; height: 100px;background: palegreen;&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="方法四（绝对定位）"><a href="#方法四（绝对定位）" class="headerlink" title="方法四（绝对定位）"></a>方法四（绝对定位）</h2><p>理念：</p><p>定位属性top和bottom（或是left和right）值分别设置为0，但子div有固定高度（宽度），并不能达到上下（左右）间距为0，此时给子div设置margin:auto会使它居中显示。</p><p>步骤：</p><ul><li><p>父div标记下定位（position:relative|absolute|fixed|sticky）;子div绝对定位（position:absolute）</p></li><li><p>子div上下居中：top:0;bottom:0;margin-top:auto;margin-bottom:auto</p></li><li><p>子div左右居中：left:0;right:0;margin-left:auto;margin-right:auto</p></li></ul><p>例子</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    * &#123;<span class="attribute">margin</span>: <span class="number">0</span>; <span class="attribute">padding</span>: <span class="number">0</span>; <span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line">    <span class="selector-class">.father</span> &#123;<span class="attribute">position</span>: relative;&#125;</span><br><span class="line">    <span class="selector-class">.son</span> &#123;<span class="attribute">position</span>: absolute; <span class="attribute">top</span>: <span class="number">0</span>; <span class="attribute">bottom</span>:<span class="number">0</span>; <span class="attribute">left</span>: <span class="number">0</span>; <span class="attribute">right</span>: <span class="number">0</span>; <span class="attribute">margin</span>: auto&#125;</span><br><span class="line">&lt;/<span class="selector-tag">style</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;div class=&quot;father&quot; style=&quot;width: 100%; height: 400px; border: 1px solid rebeccapurple;&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;son&quot; style=&quot;width: 100px; height: 100px;background: palegreen;&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="方法五（flex）"><a href="#方法五（flex）" class="headerlink" title="方法五（flex）"></a>方法五（flex）</h2><p>理念</p><p>弹性盒子中只要给弹性子元素设置 margin: auto; 可以使得弹性子元素上下左右居中。</p><p>例子</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    * &#123;<span class="attribute">margin</span>: <span class="number">0</span>; <span class="attribute">padding</span>: <span class="number">0</span>; <span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line">    <span class="selector-class">.father</span> &#123;<span class="attribute">display</span>: flex;&#125;</span><br><span class="line">    <span class="selector-class">.son</span> &#123;<span class="attribute">margin</span>: auto&#125;</span><br><span class="line">&lt;/<span class="selector-tag">style</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;div class=&quot;father&quot; style=&quot;width: 100%; height: 400px; border: 1px solid rebeccapurple;&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;son&quot; style=&quot;width: 100px; height: 100px;background: palegreen;&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br></pre></td></tr></table></figure><p>注：flex存在兼容性问题</p><p> 方法六（相对定位）</p><p>理念</p><p>利用定位属性（top、left、right、bottom）百分比的模式。若为100%，则代表偏移的长度为父div的高度（宽度）的100%。</p><p>步骤</p><ul><li><p>父div标记下定位（position:relative|absolute|fixed）;子div相对定位（position:relative）</p></li><li><p>子div上下居中：top:50%;margin-top:-h/2; 或是 bottom:-50%;margin-top:-h/2;；</p></li><li><p>子div左右居中: left:50%;margin-left:-w/2 或是 right:-50%;margin-left:-w/2；</p></li></ul><p>例子</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    * &#123;<span class="attribute">margin</span>: <span class="number">0</span>; <span class="attribute">padding</span>: <span class="number">0</span>; <span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line">    <span class="selector-class">.father</span> &#123;<span class="attribute">position</span>: relative;&#125;</span><br><span class="line">    <span class="selector-class">.son</span> &#123;<span class="attribute">position</span>: relative; <span class="attribute">top</span>:<span class="number">50%</span>;<span class="attribute">margin-top</span>:-<span class="number">50px</span>;<span class="attribute">left</span>:<span class="number">50%</span>;<span class="attribute">margin-left</span>:-<span class="number">50px</span>&#125;</span><br><span class="line">&lt;/<span class="selector-tag">style</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;div class=&quot;father&quot; style=&quot;width: 100%; height: 400px; border: 1px solid rebeccapurple;&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;son&quot; style=&quot;width: 100px; height: 100px;background: palegreen;&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br></pre></td></tr></table></figure><p>注：</p><p>与绝对定位不同的是，定位属性相对的点是自身元素的左上角。（所以bottom是负值，和方法三绝对定位写法有不一样的地方）</p><p>如果有同级元素，可能会受到影响。</p><p>如果子div是浮动元素，也有居中效果。</p><p>结尾</p><p>方法二和方法三兼容性要比其它好些。最简单的是弹性盒子。</p>]]></content>
    
    
    
    <tags>
      
      <tag>网页设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS基础学习</title>
    <link href="/2020/12/15/css1/"/>
    <url>/2020/12/15/css1/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="第一天"><a href="#第一天" class="headerlink" title="第一天"></a>第一天</h2><h3 id="time-2020年12月15日20-35-32"><a href="#time-2020年12月15日20-35-32" class="headerlink" title="time:2020年12月15日20:35:32"></a>time:2020年12月15日20:35:32</h3>]]></content>
    
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql学习</title>
    <link href="/2020/11/06/mysqlto/"/>
    <url>/2020/11/06/mysqlto/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="可以查到城市"><a href="#可以查到城市" class="headerlink" title="可以查到城市"></a>可以查到城市</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT LEFT(idcard_code,6),student_name ,city_name,pro_class_name,class_code FROM student_info ,city_id_code </span><br><span class="line">WHERE LEFT(idcard_code,6) &#x3D;</span><br><span class="line">CODE AND LEFT(idcard_code,6)&#x3D;341622</span><br></pre></td></tr></table></figure><h2 id="查到身份证前两位为34"><a href="#查到身份证前两位为34" class="headerlink" title="查到身份证前两位为34"></a>查到身份证前两位为34</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT LEFT(idcard_code,2),student_name,class_code,pro_class_name FROM student_info WHERE LEFT(idcard_code,2) &#x3D; 34</span><br></pre></td></tr></table></figure><h2 id="查询的到不同的系部"><a href="#查询的到不同的系部" class="headerlink" title="查询的到不同的系部"></a>查询的到不同的系部</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT xibu  FROM b2019_student_class_info ORDER BY xibu</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记一次微信小程序开发</title>
    <link href="/2020/10/25/record/"/>
    <url>/2020/10/25/record/</url>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
    
    <tags>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R语言学习2</title>
    <link href="/2020/10/14/R2/"/>
    <url>/2020/10/14/R2/</url>
    
    <content type="html"><![CDATA[<h2 id="第七节课"><a href="#第七节课" class="headerlink" title="第七节课"></a>第七节课</h2><h3 id="创建新变量"><a href="#创建新变量" class="headerlink" title="创建新变量"></a>创建新变量</h3><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">创建数据框</span><br><span class="line"> mydata &lt;- data.frame(x1 &#x3D; c(2,2,6,4),x2 &#x3D;c(3,4,2,8))</span><br><span class="line">&gt; #创建新边框</span><br><span class="line">&gt; mydata$sumx &lt;- mydata$x1+mydata$x2</span><br><span class="line">&gt; mydata</span><br><span class="line">  x1 x2 sumx</span><br><span class="line">1  2  3    5</span><br><span class="line">2  2  4    6</span><br><span class="line">3  6  2    8</span><br><span class="line">4  4  8   12</span><br><span class="line">&gt; mydata$meanx &lt;- (mydata$x1 + mydata$x2)&#x2F;2</span><br><span class="line">&gt; </span><br><span class="line">&gt; #创建新变量方法二</span><br><span class="line">&gt; mydata &lt;- transform(mydata,sumx &#x3D;x1+x2,meanx&#x3D;(x1+x2)&#x2F;2)</span><br><span class="line">&gt; mydata &lt;- data.frame(x1 &#x3D; c(2,2,6,4),x2 &#x3D;c(3,4,2,8))</span><br><span class="line">&gt; mydata &lt;- transform(mydata,x3&#x3D;100,x4&#x3D;&quot;会计&quot;)</span><br><span class="line">&gt; mydata</span><br><span class="line">  x1 x2  x3   x4</span><br><span class="line">1  2  3 100 会计</span><br><span class="line">2  2  4 100 会计</span><br><span class="line">3  6  2 100 会计</span><br><span class="line">4  4  8 100 会计</span><br><span class="line">&gt; </span><br></pre></td></tr></table></figure><h2 id="第八节课"><a href="#第八节课" class="headerlink" title="第八节课"></a>第八节课</h2><h2 id="数据重复"><a href="#数据重复" class="headerlink" title="数据重复"></a>数据重复</h2><p>可以说那个unique函数去除数据中完全重复发行,也可以利用sql语句中的distinct</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">accept_nodup1 &lt;- unique(accepts)</span><br><span class="line"></span><br><span class="line">accept_nodup1 &lt;- unique(accepts)</span><br><span class="line">accept_nodup1</span><br><span class="line"></span><br><span class="line">accept_nodup2 &lt;- sqldf(&quot;select distinct* from accepts &quot;)</span><br><span class="line">accept_nodup2</span><br></pre></td></tr></table></figure><h2 id="处理原则"><a href="#处理原则" class="headerlink" title="处理原则"></a>处理原则</h2><p>首选基于业务的填补方法,其次根据单变量分析进行填补</p><p>缺失值少于20%<br>连续变量使用均值或中位数<br>分类变量不需要填补,单算一类即可,或者用众数填补\或直接删除存在缺失值的行,缺失值在20%-80%<br>填补方法同上<br>另外每个有缺失值的变量生成一个指示哑变量.</p><h3 id="填补-指示变量"><a href="#填补-指示变量" class="headerlink" title="填补+指示变量"></a>填补+指示变量</h3><p>不完整数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Median&#x3D;30  取中位数</span><br></pre></td></tr></table></figure><h3 id="缺失值填补"><a href="#缺失值填补" class="headerlink" title="缺失值填补"></a>缺失值填补</h3><p>实例 汽车贷款违约数据集accepts,五年内信用不良事件数量,(tot_derog) 中的缺失值用用均值填补</p><p>首先生成tot_derog的均值,再使用is.na表示变量中的缺失值,最后使用均值替代缺失值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vmean &lt;- mean(accepts$tot_derog,na.rm&#x3D;TRUE)</span><br><span class="line">accepts $tot_derog_empflag &lt;- is.na(accepts$tot_derog)</span><br></pre></td></tr></table></figure><h2 id="第九节课"><a href="#第九节课" class="headerlink" title="第九节课"></a>第九节课</h2><h3 id="删除存在缺失值的行"><a href="#删除存在缺失值的行" class="headerlink" title="删除存在缺失值的行"></a>删除存在缺失值的行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> 删除存在缺失值的行</span><br><span class="line">汽车存贷款违约数据集,删除存在缺失值得行</span><br><span class="line"></span><br><span class="line">accepts1 &lt;- read.csv(&quot;local&#x2F;accepts.csv&quot; ,header&#x3D;T)</span><br><span class="line">nrow(accepts1)</span><br><span class="line">accepts1 &lt;- na.omit(accepts1)</span><br><span class="line">nrow(accepts1)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#噪声值</span><br><span class="line">#数据中有一个或几个数值与其他数值相比差异较大,又称为异常值,离群值</span><br><span class="line">#单变量噪声值得处理---盖帽法</span><br><span class="line"></span><br><span class="line">#对汽车贷款违约数据集accepts,五年内信用不良事件数量(to_derog)进行盖帽法处理</span><br><span class="line">accepts1 &lt;- read.csv(&quot;local&#x2F;accepts.csv&quot; ,header&#x3D;T)</span><br><span class="line">tot_mean &lt;- mean(accepts$tot_derog)</span><br><span class="line">tot_sd &lt;- sd(accepts$tot_derog)</span><br><span class="line">a1 &lt;- tot_mean-3*tot_sd</span><br><span class="line">a2 &lt;- tot_mean+3*tot_sd</span><br><span class="line">accepts[accepts$tot_derog &lt;&#x3D; a1,]$tot_derog &lt;-a1</span><br><span class="line">accepts[accepts$tot_derog &gt; a2,]$tot_derog &lt;- a2</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#首先对age_oldest_tr 变量进行缺失值均值填补</span><br><span class="line"></span><br><span class="line">vmean &lt;- mean(accepts$age_oldest_tr,na.rm &#x3D; T)</span><br><span class="line">accepts[is.na(accepts$age_oldest_tr),]$age_oldest_tr &lt;- vmean</span><br><span class="line"></span><br><span class="line">ewtd &lt;- cut(accepts$age_oldest_tr,4)#这里以age_oldest_tr字段等宽分为4段</span><br><span class="line">table(ewtd)</span><br><span class="line"></span><br><span class="line">levels(ewtd) &lt;- paste(&quot;L&quot;,0:3,sep&#x3D;&quot;&quot;) #将连续变量转化成定序列</span><br><span class="line">accepts$age_oldest_tr_1 &lt;-ewtd</span><br><span class="line">table(accepts$age_oldest_tr_1)</span><br></pre></td></tr></table></figure><h3 id="日期变量函数"><a href="#日期变量函数" class="headerlink" title="日期变量函数"></a>日期变量函数</h3><h2 id="第十次课"><a href="#第十次课" class="headerlink" title="第十次课"></a>第十次课</h2><p>数据排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">score &lt;- data.frame(student &#x3D; c (&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&#39;D&#39;),gender&#x3D;c(&quot;M&quot;,&quot;M&quot;,&quot;F&quot;,&quot;F&quot;),</span><br><span class="line">                    math&#x3D;c(90,70,80,60),Eng&#x3D;c(88,78,69,98),Chinese &#x3D; c (66,59,NA,88)</span><br><span class="line">                    )</span><br><span class="line">score</span><br><span class="line"></span><br><span class="line"> student gender math Eng Chinese</span><br><span class="line">1       A      M   90  88      66</span><br><span class="line">2       B      M   70  78      59</span><br><span class="line">3       C      F   80  69      NA</span><br><span class="line">4       D      F   60  98      88</span><br></pre></td></tr></table></figure><p>默认升序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> score &lt;- data.frame(student &#x3D; c (&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&#39;D&#39;),gender&#x3D;c(&quot;M&quot;,&quot;M&quot;,&quot;F&quot;,&quot;F&quot;),</span><br><span class="line">+                     math&#x3D;c(90,70,80,60),Eng&#x3D;c(88,78,69,98),Chinese &#x3D; c (66,59,NA,88)</span><br><span class="line">+                     )</span><br><span class="line">&gt; score[order(score$math),]</span><br><span class="line">  student gender math Eng Chinese</span><br><span class="line">4       D      F   60  98      88</span><br><span class="line">2       B      M   70  78      59</span><br><span class="line">3       C      F   80  69      NA</span><br><span class="line">1       A      M   90  88      66</span><br></pre></td></tr></table></figure><p>降序:在前面加”-“,或者在添加 decreasing =T</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">假如出现成绩相同的时候按照英语成绩进行排列</span><br><span class="line"> score &lt;- data.frame(student &#x3D; c (&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&#39;D&#39;),gender&#x3D;c(&quot;M&quot;,&quot;M&quot;,&quot;F&quot;,&quot;F&quot;),</span><br><span class="line">+                     math&#x3D;c(90,80,80,60),Eng&#x3D;c(88,78,69,98),Chinese &#x3D; c (66,59,NA,88)</span><br><span class="line">+                     )</span><br><span class="line">&gt; score[order(score$math,score$Eng),]</span><br><span class="line">  student gender math Eng Chinese</span><br><span class="line">4       D      F   60  98      88</span><br><span class="line">3       C      F   80  69      NA</span><br><span class="line">2       B      M   80  78      59</span><br><span class="line">1       A      M   90  88      66</span><br></pre></td></tr></table></figure><h3 id="合并数据集"><a href="#合并数据集" class="headerlink" title="合并数据集"></a>合并数据集</h3><p>函数 rbind 和cbind<br>对于数据框而言,分别为增加新的样本数据和增加新属性变量.<br>[注意]<br>rbind的自变量的宽度(列数)应与原数据框的宽度相等.<br>cbind的自变量的高度(行数)应与原数据框的高度相等</p><h3 id="选取变量"><a href="#选取变量" class="headerlink" title="选取变量"></a>选取变量</h3><p>书本P69</p><p>删除变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">向量[1]1234,删除第一个元素</span><br><span class="line"> a &lt;- c(1,2,3,4)</span><br><span class="line"> a[-1]</span><br></pre></td></tr></table></figure><h3 id="使用subset函数选取数据"><a href="#使用subset函数选取数据" class="headerlink" title="使用subset函数选取数据"></a>使用subset函数选取数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">subset(x,subset,select)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 使用subset函数选取数据</span><br><span class="line"></span><br><span class="line">df1 &lt;- data.frame(name &#x3D; c(&quot;aa&quot;,&quot;bb&quot;,&quot;cc&quot;),</span><br><span class="line">                  age &#x3D; c(20,29,30),</span><br><span class="line">                  sex &#x3D; c(&quot;f&quot;,&quot;m&quot;,&quot;f&quot;))</span><br><span class="line">df1</span><br><span class="line">selectresult1 &lt;- subset(df1, name &#x3D;&#x3D; &quot;aa&quot;,select &#x3D; c(age,sex))</span><br><span class="line">selectresult2 &lt;- subset(df1, name &#x3D;&#x3D; &quot;aa&quot;&amp;sex &#x3D;&#x3D;&quot;f&quot;,select &#x3D; c(age,sex))</span><br><span class="line">selectresult1 </span><br><span class="line">selectresult2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第十一节课"><a href="#第十一节课" class="headerlink" title="第十一节课"></a>第十一节课</h2><h3 id="整合数据"><a href="#整合数据" class="headerlink" title="整合数据"></a>整合数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#整合数据</span><br><span class="line">name&lt;-c(rep(&quot;张三&quot;,1,3),rep(&quot;李四&quot;,3))</span><br><span class="line">name</span><br><span class="line">subject&lt;-c(&quot;数学&quot;,&quot;语文&quot;,&quot;英语&quot;,&quot;数学&quot;,&quot;语文&quot;,&quot;英语&quot;)</span><br><span class="line">score&lt;-c(89,80,70,90,70,80)</span><br><span class="line">stuid&lt;-c(1,1,1,2,2,2)</span><br><span class="line">stuscore&lt;-data.frame(name,subject,score,stuid)</span><br><span class="line">stuscore</span><br><span class="line"></span><br><span class="line">name subject score stuid</span><br><span class="line">1 张三    数学    89     1</span><br><span class="line">2 张三    语文    80     1</span><br><span class="line">3 张三    英语    70     1</span><br><span class="line">4 李四    数学    90     2</span><br><span class="line">5 李四    语文    70     2</span><br><span class="line">6 李四    英语    80     2</span><br><span class="line"></span><br><span class="line">sqldf(&quot;select name ,sum(score) as allscore from stuscore group by name order by allscore&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> name allscore</span><br><span class="line">1 张三      239</span><br><span class="line">2 李四      240</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sqldf(&quot;select name ,stuid,sum(score) as allscore from stuscore group by name order by allscore&quot;)</span><br><span class="line"></span><br><span class="line">name stuid allscore</span><br><span class="line">1 张三     1      239</span><br><span class="line">2 李四     2      240</span><br><span class="line"></span><br><span class="line">#计算每个人单科的最高成绩</span><br><span class="line">sqldf(&quot;select stuid ,name,subject,max(score) as maxscore from stuscore </span><br><span class="line">      group by stuid&quot;)</span><br><span class="line"></span><br><span class="line">      stuid name subject maxscore</span><br><span class="line">1     1 张三    数学       89</span><br><span class="line">2     2 李四    数学       90</span><br><span class="line"></span><br><span class="line">#计算每个人的平均成绩</span><br><span class="line">sqldf(&quot;select stuid ,name ,avg(score) as avgscore from stuscore group</span><br><span class="line">      by stuid&quot;)</span><br><span class="line"></span><br><span class="line">       stuid name avgscore</span><br><span class="line">1     1 张三 79.66667</span><br><span class="line">2     2 李四 80.00000</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h3 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h3><p>使用merge函数进行连接<br>在by后连接的公共字段”id”,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">table1 &lt;- read.csv(&quot;local&#x2F;Table1.csv&quot;)</span><br><span class="line">table1</span><br><span class="line">table2 &lt;- read.csv(&quot;local&#x2F;Table2.csv&quot;)</span><br><span class="line">table2</span><br><span class="line"></span><br><span class="line">inner1 &lt;- merge(table1,table2,by &#x3D; &quot;id&quot;,all &#x3D; FALSE)</span><br><span class="line">inner1</span><br><span class="line"></span><br><span class="line">id a b</span><br><span class="line">1  3 c e</span><br><span class="line">inner3 &lt;- sqldf(&quot;select * from table1 as a inner join table2 as b on a.id</span><br><span class="line">                &#x3D; b.id&quot;)</span><br><span class="line">inner3</span><br></pre></td></tr></table></figure><h3 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> merge函数进行连接,多了参数all.x &#x3D;TRUE</span><br><span class="line"></span><br><span class="line">left1 &lt;- merge(table1,table2,by &#x3D; &quot;id&quot;,all.x &#x3D; TRUE)</span><br><span class="line">left1</span><br><span class="line"></span><br><span class="line">id a    b</span><br><span class="line">1  1 a &lt;NA&gt;</span><br><span class="line">2  2 b &lt;NA&gt;</span><br><span class="line">3  3 c    e</span><br><span class="line">left2 &lt;- sqldf(&quot;select t1.id ,t1.a , t2.b from table1 as t1 left join table2 as t2 on t1.id&#x3D;t2.id&quot;)</span><br><span class="line">left2</span><br><span class="line"></span><br><span class="line">id a    b</span><br><span class="line">1  1 a &lt;NA&gt;</span><br><span class="line">2  2 b &lt;NA&gt;</span><br><span class="line">3  3 c    e</span><br></pre></td></tr></table></figure><h2 id="分析数据间的关系的关系–散点图"><a href="#分析数据间的关系的关系–散点图" class="headerlink" title="分析数据间的关系的关系–散点图"></a>分析数据间的关系的关系–散点图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">### 绘制cars数据集的速度与刹车距离的散点图</span><br><span class="line">plot(cars[,1],cars[,2])</span><br><span class="line">plot(cars$speed,cars$dist)</span><br><span class="line">plot(cars)</span><br></pre></td></tr></table></figure><h3 id="修改颜色"><a href="#修改颜色" class="headerlink" title="修改颜色"></a>修改颜色</h3><h3 id="查看colors自带的函数"><a href="#查看colors自带的函数" class="headerlink" title="查看colors自带的函数"></a>查看colors自带的函数</h3><p>colors()[20:34]</p><h3 id="绘制cars数据集speed与dist的散点图-散点为红色"><a href="#绘制cars数据集speed与dist的散点图-散点为红色" class="headerlink" title="绘制cars数据集speed与dist的散点图,散点为红色"></a>绘制cars数据集speed与dist的散点图,散点为红色</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plot(cars,col&#x3D;&quot;red&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plot(cars,pch&#x3D;18,cex&#x3D;0.5,col&#x3D;&quot;blue&quot;,bg&#x3D;&quot;green&quot;)</span><br></pre></td></tr></table></figure><h2 id="绘制cars数据集speed与dist的折线图-线条为虚线-线条粗细为2-线条为蓝色"><a href="#绘制cars数据集speed与dist的折线图-线条为虚线-线条粗细为2-线条为蓝色" class="headerlink" title="绘制cars数据集speed与dist的折线图,线条为虚线,线条粗细为2,线条为蓝色"></a>绘制cars数据集speed与dist的折线图,线条为虚线,线条粗细为2,线条为蓝色</h2><p>plot(cars,type=”l”,lty=2,lwd=2,col=”blue”)</p><h2 id="修改文本属性"><a href="#修改文本属性" class="headerlink" title="修改文本属性"></a>修改文本属性</h2><h2 id="散点为倒三角-大小为0-5-点边框为蓝色-点内部填充红色"><a href="#散点为倒三角-大小为0-5-点边框为蓝色-点内部填充红色" class="headerlink" title="散点为倒三角,大小为0.5,点边框为蓝色,点内部填充红色"></a>散点为倒三角,大小为0.5,点边框为蓝色,点内部填充红色</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plot(cars,xlab&#x3D;&quot;汽车速度&quot;,ylab&#x3D;&quot;刹车距离&quot;,pch&#x3D;25,cex&#x3D;0.5,col&#x3D;&quot;blue&quot;,bg&#x3D;&quot;red&quot;)</span><br><span class="line">title(main &#x3D; list(&quot;汽车速度与刹车距离散点图&quot;,cex&#x3D;1.1,font&#x3D;2))</span><br><span class="line">text(8,100,labels &#x3D; &#39;20世纪20年代&#39; ,cex&#x3D;0.8,)#说明数据来源</span><br><span class="line">text(8.5,80,labels&#x3D;&#39;Methods of Correlation Analysis&#39;,cex&#x3D;0.6,font&#x3D;3)#杂志名称</span><br><span class="line">plot(cars,xlab&#x3D;list(&quot;汽车速度&quot;,col&#x3D;&#39;red&#39;,font&#x3D;3,cex&#x3D;0.5),</span><br><span class="line">     ylab&#x3D;&#39;刹车距离&#39;,pch&#x3D;25,cex&#x3D;0.5,col&#x3D;&quot;blue&quot;,bg&#x3D;&quot;red&quot;)</span><br></pre></td></tr></table></figure><h2 id="添加图例"><a href="#添加图例" class="headerlink" title="添加图例"></a>添加图例</h2><h3 id="实例-绘制VADeaths数据集的条形图-并添加图例"><a href="#实例-绘制VADeaths数据集的条形图-并添加图例" class="headerlink" title="实例,绘制VADeaths数据集的条形图,并添加图例"></a>实例,绘制VADeaths数据集的条形图,并添加图例</h3><h2 id="legend函数"><a href="#legend函数" class="headerlink" title="legend函数"></a>legend函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">barplot(VADeaths,beside&#x3D;TRUE,col &#x3D; c(&quot;red&quot;,&quot;yellow&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;gray&quot;),</span><br><span class="line">        title&#x3D;&quot;城市&quot;)</span><br><span class="line"></span><br><span class="line">legend(0.1,75,legend&#x3D;rownames(VADeaths),cex&#x3D;0.45,</span><br><span class="line">       pch&#x3D;c(15,15,15,15,15),horiz &#x3D; T,bty&#x3D;&quot;n&quot;,</span><br><span class="line">       col &#x3D; c(&quot;red&quot;,&quot;yellow&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;gray&quot;))</span><br></pre></td></tr></table></figure><h2 id="par函数"><a href="#par函数" class="headerlink" title="par函数"></a>par函数</h2><h3 id="将图形按照2行3列摆放"><a href="#将图形按照2行3列摆放" class="headerlink" title="将图形按照2行3列摆放"></a>将图形按照2行3列摆放</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mfrow1 &lt;- par(mfrow&#x3D;c(2,3))</span><br><span class="line">for (i in 1:6) &#123;</span><br><span class="line">  plot(c(1:i),main&#x3D;paste(&quot;I&#39;am image:&quot;,i))</span><br><span class="line">&#125;</span><br><span class="line">par(mfrow&#x3D;c(1,1))</span><br></pre></td></tr></table></figure><h2 id="第十四节课"><a href="#第十四节课" class="headerlink" title="第十四节课"></a>第十四节课</h2><h3 id="保存图形"><a href="#保存图形" class="headerlink" title="保存图形"></a>保存图形</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">jpeg(filename &#x3D; &#39;D:&#x2F;R_edu&#x2F;local&#x2F;散点图练习.jpg&#39;)</span><br><span class="line">mfrow1 &lt;- par(mfrow&#x3D;c(2,3))</span><br><span class="line">for (i in 1:6) &#123;</span><br><span class="line">  plot(c(1:i),main&#x3D;paste(&quot;I&#39;am image:&quot;,i))</span><br><span class="line">&#125;</span><br><span class="line">dev.off()</span><br></pre></td></tr></table></figure><h2 id="利用鸢尾花"><a href="#利用鸢尾花" class="headerlink" title="利用鸢尾花"></a>利用鸢尾花</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">qplot(Species ,Sepal.Length,data &#x3D;iris,</span><br><span class="line">      geom &#x3D;&quot;boxplot&quot;,fill &#x3D;Species,</span><br><span class="line">      main &#x3D; &quot;依据种类分组的花萼长度箱线图&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">qplot(Sepal.Length,Sepal.Width,data&#x3D;iris,</span><br><span class="line">      colour &#x3D; Species,shape &#x3D;Species,</span><br><span class="line">      main &#x3D; &quot;绘制花萼长度和花萼宽度的散点图&quot;)</span><br></pre></td></tr></table></figure><h3 id="利用facets参数绘制分面板散点图-并增加光滑曲线"><a href="#利用facets参数绘制分面板散点图-并增加光滑曲线" class="headerlink" title="利用facets参数绘制分面板散点图,并增加光滑曲线"></a>利用facets参数绘制分面板散点图,并增加光滑曲线</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">qplot(Sepal.Length,Sepal.Width,data &#x3D;iris,</span><br><span class="line">      geom &#x3D; c(&quot;point&quot;,&quot;smooth&quot;),</span><br><span class="line">      facets &#x3D; ~Species,colour &#x3D; Species,</span><br><span class="line">      main &#x3D;&quot;绘制分面板的散点图&quot;)</span><br></pre></td></tr></table></figure><h3 id="ggplot2包的语言逻辑"><a href="#ggplot2包的语言逻辑" class="headerlink" title="ggplot2包的语言逻辑"></a>ggplot2包的语言逻辑</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plot(iris$Sepal.Length,iris$Sepal.Width)</span><br><span class="line">ggplot(data &#x3D; iris ,</span><br><span class="line">       aes(x &#x3D; Sepal.Length,y &#x3D; Sepal.Width))+</span><br><span class="line">      geom_point(color &#x3D; &quot;darkred&quot;)</span><br></pre></td></tr></table></figure><h3 id="ggplot绘图"><a href="#ggplot绘图" class="headerlink" title="ggplot绘图"></a>ggplot绘图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ggplot(data &#x3D; iris ,</span><br><span class="line">       aes(x &#x3D; Sepal.Length,y &#x3D; Sepal.Width,colour &#x3D; Species))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="使用ggplot2包绘图"><a href="#使用ggplot2包绘图" class="headerlink" title="使用ggplot2包绘图"></a>使用ggplot2包绘图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ggplot(data&#x3D;iris,aes(x&#x3D;Sepal.Length,y&#x3D;Sepal.Width,</span><br><span class="line">                     shape))</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>javascript-2语言学习</title>
    <link href="/2020/09/24/js2/"/>
    <url>/2020/09/24/js2/</url>
    
    <content type="html"><![CDATA[<h2 id="数组练习"><a href="#数组练习" class="headerlink" title="数组练习"></a>数组练习</h2><a id="more"></a><p>(一)  sort() 方法以字母顺序对数组进行排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var box &#x3D; [&quot;apple&quot;,&quot;huawei&quot;,&quot;xiaomi&quot;,&quot;realme&quot;,&quot;oppo&quot;]  &#x2F;&#x2F;创建一个数组</span><br><span class="line">            var phonebrand &#x3D; box[0];                   &#x2F;&#x2F;显示的是apple</span><br><span class="line">            console.log(phonebrand);                    </span><br><span class="line">            for(i&#x3D;0;i&lt;box.length;i++)&#123;                 &#x2F;&#x2F;遍历数组还有foreach这个函数</span><br><span class="line">             document.write(&quot;&lt;li&gt;&quot;+box[i]+&quot;&lt;&#x2F;li&gt;&quot;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>数字排序<br>默认地，sort() 函数按照字符串顺序对值进行排序。</p><p>该函数很适合字符串（”Apple” 会排在 “Banana” 之前）。</p><p>不过，如果数字按照字符串来排序，则 “25” 大于 “100”，因为 “2” 大于 “1”。</p><p>正因如此，sort() 方法在对数值排序时会产生不正确的结果。</p><p>我们通过一个比值函数来修正此问题：</p><h3 id="比值函数"><a href="#比值函数" class="headerlink" title="比值函数"></a>比值函数</h3><p>比较函数的目的是定义另一种排序顺序。</p><p>比较函数应该返回一个负，零或正值，这取决于参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">function(a, b)&#123;return a-b&#125;</span><br></pre></td></tr></table></figure><h3 id="对数组使用-Math-max"><a href="#对数组使用-Math-max" class="headerlink" title="对数组使用 Math.max()"></a>对数组使用 Math.max()</h3><p>您可以使用 Math.max.apply 来查找数组中的最高值：</p><p>实例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function myArrayMax(arr) &#123;</span><br><span class="line">    return Math.max.apply(null, arr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Math.max.apply([1, 2, 3]) 等于 Math.max(1, 2, 3)。</span><br></pre></td></tr></table></figure><h3 id="随机顺序排序数组"><a href="#随机顺序排序数组" class="headerlink" title="随机顺序排序数组"></a>随机顺序排序数组</h3><p>实例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var points &#x3D; [40, 100, 1, 5, 25, 10];</span><br><span class="line">points.sort(function(a, b)&#123;return 0.5 - Math.random()&#125;); </span><br></pre></td></tr></table></figure><p>(二)  reverse() 方法反转数组中的元素</p><h2 id="获取时间"><a href="#获取时间" class="headerlink" title="获取时间"></a>获取时间</h2><p>(n) new Date()<br>new Date() 用当前日期和时间创建新的日期对象：</p><p>实例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var d &#x3D; new Date();</span><br></pre></td></tr></table></figure><h3 id="toUTCString-方法将日期转换为-UTC-字符串（一种日期显示标准）。"><a href="#toUTCString-方法将日期转换为-UTC-字符串（一种日期显示标准）。" class="headerlink" title="toUTCString() 方法将日期转换为 UTC 字符串（一种日期显示标准）。"></a>toUTCString() 方法将日期转换为 UTC 字符串（一种日期显示标准）。</h3><p>实例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var d &#x3D; new Date();</span><br><span class="line">document.getElementById(&quot;demo&quot;).innerHTML &#x3D; d.toUTCString();</span><br></pre></td></tr></table></figure><h3 id="toDateString-方法将日期转换为更易读的格式："><a href="#toDateString-方法将日期转换为更易读的格式：" class="headerlink" title="toDateString() 方法将日期转换为更易读的格式："></a>toDateString() 方法将日期转换为更易读的格式：</h3><p>实例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var d &#x3D; new Date();</span><br><span class="line">document.getElementById(&quot;demo&quot;).innerHTML &#x3D; d.toDateString();</span><br></pre></td></tr></table></figure><h3 id="添加数组"><a href="#添加数组" class="headerlink" title="添加数组"></a>添加数组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myArry.push()</span><br></pre></td></tr></table></figure><p>这个语句可以添加数组</p>]]></content>
    
    
    
    <tags>
      
      <tag>javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R语言学习</title>
    <link href="/2020/09/16/R/"/>
    <url>/2020/09/16/R/</url>
    
    <content type="html"><![CDATA[<h2 id="第一节课"><a href="#第一节课" class="headerlink" title="第一节课"></a>第一节课</h2><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">getwd()         这个代码获取当前的工作目录</span><br><span class="line">setwd(&quot;d:&#x2F;R_edu&quot;) 将当前的工作目录改为R_edu</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(&#39;这是财务人的第一个程序&#39;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">print(paste(&#39;固定资产的原值是&#39;,&#39;1000&#39; ,&#39;元&#39;))</span><br><span class="line"></span><br><span class="line">show： [1] &quot;这是财务人的第一个程序&quot;</span><br><span class="line"></span><br><span class="line">paste连接的意思，将三个文字进行连接起来</span><br><span class="line"></span><br><span class="line">show:  [1] &quot;固定资产的原值是 1000 元&quot;</span><br></pre></td></tr></table></figure><h2 id="第二节课"><a href="#第二节课" class="headerlink" title="第二节课"></a>第二节课</h2><p>例题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">已知固定资产的原值是10000元，按5年进行折旧，无残值，每年折旧是多少？</span><br><span class="line">amount &lt;- 10000</span><br><span class="line">year &lt;- 5</span><br><span class="line">deprectation &lt;- amount&#x2F;year</span><br><span class="line">print(paste(&#39;固定资产的原值是&#39;,&#39;1000&#39;,&#39;元&#39;))</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">引用一个包require()</span><br><span class="line">libary(&quot;mice&quot;)</span><br><span class="line">data()    内置数据集 列出已经载入的包</span><br><span class="line">head(数据集名称)  查看前六行数据       </span><br></pre></td></tr></table></figure><p>调用不是基础包中的数据<br>如：data(cars93,package = “MASS”)  MASS是R包名称，cars93是数据集的名称<br>head(iris,10)这个是查看iris这个数据集的前10 行，head()默认是前6行</p><h2 id="第三节课"><a href="#第三节课" class="headerlink" title="第三节课"></a>第三节课</h2><p>1、四种数据类型</p><p>character -字符型，被引号包围</p><p>complex -复数型</p><p>logical  -逻辑型<br>NA是数据的缺失值，空值NULL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">is.na   检查是不是缺失值</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f &lt;- TRUE</span><br><span class="line">f</span><br></pre></td></tr></table></figure><h3 id="查看对象的类型"><a href="#查看对象的类型" class="headerlink" title="查看对象的类型"></a>查看对象的类型</h3><p>typeof&gt;class&gt;mode<br>mode 函数只能查看数据的大类<br>class 函数查看数据的类<br>typeof  函数则更加细化</p><p>is.chacter()  判断是不是字符型<br>as.charater() 转换成字符型</p><h3 id="查找向量"><a href="#查找向量" class="headerlink" title="查找向量"></a>查找向量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x1 &lt;-c(1,2,NA,4,5)  设置向量1,2,NA,4,5</span><br><span class="line">x1[1:3]             查找从第一个到第三个</span><br><span class="line">x1[c(1,2,5)]</span><br><span class="line">x1[-1]</span><br></pre></td></tr></table></figure><h3 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h3><p>一维数组<br>  数值型<br>  字符型，<br>  逻辑型<br>  创建一个一个向量c()，要用逗号隔开<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">产生序列</span><br><span class="line">n:m,  ---&gt; 产生n到m的整数序列</span><br><span class="line">seq(from&#x3D;n , to&#x3D;m ,by&#x3D;步长)  ---&gt;产生等差数列</span><br><span class="line">rep(n,times &#x3D; m )  ---&gt;产生重复值数列</span><br></pre></td></tr></table></figure><br>  上课的练习题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a &lt;- c(1,2,3)</span><br><span class="line">b &lt;- c(&quot;one&quot;, &quot;two&quot;,&quot;three&quot;)</span><br><span class="line">c &lt;- c(TRUE,TRUE,FALSE,FALSE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class(a)</span><br><span class="line">class(b)</span><br><span class="line">class(c)</span><br></pre></td></tr></table></figure><h2 id="第四节课"><a href="#第四节课" class="headerlink" title="第四节课"></a>第四节课</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fruit &lt;- c(5,10,1,20)</span><br><span class="line">names(fruit) &lt;- c(&quot;orange&quot;,&quot;banana&quot;,&quot;apple&quot;,&quot;peach&quot;)</span><br><span class="line">fruit [&quot;orange&quot;]</span><br><span class="line"></span><br><span class="line">fruit[c(1,3)]</span><br></pre></td></tr></table></figure><p>字符索引:一般需要通过names函数进行指定,指定后, <p style="color: red">原先的数值索引仍然保留</p></p><h3 id="向量索引"><a href="#向量索引" class="headerlink" title="向量索引"></a>向量索引</h3><p>给向量传入一个逻辑数值,它会返回一个向量切片,里面只有包含TRUE的元素</p><p>一般在进行一些条件判断查询时使用</p><p>例子:查询像x1中大于等于2的所有元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x1 &lt;- 1:5                              创建向量1,2,3,4,5</span><br><span class="line">x1 &gt;&#x3D;2</span><br><span class="line">[1] FALSE  TRUE  TRUE  TRUE  TRUE      </span><br><span class="line"></span><br><span class="line">x1[x1 &gt;&#x3D; 2]</span><br><span class="line">[1] 2 3 4 5</span><br></pre></td></tr></table></figure><h3 id="数据结构-矩阵"><a href="#数据结构-矩阵" class="headerlink" title="数据结构-矩阵"></a>数据结构-矩阵</h3><p>二维数组,所有元素的数据类型一致</p><p style="font-style: bold">矩阵的创建:<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">matrix(data,nrow,ncol,byrow) </span><br><span class="line">以向量形式输入矩阵中的全部元素,使用nrow和ncol设置矩阵的行和列数</span><br><span class="line">matrix1 &lt;- matrix(c(1:6),nrow&#x3D;2 ,ncol&#x3D;3)</span><br><span class="line">matrix1</span><br><span class="line"></span><br><span class="line"> [,1] [,2] [,3]</span><br><span class="line">[1,]    1    3    5</span><br><span class="line">[2,]    2    4    6</span><br><span class="line"></span><br><span class="line">matrix1 &lt;- matrix(c(1:6),nrow&#x3D;2 ,ncol&#x3D;3, byrow&#x3D;TRUE)  如果要是以行来排列只要使用 byrow&#x3D;TRUE就可以按照行来排列</span><br><span class="line">matrix1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[,1] [,2] [,3]</span><br><span class="line">[1,]    1    2    3</span><br><span class="line">[2,]    4    5    6</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="转置"><a href="#转置" class="headerlink" title="转置"></a>转置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">matrix1 &lt;- matrix(1:4,nrow&#x3D;2)</span><br><span class="line">matrix1</span><br><span class="line"></span><br><span class="line">[,1] [,2]</span><br><span class="line">[1,]    1    3</span><br><span class="line">[2,]    2    4</span><br><span class="line"></span><br><span class="line">t(matrix1)</span><br><span class="line"></span><br><span class="line">[,1] [,2]</span><br><span class="line">[1,]    1    2</span><br><span class="line">[2,]    3    4</span><br><span class="line">&gt; </span><br></pre></td></tr></table></figure><h3 id="矩阵的索引"><a href="#矩阵的索引" class="headerlink" title="矩阵的索引"></a>矩阵的索引</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">matrix1 &lt;- matrix(1:6,nrow&#x3D;2)  x[i,j] 下标为(i,j)的元素</span><br><span class="line">                                        x(i,)第i行</span><br><span class="line">                                        x(,j)第j列</span><br><span class="line">matrix1</span><br></pre></td></tr></table></figure><h3 id="产生多个"><a href="#产生多个" class="headerlink" title="产生多个"></a>产生多个</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">array1 &lt;- array(1:18 , c(3,3,2))</span><br><span class="line">&gt; array1</span><br><span class="line">, , 1</span><br><span class="line"></span><br><span class="line">     [,1] [,2] [,3]</span><br><span class="line">[1,]    1    4    7</span><br><span class="line">[2,]    2    5    8</span><br><span class="line">[3,]    3    6    9</span><br><span class="line"></span><br><span class="line">, , 2</span><br><span class="line"></span><br><span class="line">     [,1] [,2] [,3]</span><br><span class="line">[1,]   10   13   16</span><br><span class="line">[2,]   11   14   17</span><br><span class="line">[3,]   12   15   18</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数据框"><a href="#数据框" class="headerlink" title="数据框"></a>数据框</h3><p>数据框仅次于向量的最重要的数据对象类型<br>数据框 VS 矩阵</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data.frame()  创建数据框</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第五节课-2020-10-07"><a href="#第五节课-2020-10-07" class="headerlink" title="第五节课  2020/10/07"></a>第五节课  2020/10/07</h2><h3 id="查询数据框的索引"><a href="#查询数据框的索引" class="headerlink" title="查询数据框的索引"></a>查询数据框的索引</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&gt; name &lt;- c(&quot;xu&quot;,&quot;zhang&quot;,&quot;cui&quot;,&quot;huang&quot;)</span><br><span class="line">&gt; English &lt;- c(80,90,80,60)</span><br><span class="line">&gt; Math &lt;- c(80,90,80,60)</span><br><span class="line">&gt; Art &lt;- c(80,90,80,60)</span><br><span class="line">&gt; Score &lt;- data.frame(name,English,Math,Art)</span><br><span class="line">&gt; Score</span><br><span class="line">   name English Math Art</span><br><span class="line">1    xu      80   80  80</span><br><span class="line">2 zhang      90   90  90</span><br><span class="line">3   cui      80   80  80</span><br><span class="line">4 huang      60   60  60</span><br><span class="line">&gt; </span><br><span class="line">&gt; Score[1:2,c(1,4)]</span><br><span class="line">   name Art</span><br><span class="line">1    xu  80</span><br><span class="line">2 zhang  90</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用sqldf包中的sqldf函数利用sql语句索引</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">name &lt;- c(&quot;xu&quot;,&quot;zhang&quot;,&quot;cui&quot;,&quot;huang&quot;)</span><br><span class="line">English &lt;- c(80,90,80,60)</span><br><span class="line">Math &lt;- c(80,90,80,60)</span><br><span class="line">Art &lt;- c(80,90,80,60)</span><br><span class="line">Score &lt;- data.frame(name,English,Math,Art)</span><br><span class="line">Score</span><br><span class="line"></span><br><span class="line">Score[1:2,c(1,4)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">name &lt;- sqldf(&quot;select * from Score where name &#x3D;&#x3D; &#39;xu&#39;&quot;)</span><br><span class="line">name</span><br></pre></td></tr></table></figure><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>可以容纳各种不用的数据类型<br>使用命令list()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">v1 &lt;- 2:8</span><br><span class="line">v2 &lt;- c(&quot;aa&quot;,&quot;bb&quot;,&quot;cc&quot;)</span><br><span class="line">m1&lt;- matrix(c(1:9),nrow&#x3D;3)</span><br><span class="line">list(v1,v2,m1)</span><br></pre></td></tr></table></figure><h3 id="列表的索引"><a href="#列表的索引" class="headerlink" title="列表的索引"></a>列表的索引</h3><p>列表下标 [[下标]]<br>列表[[“对象名称”]]<br>                           注意列表中的数据对象命名后适用<br>列表$对象名称</p><h3 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">tab1 &lt;- read.table(&quot;C:&#x2F;Users&#x2F;29555&#x2F;Desktop&#x2F;wenjian&#x2F;read_txt_data.txt&quot;,header&#x3D;TRUE)  读取的是绝对路径</span><br><span class="line">tab1</span><br><span class="line">tab2 &lt;- read.table(&quot;&#x2F;local&#x2F;read_txt_data.txt&quot;,header &#x3D; TRUE)    读取的是工作目录的文件</span><br><span class="line">tab2</span><br><span class="line"></span><br><span class="line">csv1 &lt;- read.csv(&quot;local&#x2F;ADS.csv&quot;,header &#x3D; TRUE)  </span><br><span class="line">csv1</span><br><span class="line"></span><br><span class="line">csv2 &lt;-read.csv(&quot;local&#x2F;accepts.csv&quot;,header &#x3D; TRUE)</span><br><span class="line">csv2</span><br><span class="line">xlsx1 &lt;- read.xlsx(&quot;local&#x2F;accepts.xlsx&quot;)  使用xlsx需要加载openxlsx</span><br><span class="line">xlsx1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;p style&#x3D;&quot;font-size: 30px&quot;&gt;注意&lt;&#x2F;p&gt;</span><br><span class="line">1.查看工作目录:getwd()</span><br><span class="line">2.设置工作目录setwd(&quot;&quot;)</span><br><span class="line">3.把需要读取文件放入工作目录</span><br><span class="line">4.读取文件(不需要写路径,直接文件&quot;姓名&quot;)</span><br><span class="line">例如:</span><br></pre></td></tr></table></figure><h2 id="第六节课"><a href="#第六节课" class="headerlink" title="第六节课"></a>第六节课</h2><h2 id="写入数据"><a href="#写入数据" class="headerlink" title="写入数据"></a>写入数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">write.table  write.csv</span><br><span class="line"></span><br><span class="line">write.table(data,&#39;test.txt&#39;,sep&#x3D;&#39;,&#39;,na&#x3D;&#39;缺失&#39;,quote&#x3D;TRUE,row,names&#x3D;TRUE,fileEncoding&#x3D;&#39;UTF-8&#39;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">letter &lt;- letters[1:5]         r自带的向量</span><br><span class="line">[1] &quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot; &quot;g&quot; &quot;h&quot; &quot;i&quot; &quot;j&quot; &quot;k&quot; &quot;l&quot; &quot;m&quot;</span><br><span class="line">[14] &quot;n&quot; &quot;o&quot; &quot;p&quot; &quot;q&quot; &quot;r&quot; &quot;s&quot; &quot;t&quot; &quot;u&quot; &quot;v&quot; &quot;w&quot; &quot;x&quot; &quot;y&quot; &quot;z&quot;</span><br></pre></td></tr></table></figure><h1 id="详情看下一个"><a href="#详情看下一个" class="headerlink" title="详情看下一个"></a>详情看下一个</h1>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小程序学习</title>
    <link href="/2020/08/12/mini/"/>
    <url>/2020/08/12/mini/</url>
    
    <content type="html"><![CDATA[<h2 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h2><p>wxml中</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;view&gt;&#123;&#123; button &#125;&#125;&lt;&#x2F;view&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>js中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">page:&#123;</span><br><span class="line">data:&#123;</span><br><span class="line">button:[</span><br><span class="line"></span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后，在view中会加载这个button的值</p><h2 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wx:for&#x3D;&quot;&#123;&#123; &#125;&#125;&quot; 这个是寻找数据源，在js中的data</span><br><span class="line">wx:for-item&#x3D;&quot;&#123;&#123; &#125;&#125;&quot; 这个是相当于改了个别名，让使用item改成这个花括号里的文字</span><br></pre></td></tr></table></figure><h2 id="绑定事件"><a href="#绑定事件" class="headerlink" title="绑定事件"></a>绑定事件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bindtap&#x3D;&quot;&quot;</span><br><span class="line">catxhtap&#x3D;&quot;&quot;阻止事件冒泡</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网页设计/gird布局</title>
    <link href="/2020/08/11/gird/"/>
    <url>/2020/08/11/gird/</url>
    
    <content type="html"><![CDATA[<h2 id="CSS网格：使用grid-template-columns添加列"><a href="#CSS网格：使用grid-template-columns添加列" class="headerlink" title="CSS网格：使用grid-template-columns添加列"></a>CSS网格：使用grid-template-columns添加列</h2><a id="more"></a><p>仅仅创建一个网格元素并不会使您走得太远。您还需要定义网格的结构。要将某些列添加到网格，请使用grid-template-columns网格容器上的属性，如下所示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">50px</span> <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这将为您的网格提供两列，每列分别为50px宽。赋予grid-template-columns属性的参数数量表示网格中的列数，每个参数的值表示每列的宽度。</p><hr><h2 id="CSS网格：使用grid-template-rows添加行"><a href="#CSS网格：使用grid-template-rows添加行" class="headerlink" title="CSS网格：使用grid-template-rows添加行"></a>CSS网格：使用grid-template-rows添加行</h2><p>您在上一个挑战中创建的网格将自动设置行数。要手动调整行，grid-template-rows请以grid-template-columns与上一个挑战相同的方式使用该属性。</p><style>  .d1{background:LightSkyBlue;}  .d2{background:LightSalmon;}  .d3{background:PaleTurquoise;}  .d4{background:LightPink;}  .d5{background:PaleGreen;}  .container {    font-size: 40px;    width: 100%;    background: LightGray;    display: grid;    grid-template-columns: 50px 50px 100px;    /* Only change code below this line */    grid-template-rows: 50px 50px;    /* Only change code above this line */  }</style><div class="container">  <div class="d1">1</div>  <div class="d2">2</div>  <div class="d3">3</div>  <div class="d4">4</div>  <div class="d5">5</div></div><h2 id="CSS网格：使用CSS网格单位更改列和行的大小"><a href="#CSS网格：使用CSS网格单位更改列和行的大小" class="headerlink" title="CSS网格：使用CSS网格单位更改列和行的大小"></a>CSS网格：使用CSS网格单位更改列和行的大小</h2><p>您可以使用绝对和相对单位，比如px和em在CSS网格定义的行和列的大小。您也可以使用这些：</p><p>fr：将列或行设置为可用空间的一小部分，</p><p>auto：自动将列或行设置为其内容的宽度或高度，</p><p>%：将列或行调整为容器宽度的百分比。</p><p>这是在预览中生成输出的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grid-template-columns: auto 50px 10% 2fr 1fr;</span><br></pre></td></tr></table></figure><p>此代码段创建了五列。第一列与其内容一样宽，第二列为50px，第三列为容器的10％，最后两列为它的容器；剩余的空间分为三部分，第二列分配两个空间，第五列分配一个空间。</p>]]></content>
    
    
    
    <tags>
      
      <tag>gird</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网页设计/css</title>
    <link href="/2020/08/02/web2/"/>
    <url>/2020/08/02/web2/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="响应式网页设计原则：创建媒体查询"><a href="#响应式网页设计原则：创建媒体查询" class="headerlink" title="响应式网页设计原则：创建媒体查询"></a>响应式网页设计原则：创建媒体查询</h2><p>媒体查询是CSS3中引入的一项新技术，可根据不同的视口大小更改内容的表示形式。视口是用户在网页上的可见区域，视用于访问站点的设备而异。</p><p>媒体查询由一种媒体类型组成，如果该媒体类型与显示文档的设备类型匹配，则将应用样式。您可以在媒体查询中根据需要选择任意多个选择器和样式。</p><p>以下是媒体查询的示例，该查询在设备的宽度小于或等于100px时返回内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@media (max-width: 100px) &#123; &#x2F;* CSS Rules *&#x2F; &#125;</span><br></pre></td></tr></table></figure><p>当设备的高度大于或等于350px时，以下媒体查询将返回内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@media (min-height: 350px) &#123; &#x2F;* CSS Rules *&#x2F; &#125;</span><br></pre></td></tr></table></figure><p>** 请记住，仅当媒体类型与所使用设备的媒体类型匹配时，才会应用媒体查询中的CSS。**</p><p>例子：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">  <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/* Only change code below this line */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-height:</span> <span class="number">800px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* CSS Rules */</span> </span><br><span class="line">  <span class="comment">/* Only change code above this line */</span></span><br><span class="line">&lt;/<span class="selector-tag">style</span>&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="自适应网页设计原则：使图像具有响应性"><a href="#自适应网页设计原则：使图像具有响应性" class="headerlink" title="自适应网页设计原则：使图像具有响应性"></a>自适应网页设计原则：使图像具有响应性</h3><p>使用CSS使图像具有响应性实际上非常简单。您只需要向图像添加以下属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">img &#123;</span><br><span class="line">  max-width: 100%;</span><br><span class="line">  height: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>max-width的100%将确保图像不会比它在容器更宽，而height中auto将会使图像保持其原始宽高比。</p><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">.responsive-img &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">img &#123;</span><br><span class="line">  max-width: 100%;</span><br><span class="line">  height:auto;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="响应式Web设计原则：使用视网膜图像进行高分辨率显示"><a href="#响应式Web设计原则：使用视网膜图像进行高分辨率显示" class="headerlink" title="响应式Web设计原则：使用视网膜图像进行高分辨率显示"></a>响应式Web设计原则：使用视网膜图像进行高分辨率显示</h3><p>随着互联网连接设备的增加，它们的尺寸和规格也有所不同，并且它们使用的显示器在内部和外部可能会有所不同。像素密度是一个设备上可能与其他设备不同的方面，这种密度称为“像素每英寸（PPI）”或“每英寸点数（DPI）”。最著名的显示器就是最新的Apple MacBook Pro笔记本电脑和最近的iMac电脑上的“视网膜显示器”。由于“视网膜”和“非视网膜”显示器之间的像素密度不同，因此某些未考虑高分辨率显示器的图像在高分辨率显示器上渲染时可能看起来“像素化”。</p><p>使图像正确显示在高分辨率显示器（例如MacBook Pro“视网膜显示器”）上的最简单方法是将其width和height值定义为原始文件的一半。这是仅使用原始高度和宽度一半的图像的示例：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">  <span class="selector-tag">img</span> &#123; <span class="attribute">height</span>: <span class="number">250px</span>; <span class="attribute">width</span>: <span class="number">250px</span>; &#125;</span><br><span class="line">&lt;/<span class="selector-tag">style</span>&gt;</span><br><span class="line">&lt;img src=&quot;coolPic500x500&quot; alt=&quot;A most excellent picture&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="响应式网页设计原则：使版式具有响应性"><a href="#响应式网页设计原则：使版式具有响应性" class="headerlink" title="响应式网页设计原则：使版式具有响应性"></a>响应式网页设计原则：使版式具有响应性</h3><p>您可以使用视口单位进行响应式排版，而不必使用文本em或不px调整文本大小。视口单位（如百分比）是相对单位，但它们基于不同的项目。视口单位是相对于设备的视口尺寸（宽度或高度），而百分比是相对于父容器元素的大小。</p><p>四个不同的视口单位是：</p><p>vw（视口宽度）：10vw将为视口宽度的10％。<br>vh（视口高度）：3vh将为视口高度的3％。<br>vmin（最小视口）：70vmin将是视口较小尺寸（高度或宽度）的70％。<br>vmax（最大视口）：100vmax将是视口较大尺寸（高度或宽度）的100％。<br>这是一个将body标签设置为视口宽度的30％的示例。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">body &#123; width: 30vw; &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="CSS-Flexbox：使用显示：flex定位两个框"><a href="#CSS-Flexbox：使用显示：flex定位两个框" class="headerlink" title="CSS Flexbox：使用显示：flex定位两个框"></a>CSS Flexbox：使用显示：flex定位两个框</h2><p>本节使用交替的质询样式来说明如何使用CSS灵活地放置元素。首先，挑战将解释理论，然后使用简单的tweet组件进行实际挑战将应用flexbox概念。</p><p>将CSS属性display: flex;放在元素上可让您使用其他flex属性来构建响应页面。</p><style>  #box-container {    display: flex;    height: 500px;  }  #box-1 {    background-color: dodgerblue;    width: 50%;    height: 50%;  }  #box-2 {    background-color: orangered;    width: 50%;    height: 50%;  }</style><div id="box-container">  <div id="box-1"></div>  <div id="box-2"></div></div><h3 id="CSS-Flexbox：在Tweet嵌入中添加Flex超级功能"><a href="#CSS-Flexbox：在Tweet嵌入中添加Flex超级功能" class="headerlink" title="CSS Flexbox：在Tweet嵌入中添加Flex超级功能"></a>CSS Flexbox：在Tweet嵌入中添加Flex超级功能</h3><p>右侧是将用作实际示例的推特嵌入。在不同布局下，某些元素看起来会更好。最后的挑战证明了display: flex。在这里，您将把它添加到嵌入的推文中的几个组件中，以开始调整其位置。</p><style>  body {    font-family: Arial, sans-serif;  }  header {  }  header .profile-thumbnail {    width: 50px;    height: 50px;    border-radius: 4px;  }  header .profile-name {    margin-left: 10px;  }  header .follow-btn {    margin: 0 0 0 auto;  }  header .follow-btn button {    border: 0;    border-radius: 3px;    padding: 5px;  }  header h3, header h4 {    margin: 0;  }  #inner p {    margin-bottom: 10px;    font-size: 20px;  }  #inner hr {    margin: 20px 0;    border-style: solid;    opacity: 0.1;  }  footer {  }  footer .stats {    font-size: 15px;  }  footer .stats strong {    font-size: 18px;  }  footer .stats .likes {    margin-left: 10px;  }  footer .cta {    margin-left: auto;  }  footer .cta button {    border: 0;    background: transparent;  }</style><header>  <img src="https://freecodecamp.s3.amazonaws.com/quincy-twitter-photo.jpg" alt="Quincy Larson's profile picture" class="profile-thumbnail">  <div class="profile-name">    <h3>Quincy Larson</h3>    <h4>@ossia</h4>  </div>  <div class="follow-btn">    <button>Follow</button>  </div></header><div id="inner">  <p>I meet so many people who are in search of that one trick that will help them work smart. Even if you work smart, you still have to work hard.</p>  <span class="date">1:32 PM - 12 Jan 2018</span>  <hr></div><footer>  <div class="stats">    <div class="Retweets">      <strong>107</strong> Retweets    </div>    <div class="likes">      <strong>431</strong> Likes    </div>  </div>  <div class="cta">    <button class="share-btn">Share</button>    <button class="retweet-btn">Retweet</button>    <button class="like-btn">Like</button>  </div></footer><hr><h2 id="CSS-Flexbox：使用flex-direction属性创建一行"><a href="#CSS-Flexbox：使用flex-direction属性创建一行" class="headerlink" title="CSS Flexbox：使用flex-direction属性创建一行"></a>CSS Flexbox：使用flex-direction属性创建一行</h2><p>添加display: flex到元素会将其变成flex容器。这样就可以将该元素的所有子元素对齐到行或列中。通过将flex-direction属性添加到父项并将其设置为行或列来执行此操作。创建一行将使子代水平对齐，创建一列将使子代垂直对齐。</p><p>其他选项为flex-direction行反向和列反向。</p><p>注意：该flex-direction属性的默认值为row。</p>]]></content>
    
    
    
    <tags>
      
      <tag>响应式设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>html/css</title>
    <link href="/2020/07/29/css/"/>
    <url>/2020/07/29/css/</url>
    
    <content type="html"><![CDATA[<h3 id="应用的可访问性：使用HTML5-datetime属性标准化时间"><a href="#应用的可访问性：使用HTML5-datetime属性标准化时间" class="headerlink" title="应用的可访问性：使用HTML5 datetime属性标准化时间"></a>应用的可访问性：使用HTML5 datetime属性标准化时间</h3><a id="more"></a><p>继date主题之后，HTML5还引入了time元素以及datetime用于标准化时间的属性。这是一个内联元素，可以在页面上包装日期或时间。该datetime属性保留该日期的有效格式。这是辅助设备访问的值。通过声明时间的标准化版本，即使在文本中以非正式或口语的方式编写，它也有助于避免混淆。</p><h3 id="应用的辅助功能：使用tabindex将键盘焦点添加到元素"><a href="#应用的辅助功能：使用tabindex将键盘焦点添加到元素" class="headerlink" title="应用的辅助功能：使用tabindex将键盘焦点添加到元素"></a>应用的辅助功能：使用tabindex将键盘焦点添加到元素</h3><p>HTML tabindex属性具有与元素的键盘焦点有关的三个不同的功能。当它在标签上时，表示该元素可以被关注。值（正，负或零的整数）确定行为。</p><p>当用户浏览页面时，某些元素（例如链接和表单控件）会自动获得键盘焦点。它与HTML源标记中的元素顺序相同。这个相同的功能可以提供给其他元件，诸如div，span，和p，通过将tabindex=”0”属性上它们。这是一个例子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">tabindex</span>=<span class="string">&quot;0&quot;</span>&gt;</span>I need keyboard focus!<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>**  注意：负值tabindex（通常为-1）表示该元素是可聚焦的，但无法通过键盘到达。这种方法通常用于以编程方式将焦点移到内容上（例如当div用于弹出窗口的激活时），并且超出了这些挑战的范围。 **</p><h2 id="响应式布局"><a href="#响应式布局" class="headerlink" title="响应式布局"></a>响应式布局</h2><h3 id="响应式网页设计原则：创建媒体查询"><a href="#响应式网页设计原则：创建媒体查询" class="headerlink" title="响应式网页设计原则：创建媒体查询"></a>响应式网页设计原则：创建媒体查询</h3><p>媒体查询是CSS3中引入的一项新技术，可根据不同的视口大小更改内容的表示形式。视口是用户在网页上的可见区域，视用于访问站点的设备而异。</p><p>媒体查询由一种媒体类型组成，如果该媒体类型与显示文档的设备类型匹配，则将应用样式。您可以在媒体查询中根据需要选择任意多个选择器和样式。</p><p>以下是媒体查询的示例，该查询在设备的宽度小于或等于100px时返回内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@media (max-width: 100px) &#123; &#x2F;* CSS Rules *&#x2F; &#125;</span><br><span class="line">&#96;&#96;&#96;css</span><br><span class="line"></span><br><span class="line">当设备的高度大于或等于350px时，以下媒体查询将返回内容：</span><br><span class="line">&#96;&#96;&#96;css</span><br><span class="line">@media (min-height: 350px) &#123; &#x2F;* CSS Rules *&#x2F; &#125;</span><br></pre></td></tr></table></figure><p>请记住，仅当媒体类型与所使用设备的媒体类型匹配时，才会应用媒体查询中的CSS。</p>]]></content>
    
    
    
    <tags>
      
      <tag>网页设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序基础学习</title>
    <link href="/2020/07/24/miniprograme_a/"/>
    <url>/2020/07/24/miniprograme_a/</url>
    
    <content type="html"><![CDATA[<h2 id="2020-07-24"><a href="#2020-07-24" class="headerlink" title="2020.07.24"></a>2020.07.24</h2><h3 id="浅浅认知"><a href="#浅浅认知" class="headerlink" title="浅浅认知"></a>浅浅认知</h3><a id="more"></a><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>navigationBarBackgroundColor</td><td>HexColor</td><td>#000000</td><td>导航栏背景颜色，如＂ ＃00000。”</td></tr><tr><td>navigationBarTextStyle</td><td>String</td><td>white</td><td>导航栏标题颜色，仅支持black/white</td></tr><tr><td>navigationBarTitleText</td><td>String</td><td>导航栏标题文字内容</td><td></td></tr><tr><td>background</td><td>Color</td><td>HexColor</td><td>＃fffff</td></tr><tr><td>backgroundTextStyle</td><td>String</td><td>dark</td><td>下拉背景字体、loading 图的样式，仅支持dark/light</td></tr><tr><td>enablePul!DownRefresh</td><td>Boolean</td><td>false</td><td>设置是否开启下拉刷新</td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>小程序基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>javascript语言学习</title>
    <link href="/2020/07/24/javascript/"/>
    <url>/2020/07/24/javascript/</url>
    
    <content type="html"><![CDATA[<h2 id="2020-07-27"><a href="#2020-07-27" class="headerlink" title="2020.07.27"></a>2020.07.27</h2><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> web = <span class="string">&quot;&quot;</span>;        <span class="comment">//js公共域</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;                <span class="comment">//属于私有领域,在其中要用var申明变量</span></span><br><span class="line"></span><br><span class="line">show();              <span class="comment">//运行程序</span></span><br><span class="line"><span class="built_in">console</span>.log(web);    <span class="comment">//打印内容</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二-避免全局污染"><a href="#二-避免全局污染" class="headerlink" title="(二)避免全局污染"></a>(二)避免全局污染</h3><p>需要使用var , let , const</p><h2 id="2020-07-27-1"><a href="#2020-07-27-1" class="headerlink" title="2020.07.27"></a>2020.07.27</h2><h3 id="三-基本的JavaScript：使用变量构造字符串"><a href="#三-基本的JavaScript：使用变量构造字符串" class="headerlink" title="(三)基本的JavaScript：使用变量构造字符串"></a>(三)基本的JavaScript：使用变量构造字符串</h3><p>有时您需要构建一个字符串，Mad Libs风格。通过使用串联运算符（+），您可以将一个或多个变量插入正在构建的字符串中。</p><p>例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ourName = <span class="string">&quot;freeCodeCamp&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> ourStr = <span class="string">&quot;Hello, our name is &quot;</span> + ourName + <span class="string">&quot;, how are you?&quot;</span>;</span><br><span class="line"><span class="comment">// ourStr is now &quot;Hello, our name is freeCodeCamp, how are you?&quot;</span></span><br></pre></td></tr></table></figure><h3 id="基本的JavaScript：查找字符串的长度"><a href="#基本的JavaScript：查找字符串的长度" class="headerlink" title="基本的JavaScript：查找字符串的长度"></a>基本的JavaScript：查找字符串的长度</h3><figure class="highlight v"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Setup</span></span><br><span class="line"><span class="keyword">var</span> lastNameLength = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> lastName = <span class="string">&quot;Lovelace&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Only change code below this line</span></span><br><span class="line"></span><br><span class="line">lastNameLength = lastName<span class="variable">.length</span>;</span><br></pre></td></tr></table></figure><h3 id="基本的JavaScript：使用括号表示法查找字符串中的第一个字符"><a href="#基本的JavaScript：使用括号表示法查找字符串中的第一个字符" class="headerlink" title="基本的JavaScript：使用括号表示法查找字符串中的第一个字符"></a>基本的JavaScript：使用括号表示法查找字符串中的第一个字符</h3><p>括号表示法是一种index在字符串中的特定位置获取字符的方法。</p><p>大多数现代编程语言（例如JavaScript）都不会像人类一样从1开始计数。它们从0开始。这称为基于零的索引。</p><p>例如，单词“ Charles”中索引0处的字符为“ C”。因此，如果使用var firstName = “Charles”，您可以获取字符串的第一个字母的值firstName[0]。</p><p>例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> firstName = <span class="string">&quot;Charles&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> firstLetter = firstName[<span class="number">0</span>]; <span class="comment">// firstLetter is &quot;C&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Setup</span></span><br><span class="line"><span class="keyword">var</span> firstLetterOfLastName = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> lastName = <span class="string">&quot;Lovelace&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Only change code below this line</span></span><br><span class="line">firstLetterOfLastName = lastName[<span class="number">0</span>]; <span class="comment">// Change this line</span></span><br></pre></td></tr></table></figure><h3 id="基本的JavaScript：使用括号表示法在字符串中查找第N个字符"><a href="#基本的JavaScript：使用括号表示法在字符串中查找第N个字符" class="headerlink" title="基本的JavaScript：使用括号表示法在字符串中查找第N个字符"></a>基本的JavaScript：使用括号表示法在字符串中查找第N个字符</h3><p>您也可以使用方括号表示法来获取字符在字符串中其他位置的位置。</p><p>请记住，计算机从开始计数0，因此第一个字符实际上是第零个字符。</p><p>例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> firstName = <span class="string">&quot;Ada&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> secondLetterOfFirstName = firstName[<span class="number">1</span>]; </span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Setup</span></span><br><span class="line"><span class="keyword">var</span> lastName = <span class="string">&quot;Lovelace&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Only change code below this line</span></span><br><span class="line"><span class="keyword">var</span> thirdLetterOfLastName = lastName[<span class="number">2</span>]; <span class="comment">// Change this line</span></span><br></pre></td></tr></table></figure><h3 id="基本的JavaScript：使用括号表示法查找字符串中的最后一个字符"><a href="#基本的JavaScript：使用括号表示法查找字符串中的最后一个字符" class="headerlink" title="基本的JavaScript：使用括号表示法查找字符串中的最后一个字符"></a>基本的JavaScript：使用括号表示法查找字符串中的最后一个字符</h3><p>为了获得字符串的最后一个字母，您可以从字符串的长度中减去一个。</p><p>例如，如果使用var firstName = “Charles”，则可以获取字符串的最后一个字母的值firstName[firstName.length - 1]。</p><p>例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> firstName = <span class="string">&quot;Charles&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> lastLetter = firstName[firstName.length - <span class="number">1</span>]; </span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Setup</span></span><br><span class="line"><span class="keyword">var</span> lastName = <span class="string">&quot;Lovelace&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Only change code below this line</span></span><br><span class="line"><span class="keyword">var</span> lastLetterOfLastName = lastName[lastName.length-<span class="number">1</span>]; <span class="comment">// Change this line</span></span><br><span class="line"><span class="built_in">console</span>.log(lastLetterOfLastName);</span><br></pre></td></tr></table></figure><h3 id="基本JavaScript：带索引的访问数组数据"><a href="#基本JavaScript：带索引的访问数组数据" class="headerlink" title="基本JavaScript：带索引的访问数组数据"></a>基本JavaScript：带索引的访问数组数据</h3><p>我们可以使用索引访问数组内部的数据。</p><p>数组索引使用与字符串相同的括号表示法，除了在数组中指定一个条目外，它们不指定字符。像字符串一样，数组使用从零开始的索引，因此数组中的第一个元素的索引为0。</p><p>例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> array = [<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>];</span><br><span class="line">array[<span class="number">0</span>]; <span class="comment">// equals 50</span></span><br><span class="line"><span class="keyword">var</span> data = array[<span class="number">1</span>];  <span class="comment">// equals 60</span></span><br></pre></td></tr></table></figure><p>** 数组名称和方括号之间不应有空格，例如array [0]。尽管JavaScript能够正确处理此问题，但这可能会使其他程序员混淆您的代码。 **</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Setup</span></span><br><span class="line"><span class="keyword">var</span> myArray = [<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>];</span><br><span class="line"><span class="keyword">var</span> myData=myArray[<span class="number">0</span>];</span><br><span class="line"><span class="comment">// Only change code below this line</span></span><br><span class="line"><span class="built_in">console</span>.log(myData);</span><br></pre></td></tr></table></figure><h3 id="基本的JavaScript：使用索引修改数组数据"><a href="#基本的JavaScript：使用索引修改数组数据" class="headerlink" title="基本的JavaScript：使用索引修改数组数据"></a>基本的JavaScript：使用索引修改数组数据</h3><p>与字符串不同，数组的条目是可变的，可以自由更改。</p><p>例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ourArray = [<span class="number">50</span>,<span class="number">40</span>,<span class="number">30</span>];</span><br><span class="line">ourArray[<span class="number">0</span>] = <span class="number">15</span>; <span class="comment">// equals [15,40,30]</span></span><br></pre></td></tr></table></figure><p>注意<br>数组名称和方括号之间不应有空格，例如array [0]。尽管JavaScript能够正确处理此问题，但这可能会使其他程序员混淆您的代码。</p><p>将索引0为处存储的数据修改myArray为的值45。</p><h3 id="基本的JavaScript：使用索引访问多维数组"><a href="#基本的JavaScript：使用索引访问多维数组" class="headerlink" title="基本的JavaScript：使用索引访问多维数组"></a>基本的JavaScript：使用索引访问多维数组</h3><p>多维数组的一种思考方式是将数组作为数组。当您使用方括号来访问数组时，第一组方括号指的是最外层（第一层）数组中的条目，每对额外的方括号对指的是内部下一级别的条目。</p><p>例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [</span><br><span class="line">  [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],</span><br><span class="line">  [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],</span><br><span class="line">  [<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>],</span><br><span class="line">  [[<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>], <span class="number">13</span>, <span class="number">14</span>]</span><br><span class="line">];</span><br><span class="line">arr[<span class="number">3</span>]; <span class="comment">// equals [[10,11,12], 13, 14]</span></span><br><span class="line">arr[<span class="number">3</span>][<span class="number">0</span>]; <span class="comment">// equals [10,11,12]</span></span><br><span class="line">arr[<span class="number">3</span>][<span class="number">0</span>][<span class="number">1</span>]; <span class="comment">// equals 11</span></span><br></pre></td></tr></table></figure><p>注意<br>数组名称和方括号之间不应有空格，例如array [0][0]，甚至array [0] [0]不允许这样做。尽管JavaScript能够正确处理此问题，但这可能会使其他程序员混淆您的代码。</p><h2 id="2020-07-29"><a href="#2020-07-29" class="headerlink" title="2020.07.29"></a>2020.07.29</h2><h3 id="基本的JavaScript：使用push（）处理数组"><a href="#基本的JavaScript：使用push（）处理数组" class="headerlink" title="基本的JavaScript：使用push（）处理数组"></a>基本的JavaScript：使用push（）处理数组</h3><p>** 其实就是在数组后面添加一个数**</p><p>将数据附加到数组末尾的简单方法是通过push()函数。</p><p>.push()接受一个或多个参数并将它们“推”到数组的末尾。</p><p>例子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">arr1.push(<span class="number">4</span>);</span><br><span class="line"><span class="comment">// arr1 is now [1,2,3,4]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr2 = [<span class="string">&quot;Stimpson&quot;</span>, <span class="string">&quot;J&quot;</span>, <span class="string">&quot;cat&quot;</span>];</span><br><span class="line">arr2.push([<span class="string">&quot;happy&quot;</span>, <span class="string">&quot;joy&quot;</span>]);</span><br><span class="line"><span class="comment">// arr2 now equals [&quot;Stimpson&quot;, &quot;J&quot;, &quot;cat&quot;, [&quot;happy&quot;, &quot;joy&quot;]]</span></span><br></pre></td></tr></table></figure><h3 id="基本的JavaScript：使用pop（）处理数组"><a href="#基本的JavaScript：使用pop（）处理数组" class="headerlink" title="基本的JavaScript：使用pop（）处理数组"></a>基本的JavaScript：使用pop（）处理数组</h3><p>更改数组中数据的另一种方法是使用.pop()函数。</p><p>.pop()用于从数组末尾“弹出”一个值。我们可以通过将“弹出”值分配给变量来存储它。换句话说，.pop()从数组中删除最后一个元素并返回该元素。</p><p>任何类型的条目都可以从数组中“弹出”-数字，字符串，甚至是嵌套数组。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var threeArr &#x3D; [1, 4, 6];</span><br><span class="line">var oneDown &#x3D; threeArr.pop();</span><br><span class="line">console.log(oneDown); &#x2F;&#x2F; Returns 6</span><br><span class="line">console.log(threeArr); &#x2F;&#x2F; Returns [1, 4]</span><br></pre></td></tr></table></figure><h3 id="基本的JavaScript：使用shift（）处理数组"><a href="#基本的JavaScript：使用shift（）处理数组" class="headerlink" title="基本的JavaScript：使用shift（）处理数组"></a>基本的JavaScript：使用shift（）处理数组</h3><p>pop()总是删除数组的最后一个元素。如果要删除第一个怎么办？</p><p>就是这样.shift()了。它的工作原理与一样.pop()，只是它删除了第一个元素而不是最后一个元素。</p><p>例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ourArray = [<span class="string">&quot;Stimpson&quot;</span>, <span class="string">&quot;J&quot;</span>, [<span class="string">&quot;cat&quot;</span>]];</span><br><span class="line"><span class="keyword">var</span> removedFromOurArray = ourArray.shift();</span><br><span class="line"><span class="comment">// removedFromOurArray now equals &quot;Stimpson&quot; and ourArray now equals [&quot;J&quot;, [&quot;cat&quot;]].</span></span><br></pre></td></tr></table></figure><h3 id="基本的JavaScript：使用unshift（）处理数组"><a href="#基本的JavaScript：使用unshift（）处理数组" class="headerlink" title="基本的JavaScript：使用unshift（）处理数组"></a>基本的JavaScript：使用unshift（）处理数组</h3><p>您不仅可以将shift元素移出数组的开头，还可以将unshift元素移到数组的开头，即在数组的前面添加元素。</p><p>.unshift()的工作方式与完全相同.push()，但不是在数组的末尾添加元素，而是在数组unshift()的开头添加了元素。</p><p>例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ourArray = [<span class="string">&quot;Stimpson&quot;</span>, <span class="string">&quot;J&quot;</span>, <span class="string">&quot;cat&quot;</span>];</span><br><span class="line">ourArray.shift(); <span class="comment">// ourArray now equals [&quot;J&quot;, &quot;cat&quot;]</span></span><br><span class="line">ourArray.unshift(<span class="string">&quot;Happy&quot;</span>);</span><br><span class="line"><span class="comment">// ourArray now equals [&quot;Happy&quot;, &quot;J&quot;, &quot;cat&quot;]</span></span><br></pre></td></tr></table></figure><h3 id="基本的JavaScript：使用函数编写可重用的JavaScript"><a href="#基本的JavaScript：使用函数编写可重用的JavaScript" class="headerlink" title="基本的JavaScript：使用函数编写可重用的JavaScript"></a>基本的JavaScript：使用函数编写可重用的JavaScript</h3><p>在JavaScript中，我们可以将代码分成称为函数的可重用部分。</p><p>这是一个函数示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">functionName</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">functionName();</span><br></pre></td></tr></table></figure><p>您可以通过在函数名称后加上括号来调用或调用该函数，如下所示：functionName(); 每次调用该函数 时，它将”Hello World”在开发人员控制台上打印出消息。每次调用函数时，花括号之间的所有代码都将执行。</p><h3 id="基本的JavaScript：使用参数将值传递给函数"><a href="#基本的JavaScript：使用参数将值传递给函数" class="headerlink" title="基本的JavaScript：使用参数将值传递给函数"></a>基本的JavaScript：使用参数将值传递给函数</h3><p>参数是变量，用作变量被调用时将输入到该函数的值的占位符。定义功能时，通常将其与一个或多个参数一起定义。调用函数时输入（或“传递”）到函数中的实际值称为参数。</p><p>这是一个带有两个参数的函数，param1并且param2：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testFun</span>(<span class="params">param1, param2</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(param1, param2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们可以调用testFun： testFun(“Hello”, “World”); 我们传递了两个参数，”Hello”和”World”。在函数内部，param1将等于“ Hello”，param2并将等于“ World”。请注意，您可以testFun使用不同的参数再次调用，并且这些参数将采用新参数的值。</p><h3 id="基本的JavaScript：全局范围和功能"><a href="#基本的JavaScript：全局范围和功能" class="headerlink" title="基本的JavaScript：全局范围和功能"></a>基本的JavaScript：全局范围和功能</h3><p>在JavaScript中，范围是指变量的可见性。在功能块之外定义的变量具有全局作用域。这意味着它们可以在您的JavaScript代码中随处可见。</p><p>没有var关键字使用的变量将在global范围内自动创建。这可能会在代码的其他地方或再次运行函数时产生意外的后果。您应该始终使用声明变量var。</p><h3 id="基本的JavaScript：使用Return从函数返回值"><a href="#基本的JavaScript：使用Return从函数返回值" class="headerlink" title="基本的JavaScript：使用Return从函数返回值"></a>基本的JavaScript：使用Return从函数返回值</h3><p>我们可以将值传递给带有参数的函数。您可以使用return语句将值发送回函数之外。</p><p>例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">plusThree</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num + <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> answer = plusThree(<span class="number">5</span>); <span class="comment">// 8</span></span><br><span class="line">plusThree需要一个参数为num并返回一个值等于num + <span class="number">3</span>。</span><br></pre></td></tr></table></figure><p>创建一个timesFive接受一个参数的函数，将其乘以5，然后返回新值。有关如何测试timesFive功能的示例，请参见编辑器的最后一行。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">timesFive</span>(<span class="params">num</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">return</span> num*<span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line">timesFive(<span class="number">5</span>);</span><br><span class="line"><span class="built_in">console</span>.log(timesFive(<span class="number">5</span>));</span><br></pre></td></tr></table></figure><h3 id="基本的JavaScript：了解从函数返回的未定义值"><a href="#基本的JavaScript：了解从函数返回的未定义值" class="headerlink" title="基本的JavaScript：了解从函数返回的未定义值"></a>基本的JavaScript：了解从函数返回的未定义值</h3><p>函数可以包含该return语句，但不是必须的。如果该函数没有return语句，则在调用它时，该函数将处理内部代码，但返回值是undefined。</p><p>例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addSum</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">  sum = sum + num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>addSum(3); // sum will be modified but returned value is undefined<br>addSum是一个没有return声明的函数。函数将更改全局sum变量，但函数的返回值为undefined。</p><p>创建一个addFive不带任何参数的函数。此函数将5加到sum变量中，但返回值是undefined。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Setup</span></span><br><span class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addThree</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  sum = sum + <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Only change code below this line</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addFive</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  sum=sum+<span class="number">5</span>;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Only change code above this line</span></span><br><span class="line"></span><br><span class="line">addThree();</span><br><span class="line">addFive();</span><br><span class="line"><span class="built_in">console</span>.log(sum);</span><br></pre></td></tr></table></figure><hr><p>2020年8月27日15:18:31</p><h3 id="基本JavaScript：与Equality运算符的比较"><a href="#基本JavaScript：与Equality运算符的比较" class="headerlink" title="基本JavaScript：与Equality运算符的比较"></a>基本JavaScript：与Equality运算符的比较</h3><p>JavaScript中有许多比较运算符。所有这些运算符均返回布尔值true或false值。</p><p>最基本的运算符是相等运算符==。相等运算符比较两个值，true如果相等或false不相等，则返回。请注意，相等与赋值（=）不同，赋值（）将运算符右侧的值赋给左侧的变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function equalityTest(myVal) &#123;</span><br><span class="line">  if (myVal &#x3D;&#x3D; 10) &#123;</span><br><span class="line">     return &quot;Equal&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  return &quot;Not Equal&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果myVal等于10，则返回equals运算符true，因此花括号中的代码将执行，该函数将返回”Equal”。否则，函数将返回”Not Equal”。为了让JavaScript比较两种不同的数据类型（例如numbers和strings），它必须将一种类型转换为另一种类型。这称为“类型强制”。但是，一旦完成，它可以比较以下各项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1   &#x3D;&#x3D;  1   &#x2F;&#x2F; true</span><br><span class="line">1   &#x3D;&#x3D;  2   &#x2F;&#x2F; false</span><br><span class="line">1   &#x3D;&#x3D; &#39;1&#39;  &#x2F;&#x2F; true</span><br><span class="line">&quot;3&quot; &#x3D;&#x3D;  3   &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><h3 id="基本JavaScript：与严格相等运算符的比较"><a href="#基本JavaScript：与严格相等运算符的比较" class="headerlink" title="基本JavaScript：与严格相等运算符的比较"></a>基本JavaScript：与严格相等运算符的比较</h3><p>严格等于（===）与等于运算符（==）相对应。但是，与尝试将两个值都转换为通用类型的相等运算符不同，严格相等运算符不执行类型转换。</p><p>如果要比较的值具有不同的类型，则将它们视为不相等，并且严格相等运算符将返回false。</p><p>例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 &#x3D;&#x3D;&#x3D;  3   &#x2F;&#x2F; true</span><br><span class="line">3 &#x3D;&#x3D;&#x3D; &#39;3&#39;  &#x2F;&#x2F; false</span><br><span class="line">在第二个示例中，3是Number类型，&#39;3&#39;是String类型。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="基本JavaScript：与不等式运算符的比较"><a href="#基本JavaScript：与不等式运算符的比较" class="headerlink" title="基本JavaScript：与不等式运算符的比较"></a>基本JavaScript：与不等式运算符的比较</h3><p>不等式运算符（!=）与等式运算符相反。它的意思是“不等于”，并false在等于返回的地方返回true，反之亦然。与相等运算符一样，不相等运算符将在比较时转换值的数据类型。</p><p>例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 !&#x3D;  2     &#x2F;&#x2F; true</span><br><span class="line">1 !&#x3D; &quot;1&quot;    &#x2F;&#x2F; false</span><br><span class="line">1 !&#x3D; &#39;1&#39;    &#x2F;&#x2F; false</span><br><span class="line">1 !&#x3D; true   &#x2F;&#x2F; false</span><br><span class="line">0 !&#x3D; false  &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><h3 id="基本的JavaScript：与逻辑和运算符的比较"><a href="#基本的JavaScript：与逻辑和运算符的比较" class="headerlink" title="基本的JavaScript：与逻辑和运算符的比较"></a>基本的JavaScript：与逻辑和运算符的比较</h3><p>有时，您一次需要测试多个功能。该逻辑与操作符（&amp;&amp;）返回时true，当且仅当操作数的左，右它是真实的。</p><p>将if语句嵌套在另一个if中可以达到相同的效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if (num &gt; 5) &#123;</span><br><span class="line">  if (num &lt; 10) &#123;</span><br><span class="line">    return &quot;Yes&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">return &quot;No&quot;;</span><br></pre></td></tr></table></figure><p>如果num大于5和小于，则只会返回“是” 10。相同的逻辑可以写成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if (num &gt; 5 &amp;&amp; num &lt; 10) &#123;</span><br><span class="line">  return &quot;Yes&quot;;</span><br><span class="line">&#125;</span><br><span class="line">return &quot;No&quot;;</span><br></pre></td></tr></table></figure><h3 id="基本JavaScript：与逻辑或运算符的比较"><a href="#基本JavaScript：与逻辑或运算符的比较" class="headerlink" title="基本JavaScript：与逻辑或运算符的比较"></a>基本JavaScript：与逻辑或运算符的比较</h3><p>的逻辑或运算符（||）返回true如果任一的操作数是true。否则，返回false。</p><p>的逻辑或操作是由两个管符号：（ ||）。通常可以在Backspace键和Enter键之间找到它。</p><p>从以前的观点来看，以下模式应该看起来很熟悉：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if (num &gt; 10) &#123;</span><br><span class="line">  return &quot;No&quot;;</span><br><span class="line">&#125;</span><br><span class="line">if (num &lt; 5) &#123;</span><br><span class="line">  return &quot;No&quot;;</span><br><span class="line">&#125;</span><br><span class="line">return &quot;Yes&quot;;</span><br></pre></td></tr></table></figure><p>仅当num介于5和之间10（包括5和10）时，才会返回“是” 。相同的逻辑可以写成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if (num &gt; 10 || num &lt; 5) &#123;</span><br><span class="line">  return &quot;No&quot;;</span><br><span class="line">&#125;</span><br><span class="line">return &quot;Yes&quot;;</span><br></pre></td></tr></table></figure><h3 id="基本的JavaScript：构建JavaScript对象"><a href="#基本的JavaScript：构建JavaScript对象" class="headerlink" title="基本的JavaScript：构建JavaScript对象"></a>基本的JavaScript：构建JavaScript对象</h3><p>您可能以前听过这个词object。</p><p>对象与对象相似arrays，除了对象不使用索引来访问和修改其数据，而是通过所谓的访问对象中的数据properties。</p><p>对象对于以结构化方式存储数据很有用，并且可以表示现实世界中的对象，例如猫。</p><p>这是一个示例猫对象：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var cat &#x3D; &#123;</span><br><span class="line">  &quot;name&quot;: &quot;Whiskers&quot;,</span><br><span class="line">  &quot;legs&quot;: 4,</span><br><span class="line">  &quot;tails&quot;: 1,</span><br><span class="line">  &quot;enemies&quot;: [&quot;Water&quot;, &quot;Dogs&quot;]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在此实例中，所有的属性存储为字符串，如- ，”name”，”legs”和”tails”。但是，您也可以将数字用作属性。您甚至可以省略单字字符串属性的引号，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var anotherObject &#x3D; &#123;</span><br><span class="line">  make: &quot;Ford&quot;,</span><br><span class="line">  5: &quot;five&quot;,</span><br><span class="line">  &quot;model&quot;: &quot;focus&quot;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>但是，如果您的对象具有任何非字符串属性，则JavaScript会自动将其类型转换为字符串。</p><h3 id="基本的JavaScript：使用点符号访问对象属性"><a href="#基本的JavaScript：使用点符号访问对象属性" class="headerlink" title="基本的JavaScript：使用点符号访问对象属性"></a>基本的JavaScript：使用点符号访问对象属性</h3><p>有两种方法可以访问对象的属性：点表示法（.）和括号表示法（[]），类似于数组。</p><p>当您提前知道要访问的属性的名称时，便使用点符号。</p><p>以下是使用点符号（.）读取对象属性的示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var myObj &#x3D; &#123;</span><br><span class="line">  prop1: &quot;val1&quot;,</span><br><span class="line">  prop2: &quot;val2&quot;</span><br><span class="line">&#125;;</span><br><span class="line">var prop1val &#x3D; myObj.prop1; &#x2F;&#x2F; val1</span><br><span class="line">var prop2val &#x3D; myObj.prop2; &#x2F;&#x2F; val2</span><br></pre></td></tr></table></figure><h3 id="基本的JavaScript：使用方括号表示法访问对象属性"><a href="#基本的JavaScript：使用方括号表示法访问对象属性" class="headerlink" title="基本的JavaScript：使用方括号表示法访问对象属性"></a>基本的JavaScript：使用方括号表示法访问对象属性</h3><p>访问对象属性的第二种方法是括号表示法（[]）。如果您尝试访问的对象的属性名称中带有空格，则需要使用方括号表示法。</p><p>但是，您仍然可以在不带空格的对象属性上使用方括号表示法。</p><p>这是使用括号表示法读取对象属性的示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var myObj &#x3D; &#123;</span><br><span class="line">  &quot;Space Name&quot;: &quot;Kirk&quot;,</span><br><span class="line">  &quot;More Space&quot;: &quot;Spock&quot;,</span><br><span class="line">  &quot;NoSpace&quot;: &quot;USS Enterprise&quot;</span><br><span class="line">&#125;;</span><br><span class="line">myObj[&quot;Space Name&quot;]; &#x2F;&#x2F; Kirk</span><br><span class="line">myObj[&#39;More Space&#39;]; &#x2F;&#x2F; Spock</span><br><span class="line">myObj[&quot;NoSpace&quot;];    &#x2F;&#x2F; USS Enterprise</span><br></pre></td></tr></table></figure><p>** 请注意，其中带有空格的属性名称必须用引号引起来（单或双）。** </p><h3 id="基本的JavaScript：使用变量访问对象属性"><a href="#基本的JavaScript：使用变量访问对象属性" class="headerlink" title="基本的JavaScript：使用变量访问对象属性"></a>基本的JavaScript：使用变量访问对象属性</h3><p>在对象上使用括号表示法的另一种用法是访问存储为变量值的属性。这对于遍历对象的属性或访问查找表时非常有用。</p><p>这是使用变量访问属性的示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var dogs &#x3D; &#123;</span><br><span class="line">  Fido: &quot;Mutt&quot;,  Hunter: &quot;Doberman&quot;,  Snoopie: &quot;Beagle&quot;</span><br><span class="line">&#125;;</span><br><span class="line">var myDog &#x3D; &quot;Hunter&quot;;</span><br><span class="line">var myBreed &#x3D; dogs[myDog];</span><br><span class="line">console.log(myBreed); &#x2F;&#x2F; &quot;Doberman&quot;</span><br></pre></td></tr></table></figure><p>使用此概念的另一种方法是在程序执行期间动态收集属性名称，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var someObj &#x3D; &#123;</span><br><span class="line">  propName: &quot;John&quot;</span><br><span class="line">&#125;;</span><br><span class="line">function propPrefix(str) &#123;</span><br><span class="line">  var s &#x3D; &quot;prop&quot;;</span><br><span class="line">  return s + str;</span><br><span class="line">&#125;</span><br><span class="line">var someProp &#x3D; propPrefix(&quot;Name&quot;); &#x2F;&#x2F; someProp now holds the value &#39;propName&#39;</span><br><span class="line">console.log(someObj[someProp]); &#x2F;&#x2F; &quot;John&quot;</span><br></pre></td></tr></table></figure><p>** 请注意，在使用变量名访问属性时，我们不会在变量名前后使用引号，因为我们使用的是变量的值，而不是name。**</p><p style="color: red;">这种我感觉有种脱裤子放屁的感觉 </p><h3 id="基本的JavaScript：向JavaScript对象添加新属性"><a href="#基本的JavaScript：向JavaScript对象添加新属性" class="headerlink" title="基本的JavaScript：向JavaScript对象添加新属性"></a>基本的JavaScript：向JavaScript对象添加新属性</h3><p>您可以通过修改现有属性的方式向现有JavaScript对象添加新属性。</p><p>这是我们将”bark”属性添加到的方法ourDog：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ourDog.bark &#x3D; &quot;bow-wow&quot;;</span><br></pre></td></tr></table></figure><p>要么</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ourDog[&quot;bark&quot;] &#x3D; &quot;bow-wow&quot;;</span><br></pre></td></tr></table></figure><p>现在，当我们进行评估时ourDog.bark，我们将得到他的树皮，“哇”。</p><p>例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var ourDog &#x3D; &#123;</span><br><span class="line">  &quot;name&quot;: &quot;Camper&quot;,</span><br><span class="line">  &quot;legs&quot;: 4,</span><br><span class="line">  &quot;tails&quot;: 1,</span><br><span class="line">  &quot;friends&quot;: [&quot;everything!&quot;]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">ourDog.bark &#x3D; &quot;bow-wow&quot;;</span><br></pre></td></tr></table></figure><h3 id="基本的JavaScript：从JavaScript对象删除属性"><a href="#基本的JavaScript：从JavaScript对象删除属性" class="headerlink" title="基本的JavaScript：从JavaScript对象删除属性"></a>基本的JavaScript：从JavaScript对象删除属性</h3><p>我们还可以从这样的对象中删除属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete ourDog.bark;</span><br></pre></td></tr></table></figure><p>例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var ourDog &#x3D; &#123;</span><br><span class="line">  &quot;name&quot;: &quot;Camper&quot;,</span><br><span class="line">  &quot;legs&quot;: 4,</span><br><span class="line">  &quot;tails&quot;: 1,</span><br><span class="line">  &quot;friends&quot;: [&quot;everything!&quot;],</span><br><span class="line">  &quot;bark&quot;: &quot;bow-wow&quot;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete ourDog.bark;</span><br></pre></td></tr></table></figure><p>在上面显示的最后一行之后，如下所示ourDog：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;Camper&quot;,</span><br><span class="line">  &quot;legs&quot;: 4,</span><br><span class="line">  &quot;tails&quot;: 1,</span><br><span class="line">  &quot;friends&quot;: [&quot;everything!&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="基本的JavaScript：使用对象进行查找"><a href="#基本的JavaScript：使用对象进行查找" class="headerlink" title="基本的JavaScript：使用对象进行查找"></a>基本的JavaScript：使用对象进行查找</h3><p>可以将对象视为字典的键/值存储。如果您具有表格数据，则可以使用对象来“查找”值，而不是switch语句或if/else链。当您知道输入数据被限制在一定范围内时，此功能最为有用。</p><p>这是一个简单的反向字母查找示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var alpha &#x3D; &#123;</span><br><span class="line">  1:&quot;Z&quot;,</span><br><span class="line">  2:&quot;Y&quot;,</span><br><span class="line">  3:&quot;X&quot;,</span><br><span class="line">  4:&quot;W&quot;,</span><br><span class="line">  ...</span><br><span class="line">  24:&quot;C&quot;,</span><br><span class="line">  25:&quot;B&quot;,</span><br><span class="line">  26:&quot;A&quot;</span><br><span class="line">&#125;;</span><br><span class="line">alpha[2]; &#x2F;&#x2F; &quot;Y&quot;</span><br><span class="line">alpha[24]; &#x2F;&#x2F; &quot;C&quot;</span><br><span class="line"></span><br><span class="line">var value &#x3D; 2;</span><br><span class="line">alpha[value]; &#x2F;&#x2F; &quot;Y&quot;</span><br></pre></td></tr></table></figure><h3 id="基本的JavaScript：测试对象的属性"><a href="#基本的JavaScript：测试对象的属性" class="headerlink" title="基本的JavaScript：测试对象的属性"></a>基本的JavaScript：测试对象的属性</h3><p>有时检查给定对象的属性是否存在很有用。我们可以使用.hasOwnProperty(propname)对象的方法来确定该对象是否具有给定的属性名称。.hasOwnProperty()返回true或者false是否找到该属性。</p><p>例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var myObj &#x3D; &#123;</span><br><span class="line">  top: &quot;hat&quot;,</span><br><span class="line">  bottom: &quot;pants&quot;</span><br><span class="line">&#125;;</span><br><span class="line">myObj.hasOwnProperty(&quot;top&quot;);    &#x2F;&#x2F; true</span><br><span class="line">myObj.hasOwnProperty(&quot;middle&quot;); &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><h3 id="基本的JavaScript：访问嵌套数组"><a href="#基本的JavaScript：访问嵌套数组" class="headerlink" title="基本的JavaScript：访问嵌套数组"></a>基本的JavaScript：访问嵌套数组</h3><p>正如我们在前面的示例中看到的那样，对象可以同时包含嵌套对象和嵌套数组。与访问嵌套对象类似，可以将数组括号符号链接起来以访问嵌套数组。</p><p>这是有关如何访问嵌套数组的示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">var ourPets &#x3D; [</span><br><span class="line">  &#123;</span><br><span class="line">    animalType: &quot;cat&quot;,</span><br><span class="line">    names: [</span><br><span class="line">      &quot;Meowzer&quot;,</span><br><span class="line">      &quot;Fluffy&quot;,</span><br><span class="line">      &quot;Kit-Cat&quot;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    animalType: &quot;dog&quot;,</span><br><span class="line">    names: [</span><br><span class="line">      &quot;Spot&quot;,</span><br><span class="line">      &quot;Bowser&quot;,</span><br><span class="line">      &quot;Frankie&quot;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line">ourPets[0].names[1]; &#x2F;&#x2F; &quot;Fluffy&quot;</span><br><span class="line">ourPets[1].names[0]; &#x2F;&#x2F; &quot;Spot&quot;</span><br></pre></td></tr></table></figure><h2 id="基本的JavaScript：记录收集"><a href="#基本的JavaScript：记录收集" class="headerlink" title="基本的JavaScript：记录收集"></a>基本的JavaScript：记录收集</h2><p>您将获得一个JSON对象，该对象代表您的音乐专辑收藏中的一部分。每张专辑都有一个唯一的ID号作为其密钥以及其他几个属性。并非所有专辑都有完整的信息。</p><p>你开始的updateRecords，它接受一个对象类的函数collection，一个id，一个prop（如artist或tracks），和value。使用以下规则来完成该功能，以修改传递给该功能的对象。</p><p>您的函数必须始终返回整个对象。<br>如果prop不是tracks并且value不是空字符串，请将该专辑的更新或设置prop为value。<br>如果prop是，tracks但是相册没有tracks属性，请创建一个空数组并添加value到其中。<br>如果prop是tracks且value不是空字符串，则将其添加value到相册现有tracks数组的末尾。<br>如果value为空字符串，prop则从相册中删除给定的属性。</p><h3 id="基本JavaScript：使用JavaScript-For循环进行迭代"><a href="#基本JavaScript：使用JavaScript-For循环进行迭代" class="headerlink" title="基本JavaScript：使用JavaScript For循环进行迭代"></a>基本JavaScript：使用JavaScript For循环进行迭代</h3><p>您可以使用循环多次运行相同的代码。</p><p>JavaScript循环的最常见类型称为for循环，因为它可以“运行”特定次数。</p><p>用三个用分号分隔的可选表达式声明for循环：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for ([initialization]; [condition]; [final-expression])</span><br></pre></td></tr></table></figure><p>该initialization语句仅在循环开始之前执行一次。它通常用于定义和设置循环变量。</p><p>该condition语句在每次循环迭代开始时进行评估，并且只要评估为就会继续true。如果condition是false在迭代开始时，循环将停止执行。这意味着，如果condition启动为false，则循环将永远不会执行。</p><p>将final-expression在每个循环迭代结束时执行，下前condition检查，通常用于递增或递减的循环计数器。</p><p>在下面的示例中i = 0，当条件i &lt; 5为真时，我们使用进行初始化和迭代。我们将增加i通过1在每个循环迭代i++作为我们的final-expression。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var ourArray &#x3D; [];</span><br><span class="line">for (var i &#x3D; 0; i &lt; 5; i++) &#123;</span><br><span class="line">  ourArray.push(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基本的JavaScript：用for循环迭代奇数"><a href="#基本的JavaScript：用for循环迭代奇数" class="headerlink" title="基本的JavaScript：用for循环迭代奇数"></a>基本的JavaScript：用for循环迭代奇数</h2><p>对于循环，不必一次迭代一次。通过更改final-expression，我们可以按偶数计数。</p><p>我们将从开始i = 0并循环一会儿i &lt; 10。i每个循环我们将用增加2 i += 2。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var ourArray &#x3D; [];</span><br><span class="line">for (var i &#x3D; 0; i &lt; 10; i +&#x3D; 2) &#123;</span><br><span class="line">  ourArray.push(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ourArray现在将包含[0,2,4,6,8]。让我们更改一下，initialization以便我们可以按奇数计数。</p><h2 id="基本的JavaScript：使用For循环向后计数"><a href="#基本的JavaScript：使用For循环向后计数" class="headerlink" title="基本的JavaScript：使用For循环向后计数"></a>基本的JavaScript：使用For循环向后计数</h2><p>只要我们可以定义正确的条件，for循环也可以倒数。</p><p>为了通过三三两两来算倒退，我们需要改变我们的initialization，condition和final-expression。</p><p>我们将从开始i = 10并循环一会儿i &gt; 0。我们将i每个循环递减2 i -= 2。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var ourArray &#x3D; [];</span><br><span class="line">for (var i &#x3D; 10; i &gt; 0; i -&#x3D; 2) &#123;</span><br><span class="line">  ourArray.push(i);</span><br><span class="line">&#125;</span><br><span class="line">ourArray现在将包含[10,8,6,4,2]。让我们进行更改initialization，final-expression这样我们就可以用奇数倒数两位。</span><br></pre></td></tr></table></figure><h2 id="基本的JavaScript：使用For循环遍历数组"><a href="#基本的JavaScript：使用For循环遍历数组" class="headerlink" title="基本的JavaScript：使用For循环遍历数组"></a>基本的JavaScript：使用For循环遍历数组</h2><p>JavaScript的一项常见任务是遍历数组的内容。一种方法是for循环。此代码会将数组的每个元素输出arr到控制台：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [10, 9, 8, 7, 6];</span><br><span class="line">for (var i &#x3D; 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">   console.log(arr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请记住，数组具有从零开始的索引，这意味着数组的最后一个索引是length - 1。此循环的条件是i &lt; arr.length，当i等于时将停止循环length。在这种情况下，最后一次迭代是，i === 4即i等于arr.length并输出6到控制台。</p>]]></content>
    
    
    
    <tags>
      
      <tag>javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>人生感悟</title>
    <link href="/2020/07/23/miss/"/>
    <url>/2020/07/23/miss/</url>
    
    <content type="html"><![CDATA[<h3 id="2020-07-23"><a href="#2020-07-23" class="headerlink" title="2020.07.23"></a>2020.07.23</h3><a id="more"></a><p>哪有什么岁月静好，不过是有人为你负重前行。</p>]]></content>
    
    
    
    <tags>
      
      <tag>语记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网页设计|初步(一)</title>
    <link href="/2020/07/23/web_a/"/>
    <url>/2020/07/23/web_a/</url>
    
    <content type="html"><![CDATA[<h2 id="引用本地字库"><a href="#引用本地字库" class="headerlink" title="引用本地字库"></a>引用本地字库</h2><a id="more"></a><p>css 代码：自定义字体</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@font-face &#123;  font-family: &#39;MyFont&#39;;&#x2F;*字体名称*&#x2F;  src: url(&#39;font.ttf&#39;); &#x2F;*字体源文件*&#x2F;&#125;</span><br></pre></td></tr></table></figure><p>然后在定义就可以了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.text&#123;    font-family: MyFont; &#x2F;*刚刚定义的字体名称*&#x2F;&#125;</span><br></pre></td></tr></table></figure><h2 id="postition理解"><a href="#postition理解" class="headerlink" title="postition理解"></a>postition理解</h2><table><thead><tr><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">absolute</td><td align="center">生成绝对定位的元素，相对于 static 定位以外的第一个父元素进行定位。元素的位置通过 “left”, “top”, “right” 以及 “bottom” 属性进行规定。</td></tr></tbody></table><h2 id="margin与padding"><a href="#margin与padding" class="headerlink" title="margin与padding"></a>margin与padding</h2><h3 id="margin定义"><a href="#margin定义" class="headerlink" title="margin定义"></a>margin定义</h3><p>margin 简写属性在一个声明中设置所有外边距属性。该属性可以有 1 到 4 个值。</p><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>这个简写属性设置一个元素所有外边距的宽度，或者设置各边上外边距的宽度。</p><p>块级元素的垂直相邻外边距会合并，而行内元素实际上不占上下外边距。行内元素的的左右外边距不会合并。同样地，浮动元素的外边距也不会合并。允许指定负的外边距值，不过使用时要小心。</p><p>例1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin:10px 5px 15px 20px;</span><br></pre></td></tr></table></figure><ul><li>上外边距是 10px</li><li>右外边距是 5px</li><li>下外边距是 15px</li><li>左外边距是 20px</li></ul><p>例2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin:10px 5px 15px;</span><br></pre></td></tr></table></figure><ul><li>上外边距是 10px</li><li>右外边距和左外边距是 5px</li><li>下外边距是 15px</li></ul><p>例3：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin:10px 5px;</span><br></pre></td></tr></table></figure><ul><li>上外边距和下外边距是 10px</li><li>右外边距和左外边距是 5px</li></ul><table><thead><tr><th align="center">值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">auto</td><td align="left">浏览器计算外边距。</td></tr><tr><td align="center">length</td><td align="left">规定以具体单位计的外边距值，比如像素、厘米等。默认值是 0px。</td></tr><tr><td align="center">%</td><td align="left">规定基于父元素的宽度的百分比的外边距。</td></tr><tr><td align="center">inherit</td><td align="left">规定应该从父元素继承外边距。</td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>网页设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小程序零基础学习</title>
    <link href="/2020/07/15/mini_study/"/>
    <url>/2020/07/15/mini_study/</url>
    
    <content type="html"><![CDATA[<h2 id="零基础学习-一"><a href="#零基础学习-一" class="headerlink" title="零基础学习(一)"></a>零基础学习(一)</h2><a id="more"></a><p>简单的点击事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">wxml:</span><br><span class="line">&lt;view&gt;&#123;&#123;msg&#125;&#125;&lt;&#x2F;view&gt;</span><br><span class="line">&lt;button bindtap&#x3D;&quot;clickme&quot;&gt;点一下&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">js</span><br><span class="line"></span><br><span class="line">page(&#123;</span><br><span class="line">clickme:function&#123;</span><br><span class="line">this.setdata(&#123;msg:&quot;msg&quot;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">以上就是微信小程序中,点击事件的初步</span><br></pre></td></tr></table></figure><h2 id="零基础学习（二）"><a href="#零基础学习（二）" class="headerlink" title="零基础学习（二）"></a>零基础学习（二）</h2><p>获取头像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">js:</span><br><span class="line"> getUserInfo: function(e) &#123;</span><br><span class="line">    console.log(e)</span><br><span class="line">    app.globalData.userInfo &#x3D; e.detail.userInfo</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      userInfo: e.detail.userInfo,</span><br><span class="line">      hasUserInfo: true</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  wxml:</span><br><span class="line">  &lt;view class&#x3D;&quot;userinfo&quot;&gt;</span><br><span class="line">    &lt;button wx:if&#x3D;&quot;&#123;&#123;!hasUserInfo &amp;&amp; canIUse&#125;&#125;&quot; open-type&#x3D;&quot;getUserInfo&quot; bindgetuserinfo&#x3D;&quot;getUserInfo&quot;&gt; 获取头像昵称 &lt;&#x2F;button&gt;</span><br><span class="line">    &lt;block wx:else&gt;</span><br><span class="line">      &lt;image bindtap&#x3D;&quot;bindViewTap&quot; class&#x3D;&quot;userinfo-avatar&quot; src&#x3D;&quot;&#123;&#123;userInfo.avatarUrl&#125;&#125;&quot; mode&#x3D;&quot;cover&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">      &lt;text class&#x3D;&quot;userinfo-nickname&quot;&gt;&#123;&#123;userInfo.nickName&#125;&#125;&lt;&#x2F;text&gt;</span><br><span class="line">    &lt;&#x2F;block&gt;</span><br><span class="line">    &lt;view&gt;&#123;&#123;msg&#125;&#125;&lt;&#x2F;view&gt;</span><br><span class="line">       &lt;button bindtap&#x3D;&quot;dianji&quot;&gt;点一下&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;view&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加tabbar"><a href="#添加tabbar" class="headerlink" title="添加tabbar"></a>添加tabbar</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">app.json中配置 (最少2个，最多5个)</span><br><span class="line"></span><br><span class="line">&quot;tabBar&quot;: &#123;</span><br><span class="line">    &quot;list&quot;: [&#123;</span><br><span class="line">      &quot;pagePath&quot;: &quot;pages&#x2F;index&#x2F;index&quot;,</span><br><span class="line">      &quot;text&quot;: &quot;首页&quot;,</span><br><span class="line">      &quot;iconPath&quot;:&quot;图片地址&quot;,</span><br><span class="line">      &quot;selectIconPath&quot;:&quot;同上&quot;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      &quot;pagePath&quot;: &quot;pages&#x2F;logs&#x2F;index&quot;,</span><br><span class="line">      &quot;text&quot;: &quot;日志&quot;</span><br><span class="line">      &quot;iconPath&quot;:&quot;图片地址&quot;,</span><br><span class="line">      &quot;selectIconPath&quot;:&quot;同上&quot;</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h2 id="轮播图"><a href="#轮播图" class="headerlink" title="轮播图"></a>轮播图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">wxml:</span><br><span class="line"></span><br><span class="line">&lt;swiper indicator-dots&#x3D;&#39;true&#39; indicator-color&#x3D;&#39;gray&#39; indicator-active-color&#x3D;&#39;green&#39; autoplay&#x3D;&#39;true&#39; interval&#x3D;&#39;5000&#39; duration&#x3D;&#39;500&#39;&gt;</span><br><span class="line">    &lt;block wx:for&#x3D;&quot;&#123;&#123;imgUrl&#125;&#125;&quot;&gt;</span><br><span class="line">      &lt;swiper-item class&#x3D;&quot;item_image&quot;&gt;</span><br><span class="line">          &lt;image src&#x3D;&#39;&#123;&#123;item&#125;&#125;&#39; class&#x3D;&#39;swiper_image&#39; mode&#x3D;&quot;aspectFill&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">      &lt;&#x2F;swiper-item&gt;</span><br><span class="line">    &lt;&#x2F;block&gt;</span><br><span class="line"></span><br><span class="line">js:</span><br><span class="line"></span><br><span class="line">imgUrl: [</span><br><span class="line">      &#39;https:&#x2F;&#x2F;a.vimage1.com&#x2F;upload&#x2F;brand&#x2F;upcb&#x2F;2017&#x2F;08&#x2F;11&#x2F;97&#x2F;01006302_604x290_80.jpg&#39;,</span><br><span class="line">      &#39;https:&#x2F;&#x2F;a.vimage1.com&#x2F;upload&#x2F;brand&#x2F;upcb&#x2F;2017&#x2F;08&#x2F;17&#x2F;153&#x2F;ias_150293567439328_604x290_80.jpg&#39;,</span><br><span class="line">      &#39;https:&#x2F;&#x2F;a.vimage1.com&#x2F;upload&#x2F;brand&#x2F;upcb&#x2F;2017&#x2F;08&#x2F;15&#x2F;53&#x2F;ias_150276254071689_604x290_80.jpg&#39;,</span><br><span class="line">      &#39;https:&#x2F;&#x2F;a.vimage1.com&#x2F;upload&#x2F;brand&#x2F;upcb&#x2F;2017&#x2F;08&#x2F;11&#x2F;154&#x2F;ias_150244675261299_604x290_80.jpg&#39;</span><br><span class="line">  ],</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;swiper&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网页编写实操</title>
    <link href="/2020/07/13/%E9%A1%B9%E7%9B%AE%E6%84%9F%E6%82%9F/"/>
    <url>/2020/07/13/%E9%A1%B9%E7%9B%AE%E6%84%9F%E6%82%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="前记"><a href="#前记" class="headerlink" title="前记"></a>前记</h2><a id="more"></a><p>   这是第一次实际操作，灵感来源于天天提交的健康信息报告，每天都要在qq汇报<br>弄这个健康信息填报网页，花了我很长的时间，更多的是去寻找合适的资料。其实，有点找现成的代码<br>不用那么麻烦自己。但是实际过程中，适配自己的网页，花了我不少的时间，因为不是一个代码，拿来就可以编写用的<br>还要结合自己的思考，现在开始总结我在编写中的经验，以备后用，和启发未来者。</p><h3 id="此次用的语言是PHP-，mysql-html，css"><a href="#此次用的语言是PHP-，mysql-html，css" class="headerlink" title="此次用的语言是PHP ，mysql,html，css"></a>此次用的语言是PHP ，mysql,html，css</h3><p>  前端的页面我在网站找现成的组件，没有自己编写，剩下不少的时间，主要就是和后端尤其是数据库的交互，<br>  我找的代码也没有很多，ctrl+c/v ，希望未来可以想出自己的代码。一个功能的实现，代码并不是唯一的，也是有很多<br>  的方法的，就看你有没有想法了。</p><h2 id="index-html界面"><a href="#index-html界面" class="headerlink" title="index.html界面"></a>index.html界面</h2><h3 id="最新也是比较老套的提交表单方式，利用form来提交"><a href="#最新也是比较老套的提交表单方式，利用form来提交" class="headerlink" title="最新也是比较老套的提交表单方式，利用form来提交"></a>最新也是比较老套的提交表单方式，利用form来提交</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form  action&#x3D;&quot;&quot; method&#x3D;&quot;&quot; target&#x3D;&quot;&quot; &gt;</span><br><span class="line">&lt;button type&#x3D;&quot;sumit&quot;&gt;按钮&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure><h3 id="页面的重置按钮"><a href="#页面的重置按钮" class="headerlink" title="页面的重置按钮"></a>页面的重置按钮</h3><p>其实页面重置的按钮，实现这个功能的难度不大，只要记得那个 type的属性是reset<br>代码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;reset&quot; name&#x3D;&quot;&quot;&gt;</span><br></pre></td></tr></table></figure><p>很简单的实现了这个功能</p><h3 id="其他不重要的功能"><a href="#其他不重要的功能" class="headerlink" title="其他不重要的功能"></a>其他不重要的功能</h3><p>就是输入框，然后利用标签<br>我一开始有一个bate版本，那个很简陋，就是实现简单的功能，毫无美感，用了输入框，没用标签，用了文字作为<br>前面的引言</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;label&gt;&lt;&#x2F;label&gt; 这是个标签</span><br><span class="line"> &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;&quot;&gt; 这是个输入框</span><br></pre></td></tr></table></figure><h2 id="在index-html中运用的技术不是特别多，就是简单的提交输入的功能等，不过与数据库交互，用了一点的技术"><a href="#在index-html中运用的技术不是特别多，就是简单的提交输入的功能等，不过与数据库交互，用了一点的技术" class="headerlink" title="在index.html中运用的技术不是特别多，就是简单的提交输入的功能等，不过与数据库交互，用了一点的技术"></a>在index.html中运用的技术不是特别多，就是简单的提交输入的功能等，不过与数据库交互，用了一点的技术</h2><h2 id="connect-php-这个文件，是与index-html进行交互的后端处理程序"><a href="#connect-php-这个文件，是与index-html进行交互的后端处理程序" class="headerlink" title="connect.php 这个文件，是与index.html进行交互的后端处理程序"></a>connect.php 这个文件，是与index.html进行交互的后端处理程序</h2><p>在这个后端的处理程序，主要技术就是php+mysql，对数据进行处理。mysql中运用的知识就是对数据的增删改查功能。<br>在这个中，主要用的是对数据的插入功能，获取到前面的表单提交的数据，然后插入到数据中<br>要定义好input中的name<br>利用post来获取数据，post相对于get安全性更高一点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$name&#x3D;$_POST[&#39;&#39;];利用这个来获取前端表单发来的数据</span><br><span class="line"> $ip &#x3D; $_SERVER[&quot;REMOTE_ADDR&quot;]; 这个语句是用来获取用户提交的ip地址，然后在后面的语句插入数据库</span><br></pre></td></tr></table></figure><p> get_magic_quotes_gpc()中的这个函数用来防止sql注入，将一些注释字符，化为转义字符<br> 但是对这个用法，我还是不是很了解</p><h4 id="在connect-php中-加入if的判断"><a href="#在connect-php中-加入if的判断" class="headerlink" title="在connect.php中,加入if的判断"></a>在connect.php中,加入if的判断</h4><p>这个功能的实现还是依赖数据库查询，在插入数据前，查询一下今天的表有没有这个ip的存在<br>如果有，就返回错误，给予今日ip提交已达上限的提示；如果不存在，就插入数据，也是比较简单的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@$db&#x3D;mysqli_connect(&#39;localhost&#39;,&#39;root&#39;,&#39;666666&#39;,shiyan);  链接数据的代码</span><br><span class="line">$lianjie&#x3D;&quot;select ip from jiankang where ip &#x3D;&#39;$ip&#39;; &quot;;  这个是插入前的查询</span><br><span class="line">if(mysqli_query($db,$lianjie))&#123;                      &#x2F;&#x2F;if的判断</span><br><span class="line">  echo &quot;该ip地址今日提交已达上限,不可提交&quot;;</span><br><span class="line">  &#125;else &#123;</span><br><span class="line">      if(mysqli_connect_errno())&#123;</span><br><span class="line">    echo &quot;错误:你没有连接上数据库&quot;;</span><br><span class="line">    exit;</span><br><span class="line">    &#125;  </span><br><span class="line">    $q&#x3D;&quot;insert into jiankang(姓名,是否健康,有无外出,附近有无确诊病例,ip)</span><br><span class="line">    values(&#39;$name&#39;,&#39;$healthy&#39;,&#39;$waichu&#39;,&#39;$healthy2&#39;,&#39;$ip&#39;)&quot;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>网页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库|知识积累</title>
    <link href="/2020/07/09/mysql_know/"/>
    <url>/2020/07/09/mysql_know/</url>
    
    <content type="html"><![CDATA[<h3 id="设置自增加id"><a href="#设置自增加id" class="headerlink" title="设置自增加id"></a>设置自增加id</h3><a id="more"></a><p>建数据库是定义id，例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT</span><br></pre></td></tr></table></figure><p>这样就设置id为自增行，并为主键</p><hr><h3 id="设置提交数据库，自动保存当前时间"><a href="#设置提交数据库，自动保存当前时间" class="headerlink" title="设置提交数据库，自动保存当前时间"></a>设置提交数据库，自动保存当前时间</h3><p>mysql 数据库设置自动添加时间<br>1、将字段类型设为  TIMESTAMP </p><p>2、将默认值设为  CURRENT_TIMESTAMP</p>]]></content>
    
    
    
    <tags>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小程序|像素小知识</title>
    <link href="/2020/07/08/px/"/>
    <url>/2020/07/08/px/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><p>换算是以375个物理像素为基准，也就是在一个宽度为375物理像素的屏幕下，1rpx = 1px。</p><p>例子：<br>iPhone6屏幕宽度为375px，共750个物理像素，那么1rpx = 375 / 750 px = 0.5px。</p><p>这里微信主要帮我们自行转换了换算单位，用不着dpx和rem布局</p><p><img src="https://upload-images.jianshu.io/upload_images/13747278-f223551f22bb7743.png" alt="样式"></p>]]></content>
    
    
    
    <tags>
      
      <tag>小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小程序|瀑布布局</title>
    <link href="/2020/07/07/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E2%80%94%E5%B8%83%E5%B1%80(%E4%B8%80)/"/>
    <url>/2020/07/07/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E2%80%94%E5%B8%83%E5%B1%80(%E4%B8%80)/</url>
    
    <content type="html"><![CDATA[<h3 id="直接看源码吧"><a href="#直接看源码吧" class="headerlink" title="直接看源码吧"></a>直接看源码吧</h3><a id="more"></a><p>wxml:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;case-page&#x27;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;list-masonry&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;item-masonry&#x27;</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;note&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&#x27;&#123;&#123;item.url&#125;&#125;&#x27;</span> <span class="attr">mode</span>=<span class="string">&#x27;widthFix&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;item.title&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>wxss:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">page</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.case-page</span>&#123;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">20</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.list-masonry</span>&#123;</span><br><span class="line">  <span class="attribute">column-count</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">column-gap</span>: <span class="number">20</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-masonry</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">break-inside</span>: avoid;<span class="comment">/*避免在元素内部插入分页符*/</span></span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box; </span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20</span>rpx;</span><br><span class="line">  <span class="attribute">margin-bottom</span>:<span class="number">20</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-masonry</span> <span class="selector-tag">image</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JS:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 页面的初始数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  data: &#123;</span><br><span class="line">    imgWidth: <span class="number">0</span>, <span class="attr">imgHeight</span>: <span class="number">0</span>,</span><br><span class="line">    note: [</span><br><span class="line">      &#123;</span><br><span class="line">        title: <span class="string">&#x27;案例名称&#x27;</span>,</span><br><span class="line">        url: <span class="string">&#x27;http://zq.jhcms.cn/attachs/photo/201711/20171130_176CFE51B6710715B1BBBEF2F86ACB0C.jpg&#x27;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        title: <span class="string">&#x27;你所不知道的红酒知识&#x27;</span>,</span><br><span class="line">        url: <span class="string">&#x27;http://img3.imgtn.bdimg.com/it/u=1417732605,3777474040&amp;fm=26&amp;gp=0.jpg&#x27;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        title: <span class="string">&#x27;红酒知识&#x27;</span>,</span><br><span class="line">        url: <span class="string">&#x27;http://f10.baidu.com/it/u=121654667,1482133440&amp;fm=72&#x27;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        title: <span class="string">&#x27;案例名称&#x27;</span>,</span><br><span class="line">        url: <span class="string">&#x27;http://zq.jhcms.cn/attachs/photo/201711/20171130_9E39DA252E3946BE36218D85876C4AB4.jpg&#x27;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        title: <span class="string">&#x27;案例名称&#x27;</span>,</span><br><span class="line">        url: <span class="string">&#x27;http://img3.imgtn.bdimg.com/it/u=1417732605,3777474040&amp;fm=26&amp;gp=0.jpg&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line"> </span><br><span class="line">      &#123;</span><br><span class="line">        title: <span class="string">&#x27;案例名称&#x27;</span>,</span><br><span class="line">        url: <span class="string">&#x27;http://f10.baidu.com/it/u=121654667,1482133440&amp;fm=72&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        title: <span class="string">&#x27;案例名称&#x27;</span>,</span><br><span class="line">        url: <span class="string">&#x27;http://img4.imgtn.bdimg.com/it/u=2748975304,2710656664&amp;fm=26&amp;gp=0.jpg&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        title: <span class="string">&#x27;案例名称&#x27;</span>,</span><br><span class="line">        url: <span class="string">&#x27;http://img2.imgtn.bdimg.com/it/u=1561660534,130168102&amp;fm=26&amp;gp=0.jpg&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        title: <span class="string">&#x27;案例名称&#x27;</span>,</span><br><span class="line">        url: <span class="string">&#x27;http://img3.imgtn.bdimg.com/it/u=1417732605,3777474040&amp;fm=26&amp;gp=0.jpg&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><!-- more -->]]></content>
    
    
    
    <tags>
      
      <tag>小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>css之翻转变幻</title>
    <link href="/2020/07/05/css%E4%B9%8B%E7%BF%BB%E8%BD%AC%E5%8F%98%E5%B9%BB%E2%80%94%E2%80%94%E5%AE%9E%E8%B7%B5%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2020/07/05/css%E4%B9%8B%E7%BF%BB%E8%BD%AC%E5%8F%98%E5%B9%BB%E2%80%94%E2%80%94%E5%AE%9E%E8%B7%B5%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h3 id="直接看源码吧"><a href="#直接看源码吧" class="headerlink" title="直接看源码吧"></a>直接看源码吧</h3><a id="more"></a><p>css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">          <span class="attribute">min-height</span>: <span class="number">500px</span>;</span><br><span class="line">          <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">display</span>: flex;</span><br><span class="line">          <span class="attribute">justify-content</span>: center;</span><br><span class="line">          <span class="attribute">align-items</span>: center;</span><br><span class="line">          <span class="attribute">background-color</span>: <span class="number">#1db7c2</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.card</span>&#123;</span><br><span class="line">        <span class="attribute">position</span>: relative;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">perspective</span>: <span class="number">1000px</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.cover</span>,<span class="selector-class">.back</span>&#123;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.5</span>);</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">display</span>: flex;</span><br><span class="line">        <span class="attribute">justify-content</span>: center;</span><br><span class="line">        <span class="attribute">align-items</span>: center;</span><br><span class="line">        <span class="attribute">backface-visibility</span>: hidden;</span><br><span class="line">        </span><br><span class="line">        <span class="attribute">transition</span>: all <span class="number">1s</span> ease-in-out;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.cover</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0deg</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.back</span>&#123;</span><br><span class="line"></span><br><span class="line">     <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-<span class="number">180deg</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.card</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.cover</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.card</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.back</span>&#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0deg</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><pre><code>body部分</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cover&quot;</span>&gt;</span>cover<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;back&quot;</span>&gt;</span>back<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/06/19/hello-world/"/>
    <url>/2020/06/19/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><a id="more"></a>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
